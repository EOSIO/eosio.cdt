steps:

  - wait

  - label: ":aws: Amazon_Linux 2 - Build"
    command:
      - "./.cicd/build.sh"
      - "tar -pczf build.tar.gz build && buildkite-agent artifact upload build.tar.gz"
    env:
      IMAGE_TAG: "amazonlinux-2"
    agents:
      queue: "automation-eks-eos-builder-fleet"
    timeout: ${TIMEOUT:-60}
    skip: $SKIP_AMAZON_LINUX_2

  - label: ":centos: CentOS 7.7 - Build"
    command:
      - "./.cicd/build.sh"
      - "tar -pczf build.tar.gz build && buildkite-agent artifact upload build.tar.gz"
    env: 
      IMAGE_TAG: "centos-7.7"
    agents:
      queue: "automation-eks-eos-builder-fleet"
    timeout: ${TIMEOUT:-60}
    skip: $SKIP_CENTOS_7

  - label: ":centos: CentOS 8 - Build"
    command:
      - "./.cicd/build.sh"
      - "tar -pczf build.tar.gz build && buildkite-agent artifact upload build.tar.gz"
    env: 
      IMAGE_TAG: "centos-8"
    agents:
      queue: "automation-eks-eos-builder-fleet"
    timeout: ${TIMEOUT:-60}
    skip: $SKIP_CENTOS_8

  - label: ":ubuntu: Ubuntu 16.04 - Build"
    command:
      - "./.cicd/build.sh"
      - "tar -pczf build.tar.gz build && buildkite-agent artifact upload build.tar.gz"
    env: 
      IMAGE_TAG: "ubuntu-16.04"
    agents:
      queue: "automation-eks-eos-builder-fleet"
    timeout: ${TIMEOUT:-60}
    skip: $SKIP_UBUNTU_16

  - label: ":ubuntu: Ubuntu 18.04 - Build"
    command:
      - "./.cicd/build.sh"
      - "tar -pczf build.tar.gz build && buildkite-agent artifact upload build.tar.gz"
    env:
      IMAGE_TAG: "ubuntu-18.04"
    agents:
      queue: "automation-eks-eos-builder-fleet"
    timeout: ${TIMEOUT:-60}
    skip: $SKIP_UBUNTU_18

  - label: ":ubuntu: Ubuntu 20.04 - Build"
    command:
      - "./.cicd/build.sh"
      - "tar -pczf build.tar.gz build && buildkite-agent artifact upload build.tar.gz"
    env:
      IMAGE_TAG: "ubuntu-20.04"
    agents:
      queue: "automation-eks-eos-builder-fleet"
    timeout: ${TIMEOUT:-60}
    skip: $SKIP_UBUNTU_20

  - label: ":darwin: macOS 10.14 - Build"
    command:
      - "brew update && brew upgrade"
      - "brew install git automake libtool wget cmake gmp gettext doxygen graphviz lcov python@3"
      - "git clone $BUILDKITE_REPO eosio.cdt"
      - "cd eosio.cdt && if [[ $BUILDKITE_BRANCH =~ ^pull/[0-9]+/head: ]]; then git fetch -v --prune origin refs/pull/$(echo $BUILDKITE_BRANCH | cut -d/ -f2)/head; fi"
      - "cd eosio.cdt && git checkout -f $BUILDKITE_COMMIT && git submodule update --init --recursive"
      - "cd eosio.cdt && ./.cicd/build.sh"
      - "cd eosio.cdt && tar -pczf build.tar.gz build && buildkite-agent artifact upload build.tar.gz"
    plugins:
      - EOSIO/anka#v0.6.1:
          no-volume: true
          inherit-environment-vars: true
          vm-name: 10.14.6_6C_14G_80G
          vm-registry-tag: "clean::cicd::git-ssh::nas::brew::buildkite-agent"
          modify-cpu: 12
          modify-ram: 24
          always-pull: true
          debug: true
          wait-network: true
      - EOSIO/skip-checkout#v0.1.1:
          cd: ~
    agents:
      - "queue=mac-anka-large-node-fleet"
    skip: $SKIP_MACOS_10_14

  - label: ":darwin: macOS 10.15 - Build"
    command:
      - "brew update && brew upgrade"
      - "brew install git automake libtool wget cmake gmp gettext doxygen graphviz lcov python@3"
      - "git clone $BUILDKITE_REPO eosio.cdt"
      - "cd eosio.cdt && if [[ $BUILDKITE_BRANCH =~ ^pull/[0-9]+/head: ]]; then git fetch -v --prune origin refs/pull/$(echo $BUILDKITE_BRANCH | cut -d/ -f2)/head; fi"
      - "cd eosio.cdt && git checkout -f $BUILDKITE_COMMIT && git submodule update --init --recursive"
      - "cd eosio.cdt && ./.cicd/build.sh"
      - "cd eosio.cdt && tar -pczf build.tar.gz build && buildkite-agent artifact upload build.tar.gz"
    plugins:
      - EOSIO/anka#v0.6.1:
          no-volume: true
          inherit-environment-vars: true
          vm-name: 10.15.5_6C_14G_80G
          vm-registry-tag: "clean::cicd::git-ssh::nas::brew::buildkite-agent"
          modify-cpu: 12
          modify-ram: 24
          always-pull: true
          debug: true
          wait-network: true
    agents:
      - "queue=mac-anka-large-node-fleet"
    skip: $SKIP_MACOS_10_15


  - wait

  - label: ":aws: Amazon_Linux 2 - Unit Tests"
    command:
      - "buildkite-agent artifact download build.tar.gz . --step ':aws: Amazon_Linux 2 - Build' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/tests.sh"
    env:
      IMAGE_TAG: "amazonlinux-2"
    agents:
      queue: "automation-eks-eos-tester-fleet"
    timeout: ${TIMEOUT:-10}
    skip: ${SKIP_AMAZON_LINUX_2}${SKIP_UNIT_TESTS}

  - label: ":centos: CentOS 7.7 - Unit Tests"
    command:
      - "buildkite-agent artifact download build.tar.gz . --step ':centos: CentOS 7.7 - Build' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/tests.sh"
    env: 
      IMAGE_TAG: "centos-7.7"
    agents:
      queue: "automation-eks-eos-tester-fleet"
    timeout: ${TIMEOUT:-10}
    skip: ${SKIP_CENTOS_7}${SKIP_UNIT_TESTS}

  - label: ":centos: CentOS 8 - Unit Tests"
    command:
      - "buildkite-agent artifact download build.tar.gz . --step ':centos: CentOS 8 - Build' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/tests.sh"
    env: 
      IMAGE_TAG: "centos-8"
    agents:
      queue: "automation-eks-eos-tester-fleet"
    timeout: ${TIMEOUT:-10}
    skip: ${SKIP_CENTOS_8}${SKIP_UNIT_TESTS}

  - label: ":ubuntu: Ubuntu 16.04 - Unit Tests"
    command:
      - "buildkite-agent artifact download build.tar.gz . --step ':ubuntu: Ubuntu 16.04 - Build' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/tests.sh"
    env: 
      IMAGE_TAG: "ubuntu-16.04"
    agents:
      queue: "automation-eks-eos-tester-fleet"
    timeout: ${TIMEOUT:-10}
    skip: ${SKIP_UBUNTU_16}${SKIP_UNIT_TESTS}

  - label: ":ubuntu: Ubuntu 18.04 - Unit Tests"
    command:
      - "buildkite-agent artifact download build.tar.gz . --step ':ubuntu: Ubuntu 18.04 - Build' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/tests.sh"
    env:
      IMAGE_TAG: "ubuntu-18.04"
    agents:
      queue: "automation-eks-eos-tester-fleet"
    timeout: ${TIMEOUT:-10}
    skip: ${SKIP_UBUNTU_18}${SKIP_UNIT_TESTS}

  - label: ":ubuntu: Ubuntu 20.04 - Unit Tests"
    command:
      - "buildkite-agent artifact download build.tar.gz . --step ':ubuntu: Ubuntu 20.04 - Build' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/tests.sh"
    env:
      IMAGE_TAG: "ubuntu-20.04"
    agents:
      queue: "automation-eks-eos-tester-fleet"
    timeout: ${TIMEOUT:-10}
    skip: ${SKIP_UBUNTU_20}${SKIP_UNIT_TESTS}

  - label: ":darwin: macOS 10.14 - Unit Tests"
    command:
      - "brew update && brew upgrade"
      - "brew install git automake libtool wget cmake gmp gettext doxygen graphviz lcov python@3"
      - "git clone $BUILDKITE_REPO eosio.cdt"
      - "cd eosio.cdt && if [[ $BUILDKITE_BRANCH =~ ^pull/[0-9]+/head: ]]; then git fetch -v --prune origin refs/pull/$(echo $BUILDKITE_BRANCH | cut -d/ -f2)/head; fi"
      - "cd eosio.cdt && git checkout -f $BUILDKITE_COMMIT && git submodule update --init --recursive"
      - "cd eosio.cdt && buildkite-agent artifact download build.tar.gz . --step ':darwin: macOS 10.14 - Build' && tar -xzf build.tar.gz"
      - "cd eosio.cdt && ./.cicd/tests.sh"
    plugins:
      - EOSIO/anka#v0.6.1:
          no-volume: true
          inherit-environment-vars: true
          vm-name: 10.14.6_6C_14G_80G
          vm-registry-tag: "clean::cicd::git-ssh::nas::brew::buildkite-agent"
          modify-cpu: 12
          modify-ram: 24
          always-pull: true
          debug: true
          wait-network: true
      - EOSIO/skip-checkout#v0.1.1:
          cd: ~
    agents:
      - "queue=mac-anka-large-node-fleet"
    skip: ${SKIP_MACOS_10_14}${SKIP_UNIT_TESTS}

  - label: ":darwin: macOS 10.15 - Unit Tests"
    command:
      - "brew update && brew upgrade"
      - "brew install git automake libtool wget cmake gmp gettext doxygen graphviz lcov python@3"
      - "git clone $BUILDKITE_REPO eosio.cdt"
      - "cd eosio.cdt && if [[ $BUILDKITE_BRANCH =~ ^pull/[0-9]+/head: ]]; then git fetch -v --prune origin refs/pull/$(echo $BUILDKITE_BRANCH | cut -d/ -f2)/head; fi"
      - "cd eosio.cdt && git checkout -f $BUILDKITE_COMMIT && git submodule update --init --recursive"
      - "cd eosio.cdt && buildkite-agent artifact download build.tar.gz . --step ':darwin: macOS 10.15 - Build' && tar -xzf build.tar.gz"
      - "cd eosio.cdt && ./.cicd/tests.sh"
    plugins:
      - EOSIO/anka#v0.6.1:
          no-volume: true
          inherit-environment-vars: true
          vm-name: 10.15.5_6C_14G_80G
          vm-registry-tag: "clean::cicd::git-ssh::nas::brew::buildkite-agent"
          modify-cpu: 12
          modify-ram: 24
          always-pull: true
          debug: true
          wait-network: true
    agents:
      - "queue=mac-anka-large-node-fleet"
    skip: ${SKIP_MACOS_10_15}${SKIP_UNIT_TESTS}

  - label: ":aws: Amazon_Linux 2 - Toolchain Tests"
    command:
      - "buildkite-agent artifact download build.tar.gz . --step ':aws: Amazon_Linux 2 - Build' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/toolchain-tests.sh"
    env:
      IMAGE_TAG: "amazonlinux-2"
    agents:
      queue: "automation-eks-eos-tester-fleet"
    timeout: ${TIMEOUT:-10}
    skip: ${SKIP_AMAZON_LINUX_2}${SKIP_TOOLCHAIN_TESTS}

  - label: ":centos: CentOS 7.7 - Toolchain Tests"
    command:
      - "buildkite-agent artifact download build.tar.gz . --step ':centos: CentOS 7.7 - Build' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/toolchain-tests.sh"
    env: 
      IMAGE_TAG: "centos-7.7"
    agents:
      queue: "automation-eks-eos-tester-fleet"
    timeout: ${TIMEOUT:-10}
    skip: ${SKIP_CENTOS_7}${SKIP_TOOLCHAIN_TESTS}

  - label: ":centos: CentOS 8 - Toolchain Tests"
    command:
      - "buildkite-agent artifact download build.tar.gz . --step ':centos: CentOS 8 - Build' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/toolchain-tests.sh"
    env: 
      IMAGE_TAG: "centos-8"
    agents:
      queue: "automation-eks-eos-tester-fleet"
    timeout: ${TIMEOUT:-10}
    skip: ${SKIP_CENTOS_8}${SKIP_TOOLCHAIN_TESTS}

  - label: ":ubuntu: Ubuntu 16.04 - Toolchain Tests"
    command:
      - "buildkite-agent artifact download build.tar.gz . --step ':ubuntu: Ubuntu 16.04 - Build' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/toolchain-tests.sh"
    env: 
      IMAGE_TAG: "ubuntu-16.04"
    agents:
      queue: "automation-eks-eos-tester-fleet"
    timeout: ${TIMEOUT:-10}
    skip: ${SKIP_UBUNTU_16}${SKIP_TOOLCHAIN_TESTS}

  - label: ":ubuntu: Ubuntu 18.04 - Toolchain Tests"
    command:
      - "buildkite-agent artifact download build.tar.gz . --step ':ubuntu: Ubuntu 18.04 - Build' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/toolchain-tests.sh"
    env:
      IMAGE_TAG: "ubuntu-18.04"
    agents:
      queue: "automation-eks-eos-tester-fleet"
    timeout: ${TIMEOUT:-10}
    skip: ${SKIP_UBUNTU_18}${SKIP_TOOLCHAIN_TESTS}

  - label: ":ubuntu: Ubuntu 20.04 - Toolchain Tests"
    command:
      - "buildkite-agent artifact download build.tar.gz . --step ':ubuntu: Ubuntu 20.04 - Build' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/toolchain-tests.sh"
    env:
      IMAGE_TAG: "ubuntu-20.04"
    agents:
      queue: "automation-eks-eos-tester-fleet"
    timeout: ${TIMEOUT:-10}
    skip: ${SKIP_UBUNTU_20}${SKIP_TOOLCHAIN_TESTS}

  - label: ":darwin: macOS 10.14 - Toolchain Tests"
    command:
      - "brew update && brew upgrade"
      - "brew install git automake libtool wget cmake gmp gettext doxygen graphviz lcov python@3"
      - "git clone $BUILDKITE_REPO eosio.cdt"
      - "cd eosio.cdt && if [[ $BUILDKITE_BRANCH =~ ^pull/[0-9]+/head: ]]; then git fetch -v --prune origin refs/pull/$(echo $BUILDKITE_BRANCH | cut -d/ -f2)/head; fi"
      - "cd eosio.cdt && git checkout -f $BUILDKITE_COMMIT && git submodule update --init --recursive"
      - "cd eosio.cdt && buildkite-agent artifact download build.tar.gz . --step ':darwin: macOS 10.14 - Build' && tar -xzf build.tar.gz"
      - "cd eosio.cdt && ./.cicd/toolchain-tests.sh"
    plugins:
      - EOSIO/anka#v0.6.1:
          no-volume: true
          inherit-environment-vars: true
          vm-name: 10.14.6_6C_14G_80G
          vm-registry-tag: "clean::cicd::git-ssh::nas::brew::buildkite-agent"
          modify-cpu: 12
          modify-ram: 24
          always-pull: true
          debug: true
          wait-network: true
      - EOSIO/skip-checkout#v0.1.1:
          cd: ~
    agents:
      - "queue=mac-anka-large-node-fleet"
    skip: ${SKIP_MACOS_10_14}${SKIP_TOOLCHAIN_TESTS}

  - label: ":darwin: macOS 10.15 - Toolchain Tests"
    command:
      - "brew update && brew upgrade"
      - "brew install git automake libtool wget cmake gmp gettext doxygen graphviz lcov python@3"
      - "git clone $BUILDKITE_REPO eosio.cdt"
      - "cd eosio.cdt && if [[ $BUILDKITE_BRANCH =~ ^pull/[0-9]+/head: ]]; then git fetch -v --prune origin refs/pull/$(echo $BUILDKITE_BRANCH | cut -d/ -f2)/head; fi"
      - "cd eosio.cdt && git checkout -f $BUILDKITE_COMMIT && git submodule update --init --recursive"
      - "cd eosio.cdt && buildkite-agent artifact download build.tar.gz . --step ':darwin: macOS 10.15 - Build' && tar -xzf build.tar.gz"
      - "cd eosio.cdt && ./.cicd/toolchain-tests.sh"
    plugins:
      - EOSIO/anka#v0.6.1:
          no-volume: true
          inherit-environment-vars: true
          vm-name: 10.15.5_6C_14G_80G
          vm-registry-tag: "clean::cicd::git-ssh::nas::brew::buildkite-agent"
          modify-cpu: 12
          modify-ram: 24
          always-pull: true
          debug: true
          wait-network: true
      - EOSIO/skip-checkout#v0.1.1:
          cd: ~
    agents:
      - "queue=mac-anka-large-node-fleet"
    skip: ${SKIP_MACOS_10_14}${SKIP_TOOLCHAIN_TESTS}

  - label: ":ubuntu: Ubuntu 18.04 - Integration Tests"
    command:
      - "buildkite-agent artifact download build.tar.gz . --step ':ubuntu: Ubuntu 18.04 - Build' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/integration-tests.sh"
    env:
      IMAGE_TAG: "ubuntu-18.04"
    agents:
      queue: "automation-eks-eos-tester-fleet"
    timeout: ${TIMEOUT:-10}
    skip: ${SKIP_UBUNTU_18}${SKIP_INTEGRATION_TESTS}

  - wait:
    continue_on_failure: true

  - label: ":bar_chart: Unit Tests Metrics"
    command: |
      echo '+++ :compression: Extracting Unit Tests Metrics Code'
      tar -zxf .cicd/metrics/test-metrics.tar.gz
      echo '+++ :javascript: Running test-metrics.js'
      node --max-old-space-size=32768 test-metrics.js
    agents:
      queue: "automation-eks-eos-tester-fleet"
    timeout: 10
    soft_fail: true

  - wait

  - label: ":aws: Amazon_Linux 2 - Package Builder"
    command:
      - "buildkite-agent artifact download build.tar.gz . --step ':aws: Amazon_Linux 2 - Build' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/package.sh"
    env:
      BUILDKITE_AGENT_ACCESS_TOKEN:
      IMAGE_TAG: "amazonlinux-2"
      OS: "amzn" # OS and PKGTYPE required for lambdas
      PKGTYPE: "rpm"
    agents:
      queue: "automation-eks-eos-tester-fleet"
    timeout: ${TIMEOUT:-10}
    skip: ${SKIP_AMAZON_LINUX_2}${SKIP_PACKAGE_BUILDER}

  - label: ":centos: Centos 7.7 - Package Builder"
    command:
      - "buildkite-agent artifact download build.tar.gz . --step ':centos: CentOS 7.7 - Build' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/package.sh"
    env:
      BUILDKITE_AGENT_ACCESS_TOKEN:
      IMAGE_TAG: "centos-7.7"
      OS: "el7" # OS and PKGTYPE required for lambdas
      PKGTYPE: "rpm"
    agents:
      queue: "automation-eks-eos-tester-fleet"
    timeout: ${TIMEOUT:-10}
    skip: ${SKIP_CENTOS_7}${SKIP_PACKAGE_BUILDER}

  - label: ":centos: Centos 8 - Package Builder"
    command:
      - "buildkite-agent artifact download build.tar.gz . --step ':centos: CentOS 8 - Build' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/package.sh"
    env:
      BUILDKITE_AGENT_ACCESS_TOKEN:
      IMAGE_TAG: "centos-8"
      OS: "centos" # OS and PKGTYPE required for lambdas
      PKGTYPE: "rpm"
    agents:
      queue: "automation-eks-eos-tester-fleet"
    timeout: ${TIMEOUT:-10}
    skip: ${SKIP_CENTOS_8}${SKIP_PACKAGE_BUILDER}

  - label: ":ubuntu: Ubuntu 16.04 - Package Builder"
    command:
      - "buildkite-agent artifact download build.tar.gz . --step ':ubuntu: Ubuntu 16.04 - Build' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/package.sh"
    env:
      BUILDKITE_AGENT_ACCESS_TOKEN:
      IMAGE_TAG: "ubuntu-16.04"
      OS: "ubuntu-16.04" # OS and PKGTYPE required for lambdas
      PKGTYPE: "deb"
    agents:
      queue: "automation-eks-eos-tester-fleet"
    timeout: ${TIMEOUT:-10}
    skip: ${SKIP_UBUNTU_16}${SKIP_PACKAGE_BUILDER}

  - label: ":ubuntu: Ubuntu 18.04 - Package Builder"
    command:
      - "buildkite-agent artifact download build.tar.gz . --step ':ubuntu: Ubuntu 18.04 - Build' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/package.sh"
    env:
      BUILDKITE_AGENT_ACCESS_TOKEN:
      IMAGE_TAG: "ubuntu-18.04"
      OS: "ubuntu-18.04" # OS and PKGTYPE required for lambdas
      PKGTYPE: "deb"
    agents:
      queue: "automation-eks-eos-tester-fleet"
    timeout: ${TIMEOUT:-10}
    skip: ${SKIP_UBUNTU_18}${SKIP_PACKAGE_BUILDER}

  - label: ":ubuntu: Ubuntu 20.04 - Package Builder"
    command:
      - "buildkite-agent artifact download build.tar.gz . --step ':ubuntu: Ubuntu 20.04 - Build' --agent-access-token $$BUILDKITE_AGENT_ACCESS_TOKEN && tar -xzf build.tar.gz"
      - "./.cicd/package.sh"
    env:
      BUILDKITE_AGENT_ACCESS_TOKEN:
      IMAGE_TAG: "ubuntu-20.04"
      OS: "ubuntu-20.04" # OS and PKGTYPE required for lambdas
      PKGTYPE: "deb"
    agents:
      queue: "automation-eks-eos-tester-fleet"
    timeout: ${TIMEOUT:-10}
    skip: ${SKIP_UBUNTU_20}${SKIP_PACKAGE_BUILDER}

  - label: ":darwin: Mojave - Package Builder"
    command:
      - "git clone $BUILDKITE_REPO eosio.cdt"
      - "cd eosio.cdt && if [[ $BUILDKITE_BRANCH =~ ^pull/[0-9]+/head: ]]; then git fetch -v --prune origin refs/pull/$(echo $BUILDKITE_BRANCH | cut -d/ -f2)/head; fi"
      - "cd eosio.cdt && git checkout -f $BUILDKITE_COMMIT && git submodule update --init --recursive"
      - "cd eosio.cdt && buildkite-agent artifact download build.tar.gz . --step ':darwin: macOS 10.14 - Build' && tar -xzf build.tar.gz"
      - "cd eosio.cdt && ./.cicd/package.sh"
    plugins:
      - EOSIO/anka#v0.6.1:
          no-volume: true
          inherit-environment-vars: true
          vm-name: 10.14.6_6C_14G_80G
          vm-registry-tag: "clean::cicd::git-ssh::nas::brew::buildkite-agent"
          always-pull: true
          debug: true
          wait-network: true
      - EOSIO/skip-checkout#v0.1.1:
          cd: ~
    agents:
      - "queue=mac-anka-node-fleet"
    timeout: 10
    skip: ${SKIP_MACOS_10_14}${SKIP_PACKAGE_BUILDER}

  - label: ":darwin: Catalina - Package Builder"
    command:
      - "git clone $BUILDKITE_REPO eosio.cdt"
      - "cd eosio.cdt && if [[ $BUILDKITE_BRANCH =~ ^pull/[0-9]+/head: ]]; then git fetch -v --prune origin refs/pull/$(echo $BUILDKITE_BRANCH | cut -d/ -f2)/head; fi"
      - "cd eosio.cdt && git checkout -f $BUILDKITE_COMMIT && git submodule update --init --recursive"
      - "cd eosio.cdt && buildkite-agent artifact download build.tar.gz . --step ':darwin: macOS 10.15 - Build' && tar -xzf build.tar.gz"
      - "cd eosio.cdt && ./.cicd/package.sh"
    plugins:
      - EOSIO/anka#v0.6.1:
          no-volume: true
          inherit-environment-vars: true
          vm-name: 10.15.5_6C_14G_80G
          vm-registry-tag: "clean::cicd::git-ssh::nas::brew::buildkite-agent"
          always-pull: true
          debug: true
          wait-network: true
    agents:
      - "queue=mac-anka-node-fleet"
    timeout: 20
    skip: ${SKIP_MACOS_10_15}${SKIP_PACKAGE_BUILDER}

  - wait
  
  - label: ":docker::ubuntu: Docker - Build 18.04 Docker Image"
    command: "./.cicd/create-docker-from-binary.sh"
    agents:
      queue: "automation-eks-eos-tester-fleet"
    timeout: 10

  - label: ":git: Git Submodule Regression Check"
    command:
      - "./.cicd/submodule-regression-checker.sh"
    agents:
      queue: "automation-basic-builder-fleet"
    timeout: 5
