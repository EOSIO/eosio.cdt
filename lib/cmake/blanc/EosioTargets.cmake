# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget eosio eosio_malloc eosio_dsm eosio_cmem eosio_tester softfloat)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target eosio
add_library(eosio STATIC IMPORTED)

set_target_properties(eosio PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "__eosio_cdt__"
  INTERFACE_INCLUDE_DIRECTORIES "/home/huangming.huang/blanc/build/libraries/_deps/boost-src;/home/huangming.huang/blanc/libraries/eosiolib/../meta_refl/include;/home/huangming.huang/blanc/libraries/eosiolib/core;/home/huangming.huang/blanc/libraries/eosiolib/contracts;/home/huangming.huang/blanc/build/libraries/_deps/abieos-src/include;/home/huangming.huang/blanc/build/libraries/_deps/abieos-src/external/rapidjson/include"
)

# Create imported target eosio_malloc
add_library(eosio_malloc STATIC IMPORTED)

set_target_properties(eosio_malloc PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "__eosio_cdt__"
  INTERFACE_INCLUDE_DIRECTORIES "/home/huangming.huang/blanc/libraries/eosiolib/core;/home/huangming.huang/blanc/build/libraries/_deps/abieos-src/include;/home/huangming.huang/blanc/build/libraries/_deps/abieos-src/external/rapidjson/include"
)

# Create imported target eosio_dsm
add_library(eosio_dsm STATIC IMPORTED)

set_target_properties(eosio_dsm PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "__eosio_cdt__"
  INTERFACE_INCLUDE_DIRECTORIES "/home/huangming.huang/blanc/libraries/eosiolib/core;/home/huangming.huang/blanc/build/libraries/_deps/abieos-src/include;/home/huangming.huang/blanc/build/libraries/_deps/abieos-src/external/rapidjson/include"
)

# Create imported target eosio_cmem
add_library(eosio_cmem STATIC IMPORTED)

# Create imported target eosio_tester
add_library(eosio_tester STATIC IMPORTED)

set_target_properties(eosio_tester PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "__eosio_cdt__"
  INTERFACE_INCLUDE_DIRECTORIES "/home/huangming.huang/blanc/libraries/eosiolib/tester;/home/huangming.huang/blanc/build/libraries/_deps/fmt-src/include"
  INTERFACE_LINK_LIBRARIES "eosio"
)

# Create imported target softfloat
add_library(softfloat STATIC IMPORTED)

# Import target "eosio" for configuration "Release"
set_property(TARGET eosio APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(eosio PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C;CXX"
  IMPORTED_LOCATION_RELEASE "/home/huangming.huang/blanc/build/libraries/eosiolib/libeosio.a"
  )

# Import target "eosio_malloc" for configuration "Release"
set_property(TARGET eosio_malloc APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(eosio_malloc PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/home/huangming.huang/blanc/build/libraries/eosiolib/libeosio_malloc.a"
  )

# Import target "eosio_dsm" for configuration "Release"
set_property(TARGET eosio_dsm APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(eosio_dsm PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/home/huangming.huang/blanc/build/libraries/eosiolib/libeosio_dsm.a"
  )

# Import target "eosio_cmem" for configuration "Release"
set_property(TARGET eosio_cmem APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(eosio_cmem PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/home/huangming.huang/blanc/build/libraries/eosiolib/libeosio_cmem.a"
  )

# Import target "eosio_tester" for configuration "Release"
set_property(TARGET eosio_tester APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(eosio_tester PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/home/huangming.huang/blanc/build/libraries/eosiolib/libeosio_tester.a"
  )

# Import target "softfloat" for configuration "Release"
set_property(TARGET softfloat APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(softfloat PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/huangming.huang/blanc/build/libraries/softfloat/libsoftfloat.a"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
