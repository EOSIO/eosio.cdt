;;; TOOL: run-interp
;;; ARGS*: -v --enable-all
;;; ARGS1: --host-print

(module
  (import "host" "print" (func $print (param i32)))

  (type $empty (func))
  (func $empty)
  (memory 1 1 shared)
  (table $table1 anyfunc (elem $empty $empty))
  (global $g (mut i32) (i32.const 0))
  (data "")
  (elem funcref)

  (; 0x00 ;) (func (export "unreachable") unreachable)
  (; 0x01 ;) ;; nop       -- not generated in interpreter
  (; 0x02 ;) ;; block     -- not generated in interpreter
  (; 0x03 ;) ;; loop      -- not generated in interpreter
  (; 0x04 ;) ;; if        -- not generated in interpreter
  (; 0x05 ;) ;; else      -- not generated in interpreter
  (; 0x06 ;) ;; try       -- not implemented
  (; 0x07 ;) ;; catch     -- not implemented
  (; 0x08 ;) ;; throw     -- not implemented
  (; 0x09 ;) ;; rethrow   -- not implemented
  (; 0x0a ;) ;; catch_all -- not implemented
  (; 0x0b ;) ;; end       -- not generated in interpreter
  (; 0x0c ;) (func (export "br") br 0)
  (; 0x0d ;) ;; 0x0d br_if  ;; not generated in interpreter
  (; 0x0e ;) (func (export "br_table") i32.const 1 br_table 0)
  (; 0x0f ;) (func (export "return") return)
  (; 0x10 ;) (func (export "call") call $empty)
  (; 0x11 ;) (func (export "call_indirect") i32.const 1 call_indirect (type $empty))

  ;; --enable-tail-call
  (; 0x12 ;) (func (export "return_call") return_call $empty)
  (; 0x13 ;) (func (export "return_call_indirect") i32.const 1 return_call_indirect (type $empty))

  (; 0x1a ;) (func (export "drop") i32.const 1 drop)
  (; 0x1b ;) (func (export "select") i32.const 1 i32.const 2 i32.const 3 select drop)
  (; 0x1c ;) (func (export "select_t") i32.const 1 i32.const 2 i32.const 3 select (result i32) drop)
  (; 0x20 ;) (func (export "get_local") (local i32) get_local 0 drop)
  (; 0x21 ;) (func (export "set_local") (local i32) i32.const 1 set_local 0)
  (; 0x22 ;) (func (export "tee_local") (local i32) i32.const 1 tee_local 0 drop)
  (; 0x23 ;) (func (export "get_global") get_global 0 drop)
  (; 0x24 ;) (func (export "set_global") i32.const 1 set_global 0)
  (; 0x28 ;) (func (export "i32.load") i32.const 1 i32.load offset=2 drop)
  (; 0x29 ;) (func (export "i64.load") i32.const 1 i64.load offset=2 drop)
  (; 0x2a ;) (func (export "f32.load") i32.const 1 f32.load offset=2 drop)
  (; 0x2b ;) (func (export "f64.load") i32.const 1 f64.load offset=2 drop)
  (; 0x2c ;) (func (export "i32.load8_s") i32.const 1 i32.load8_s offset=2 drop)
  (; 0x2d ;) (func (export "i32.load8_u") i32.const 1 i32.load8_u offset=2 drop)
  (; 0x2e ;) (func (export "i32.load16_s") i32.const 1 i32.load16_s offset=2 drop)
  (; 0x2f ;) (func (export "i32.load16_u") i32.const 1 i32.load16_u offset=2 drop)
  (; 0x30 ;) (func (export "i64.load8_s") i32.const 1 i64.load8_s offset=2 drop)
  (; 0x31 ;) (func (export "i64.load8_u") i32.const 1 i64.load8_u offset=2 drop)
  (; 0x32 ;) (func (export "i64.load16_s") i32.const 1 i64.load16_s offset=2 drop)
  (; 0x33 ;) (func (export "i64.load16_u") i32.const 1 i64.load16_u offset=2 drop)
  (; 0x34 ;) (func (export "i64.load32_s") i32.const 1 i64.load32_s offset=2 drop)
  (; 0x35 ;) (func (export "i64.load32_u") i32.const 1 i64.load32_u offset=2 drop)
  (; 0x36 ;) (func (export "i32.store") i32.const 1 i32.const 2 i32.store offset=2)
  (; 0x37 ;) (func (export "i64.store") i32.const 1 i64.const 2 i64.store offset=2)
  (; 0x38 ;) (func (export "f32.store") i32.const 1 f32.const 2 f32.store offset=2)
  (; 0x39 ;) (func (export "f64.store") i32.const 1 f64.const 2 f64.store offset=2)
  (; 0x3a ;) (func (export "i32.store8") i32.const 1 i32.const 2 i32.store8 offset=2)
  (; 0x3b ;) (func (export "i32.store16") i32.const 1 i32.const 2 i32.store16 offset=2)
  (; 0x3c ;) (func (export "i64.store8") i32.const 1 i64.const 2 i64.store8 offset=2)
  (; 0x3d ;) (func (export "i64.store16") i32.const 1 i64.const 2 i64.store16 offset=2)
  (; 0x3e ;) (func (export "i64.store32") i32.const 1 i64.const 2 i64.store32 offset=2)
  (; 0x3f ;) (func (export "current_memory") current_memory drop)
  (; 0x40 ;) (func (export "grow_memory") i32.const 1 grow_memory drop)
  (; 0x41 ;) (func (export "i32.const") i32.const 1 drop)
  (; 0x42 ;) (func (export "i64.const") i64.const 1 drop)
  (; 0x43 ;) (func (export "f32.const") f32.const 1 drop)
  (; 0x44 ;) (func (export "f64.const") f64.const 1 drop)
  (; 0x45 ;) (func (export "i32.eqz") i32.const 1 i32.eqz drop)
  (; 0x46 ;) (func (export "i32.eq") i32.const 1 i32.const 2 i32.eq drop)
  (; 0x47 ;) (func (export "i32.ne") i32.const 1 i32.const 2 i32.ne drop)
  (; 0x48 ;) (func (export "i32.lt_s") i32.const 1 i32.const 2 i32.lt_s drop)
  (; 0x49 ;) (func (export "i32.lt_u") i32.const 1 i32.const 2 i32.lt_u drop)
  (; 0x4a ;) (func (export "i32.gt_s") i32.const 1 i32.const 2 i32.gt_s drop)
  (; 0x4b ;) (func (export "i32.gt_u") i32.const 1 i32.const 2 i32.gt_u drop)
  (; 0x4c ;) (func (export "i32.le_s") i32.const 1 i32.const 2 i32.le_s drop)
  (; 0x4d ;) (func (export "i32.le_u") i32.const 1 i32.const 2 i32.le_u drop)
  (; 0x4e ;) (func (export "i32.ge_s") i32.const 1 i32.const 2 i32.ge_s drop)
  (; 0x4f ;) (func (export "i32.ge_u") i32.const 1 i32.const 2 i32.ge_u drop)
  (; 0x50 ;) (func (export "i64.eqz") i64.const 1 i64.eqz drop)
  (; 0x51 ;) (func (export "i64.eq") i64.const 1 i64.const 2 i64.eq drop)
  (; 0x52 ;) (func (export "i64.ne") i64.const 1 i64.const 2 i64.ne drop)
  (; 0x53 ;) (func (export "i64.lt_s") i64.const 1 i64.const 2 i64.lt_s drop)
  (; 0x54 ;) (func (export "i64.lt_u") i64.const 1 i64.const 2 i64.lt_u drop)
  (; 0x55 ;) (func (export "i64.gt_s") i64.const 1 i64.const 2 i64.gt_s drop)
  (; 0x56 ;) (func (export "i64.gt_u") i64.const 1 i64.const 2 i64.gt_u drop)
  (; 0x57 ;) (func (export "i64.le_s") i64.const 1 i64.const 2 i64.le_s drop)
  (; 0x58 ;) (func (export "i64.le_u") i64.const 1 i64.const 2 i64.le_u drop)
  (; 0x59 ;) (func (export "i64.ge_s") i64.const 1 i64.const 2 i64.ge_s drop)
  (; 0x5a ;) (func (export "i64.ge_u") i64.const 1 i64.const 2 i64.ge_u drop)
  (; 0x5b ;) (func (export "f32.eq") f32.const 1 f32.const 2 f32.eq drop)
  (; 0x5c ;) (func (export "f32.ne") f32.const 1 f32.const 2 f32.ne drop)
  (; 0x5d ;) (func (export "f32.lt") f32.const 1 f32.const 2 f32.lt drop)
  (; 0x5e ;) (func (export "f32.gt") f32.const 1 f32.const 2 f32.gt drop)
  (; 0x5f ;) (func (export "f32.le") f32.const 1 f32.const 2 f32.le drop)
  (; 0x60 ;) (func (export "f32.ge") f32.const 1 f32.const 2 f32.ge drop)
  (; 0x61 ;) (func (export "f64.eq") f64.const 1 f64.const 2 f64.eq drop)
  (; 0x62 ;) (func (export "f64.ne") f64.const 1 f64.const 2 f64.ne drop)
  (; 0x63 ;) (func (export "f64.lt") f64.const 1 f64.const 2 f64.lt drop)
  (; 0x64 ;) (func (export "f64.gt") f64.const 1 f64.const 2 f64.gt drop)
  (; 0x65 ;) (func (export "f64.le") f64.const 1 f64.const 2 f64.le drop)
  (; 0x66 ;) (func (export "f64.ge") f64.const 1 f64.const 2 f64.ge drop)
  (; 0x67 ;) (func (export "i32.clz") i32.const 1 i32.clz drop)
  (; 0x68 ;) (func (export "i32.ctz") i32.const 1 i32.ctz drop)
  (; 0x69 ;) (func (export "i32.popcnt") i32.const 1 i32.popcnt drop)
  (; 0x6a ;) (func (export "i32.add") i32.const 1 i32.const 2 i32.add drop)
  (; 0x6b ;) (func (export "i32.sub") i32.const 1 i32.const 2 i32.sub drop)
  (; 0x6c ;) (func (export "i32.mul") i32.const 1 i32.const 2 i32.mul drop)
  (; 0x6d ;) (func (export "i32.div_s") i32.const 1 i32.const 2 i32.div_s drop)
  (; 0x6e ;) (func (export "i32.div_u") i32.const 1 i32.const 2 i32.div_u drop)
  (; 0x6f ;) (func (export "i32.rem_s") i32.const 1 i32.const 2 i32.rem_s drop)
  (; 0x70 ;) (func (export "i32.rem_u") i32.const 1 i32.const 2 i32.rem_u drop)
  (; 0x71 ;) (func (export "i32.and") i32.const 1 i32.const 2 i32.and drop)
  (; 0x72 ;) (func (export "i32.or") i32.const 1 i32.const 2 i32.or drop)
  (; 0x73 ;) (func (export "i32.xor") i32.const 1 i32.const 2 i32.xor drop)
  (; 0x74 ;) (func (export "i32.shl") i32.const 1 i32.const 2 i32.shl drop)
  (; 0x75 ;) (func (export "i32.shr_s") i32.const 1 i32.const 2 i32.shr_s drop)
  (; 0x76 ;) (func (export "i32.shr_u") i32.const 1 i32.const 2 i32.shr_u drop)
  (; 0x77 ;) (func (export "i32.rotl") i32.const 1 i32.const 2 i32.rotl drop)
  (; 0x78 ;) (func (export "i32.rotr") i32.const 1 i32.const 2 i32.rotr drop)
  (; 0x79 ;) (func (export "i64.clz") i64.const 1 i64.clz drop)
  (; 0x7a ;) (func (export "i64.ctz") i64.const 1 i64.ctz drop)
  (; 0x7b ;) (func (export "i64.popcnt") i64.const 1 i64.popcnt drop)
  (; 0x7c ;) (func (export "i64.add") i64.const 1 i64.const 2 i64.add drop)
  (; 0x7d ;) (func (export "i64.sub") i64.const 1 i64.const 2 i64.sub drop)
  (; 0x7e ;) (func (export "i64.mul") i64.const 1 i64.const 2 i64.mul drop)
  (; 0x7f ;) (func (export "i64.div_s") i64.const 1 i64.const 2 i64.div_s drop)
  (; 0x80 ;) (func (export "i64.div_u") i64.const 1 i64.const 2 i64.div_u drop)
  (; 0x81 ;) (func (export "i64.rem_s") i64.const 1 i64.const 2 i64.rem_s drop)
  (; 0x82 ;) (func (export "i64.rem_u") i64.const 1 i64.const 2 i64.rem_u drop)
  (; 0x83 ;) (func (export "i64.and") i64.const 1 i64.const 2 i64.and drop)
  (; 0x84 ;) (func (export "i64.or") i64.const 1 i64.const 2 i64.or drop)
  (; 0x85 ;) (func (export "i64.xor") i64.const 1 i64.const 2 i64.xor drop)
  (; 0x86 ;) (func (export "i64.shl") i64.const 1 i64.const 2 i64.shl drop)
  (; 0x87 ;) (func (export "i64.shr_s") i64.const 1 i64.const 2 i64.shr_s drop)
  (; 0x88 ;) (func (export "i64.shr_u") i64.const 1 i64.const 2 i64.shr_u drop)
  (; 0x89 ;) (func (export "i64.rotl") i64.const 1 i64.const 2 i64.rotl drop)
  (; 0x8a ;) (func (export "i64.rotr") i64.const 1 i64.const 2 i64.rotr drop)
  (; 0x8b ;) (func (export "f32.abs") f32.const 1 f32.abs drop)
  (; 0x8c ;) (func (export "f32.neg") f32.const 1 f32.neg drop)
  (; 0x8d ;) (func (export "f32.ceil") f32.const 1 f32.ceil drop)
  (; 0x8e ;) (func (export "f32.floor") f32.const 1 f32.floor drop)
  (; 0x8f ;) (func (export "f32.trunc") f32.const 1 f32.trunc drop)
  (; 0x90 ;) (func (export "f32.nearest") f32.const 1 f32.nearest drop)
  (; 0x91 ;) (func (export "f32.sqrt") f32.const 1 f32.sqrt drop)
  (; 0x92 ;) (func (export "f32.add") f32.const 1 f32.const 2 f32.add drop)
  (; 0x93 ;) (func (export "f32.sub") f32.const 1 f32.const 2 f32.sub drop)
  (; 0x94 ;) (func (export "f32.mul") f32.const 1 f32.const 2 f32.mul drop)
  (; 0x95 ;) (func (export "f32.div") f32.const 1 f32.const 2 f32.div drop)
  (; 0x96 ;) (func (export "f32.min") f32.const 1 f32.const 2 f32.min drop)
  (; 0x97 ;) (func (export "f32.max") f32.const 1 f32.const 2 f32.max drop)
  (; 0x98 ;) (func (export "f32.copysign") f32.const 1 f32.const 2 f32.copysign drop)
  (; 0x99 ;) (func (export "f64.abs") f64.const 1 f64.abs drop)
  (; 0x9a ;) (func (export "f64.neg") f64.const 1 f64.neg drop)
  (; 0x9b ;) (func (export "f64.ceil") f64.const 1 f64.ceil drop)
  (; 0x9c ;) (func (export "f64.floor") f64.const 1 f64.floor drop)
  (; 0x9d ;) (func (export "f64.trunc") f64.const 1 f64.trunc drop)
  (; 0x9e ;) (func (export "f64.nearest") f64.const 1 f64.nearest drop)
  (; 0x9f ;) (func (export "f64.sqrt") f64.const 1 f64.sqrt drop)
  (; 0xa0 ;) (func (export "f64.add") f64.const 1 f64.const 2 f64.add drop)
  (; 0xa1 ;) (func (export "f64.sub") f64.const 1 f64.const 2 f64.sub drop)
  (; 0xa2 ;) (func (export "f64.mul") f64.const 1 f64.const 2 f64.mul drop)
  (; 0xa3 ;) (func (export "f64.div") f64.const 1 f64.const 2 f64.div drop)
  (; 0xa4 ;) (func (export "f64.min") f64.const 1 f64.const 2 f64.min drop)
  (; 0xa5 ;) (func (export "f64.max") f64.const 1 f64.const 2 f64.max drop)
  (; 0xa6 ;) (func (export "f64.copysign") f64.const 1 f64.const 2 f64.copysign drop)
  (; 0xa7 ;) (func (export "i32.wrap/i64") i64.const 1 i32.wrap/i64 drop)
  (; 0xa8 ;) (func (export "i32.trunc_s/f32") f32.const 1 i32.trunc_s/f32 drop)
  (; 0xa9 ;) (func (export "i32.trunc_u/f32") f32.const 1 i32.trunc_u/f32 drop)
  (; 0xaa ;) (func (export "i32.trunc_s/f64") f64.const 1 i32.trunc_s/f64 drop)
  (; 0xab ;) (func (export "i32.trunc_u/f64") f64.const 1 i32.trunc_u/f64 drop)
  (; 0xac ;) (func (export "i64.extend_s/i32") i32.const 1 i64.extend_s/i32 drop)
  (; 0xad ;) (func (export "i64.extend_u/i32") i32.const 1 i64.extend_u/i32 drop)
  (; 0xae ;) (func (export "i64.trunc_s/f32") f32.const 1 i64.trunc_s/f32 drop)
  (; 0xaf ;) (func (export "i64.trunc_u/f32") f32.const 1 i64.trunc_u/f32 drop)
  (; 0xb0 ;) (func (export "i64.trunc_s/f64") f64.const 1 i64.trunc_s/f64 drop)
  (; 0xb1 ;) (func (export "i64.trunc_u/f64") f64.const 1 i64.trunc_u/f64 drop)
  (; 0xb2 ;) (func (export "f32.convert_s/i32") i32.const 1 f32.convert_s/i32 drop)
  (; 0xb3 ;) (func (export "f32.convert_u/i32") i32.const 1 f32.convert_u/i32 drop)
  (; 0xb4 ;) (func (export "f32.convert_s/i64") i64.const 1 f32.convert_s/i64 drop)
  (; 0xb5 ;) (func (export "f32.convert_u/i64") i64.const 1 f32.convert_u/i64 drop)
  (; 0xb6 ;) (func (export "f32.demote/f64") f64.const 1 f32.demote/f64 drop)
  (; 0xb7 ;) (func (export "f64.convert_s/i32") i32.const 1 f64.convert_s/i32 drop)
  (; 0xb8 ;) (func (export "f64.convert_u/i32") i32.const 1 f64.convert_u/i32 drop)
  (; 0xb9 ;) (func (export "f64.convert_s/i64") i64.const 1 f64.convert_s/i64 drop)
  (; 0xba ;) (func (export "f64.convert_u/i64") i64.const 1 f64.convert_u/i64 drop)
  (; 0xbb ;) (func (export "f64.promote/f32") f32.const 1 f64.promote/f32 drop)
  (; 0xbc ;) (func (export "i32.reinterpret/f32") i32.const 1 f32.reinterpret/i32 drop)
  (; 0xbd ;) (func (export "f32.reinterpret/i32") f32.const 1 i32.reinterpret/f32 drop)
  (; 0xbe ;) (func (export "i64.reinterpret/f64") i64.const 1 f64.reinterpret/i64 drop)
  (; 0xbf ;) (func (export "f64.reinterpret/i64") f64.const 1 i64.reinterpret/f64 drop)

  ;; --enable-sign-extension
  (; 0xc0 ;) (func (export "i32.extend8_s") i32.const 1 i32.extend8_s drop)
  (; 0xc1 ;) (func (export "i32.extend16_s") i32.const 1 i32.extend16_s drop)
  (; 0xc2 ;) (func (export "i64.extend8_s") i64.const 1 i64.extend8_s drop)
  (; 0xc3 ;) (func (export "i64.extend16_s") i64.const 1 i64.extend16_s drop)
  (; 0xc4 ;) (func (export "i64.extend32_s") i64.const 1 i64.extend32_s drop)

  ;; Interpreter opcodes
  (; 0xe0 ;) (func (export "alloca") (local i32))
  (; 0xe1 ;) (func (export "br_unless") i32.const 1 br_if 0)
  (; 0xe2 ;) (func (export "call_host") i32.const 1 call $print)
  (; 0xe3 ;) (func (export "data") i32.const 1 br_table 0)
  (; 0xe4 ;) (func (export "drop_keep") block (result i32) i32.const 1 i32.const 2 br 0 end drop)

  ;; --enable-saturating-float-to-int
  (; 0xfc 0x00 ;) (func (export "i32.trunc_s:sat/f32") f32.const 1 i32.trunc_s:sat/f32 drop)
  (; 0xfc 0x01 ;) (func (export "i32.trunc_u:sat/f32") f32.const 1 i32.trunc_u:sat/f32 drop)
  (; 0xfc 0x02 ;) (func (export "i32.trunc_s:sat/f64") f64.const 1 i32.trunc_s:sat/f64 drop)
  (; 0xfc 0x03 ;) (func (export "i32.trunc_u:sat/f64") f64.const 1 i32.trunc_u:sat/f64 drop)
  (; 0xfc 0x04 ;) (func (export "i64.trunc_s:sat/f32") f32.const 1 i64.trunc_s:sat/f32 drop)
  (; 0xfc 0x05 ;) (func (export "i64.trunc_u:sat/f32") f32.const 1 i64.trunc_u:sat/f32 drop)
  (; 0xfc 0x06 ;) (func (export "i64.trunc_s:sat/f64") f64.const 1 i64.trunc_s:sat/f64 drop)
  (; 0xfc 0x07 ;) (func (export "i64.trunc_u:sat/f64") f64.const 1 i64.trunc_u:sat/f64 drop)

  (; 0xfc 0x08 ;) (func (export "memory.init") i32.const 1 i32.const 2 i32.const 3 memory.init 0)
  (; 0xfc 0x09 ;) (func (export "data.drop") data.drop 0)
  (; 0xfc 0x0a ;) (func (export "memory.copy") i32.const 1 i32.const 2 i32.const 3 memory.copy)
  (; 0xfc 0x0b ;) (func (export "memory.fill") i32.const 1 i32.const 2 i32.const 3 memory.fill)
  (; 0xfc 0x0c ;) (func (export "table.init") i32.const 1 i32.const 2 i32.const 3 table.init 0)
  (; 0xfc 0x0d ;) (func (export "elem.drop") elem.drop 0)
  (; 0xfc 0x0e ;) (func (export "table.copy") i32.const 1 i32.const 2 i32.const 3 table.copy)

  ;; --enable-simd
  (; 0xfd 0x00 ;) (func (export "v128.load") i32.const 1 v128.load offset=3 drop)
  (; 0xfd 0x01 ;) (func (export "v128.store") i32.const 1 v128.const i32x4 1 1 1 1 v128.store offset=3)
  (; 0xfd 0x02 ;) (func (export "v128.const") v128.const i32x4 1 1 1 1 drop)
  (; 0xfd 0x04 ;) (func (export "i8x16.splat") i32.const 1 i8x16.splat drop)
  (; 0xfd 0x05 ;) (func (export "i8x16.extract_lane_s") v128.const i32x4 1 1 1 1 i8x16.extract_lane_s 15 drop)
  (; 0xfd 0x06 ;) (func (export "i8x16.extract_lane_u") v128.const i32x4 1 1 1 1 i8x16.extract_lane_u 15 drop)
  (; 0xfd 0x07 ;) (func (export "i8x16.replace_lane") v128.const i32x4 1 1 1 1 i32.const 0 i8x16.replace_lane 15 drop)
  (; 0xfd 0x08 ;) (func (export "i16x8.splat") i32.const 1 i16x8.splat drop)
  (; 0xfd 0x09 ;) (func (export "i16x8.extract_lane_s") v128.const i32x4 1 1 1 1 i16x8.extract_lane_s 7 drop)
  (; 0xfd 0x0a ;) (func (export "i16x8.extract_lane_u") v128.const i32x4 1 1 1 1 i16x8.extract_lane_u 7 drop)
  (; 0xfd 0x0b ;) (func (export "i16x8.replace_lane") v128.const i32x4 1 1 1 1 i32.const 0 i16x8.replace_lane 7 drop)
  (; 0xfd 0x0c ;) (func (export "i32x4.splat") i32.const 1 i32x4.splat drop)
  (; 0xfd 0x0d ;) (func (export "i32x4.extract_lane") v128.const i32x4 1 1 1 1 i32x4.extract_lane 3 drop)
  (; 0xfd 0x0e ;) (func (export "i32x4.replace_lane") v128.const i32x4 1 1 1 1 i32.const 0 i32x4.replace_lane 3 drop)
  (; 0xfd 0x0f ;) (func (export "i64x2.splat") i64.const 1 i64x2.splat drop)
  (; 0xfd 0x10 ;) (func (export "i64x2.extract_lane") v128.const i32x4 1 1 1 1 i64x2.extract_lane 1 drop)
  (; 0xfd 0x11 ;) (func (export "i64x2.replace_lane") v128.const i32x4 1 1 1 1 i64.const 0 i64x2.replace_lane 1 drop)
  (; 0xfd 0x12 ;) (func (export "f32x4.splat") f32.const 1 f32x4.splat drop)
  (; 0xfd 0x13 ;) (func (export "f32x4.extract_lane") v128.const i32x4 1 1 1 1 f32x4.extract_lane 3 drop)
  (; 0xfd 0x14 ;) (func (export "f32x4.replace_lane") v128.const i32x4 1 1 1 1 f32.const 0 f32x4.replace_lane 3 drop)
  (; 0xfd 0x15 ;) (func (export "f64x2.splat") f64.const 1 f64x2.splat drop)
  (; 0xfd 0x16 ;) (func (export "f64x2.extract_lane") v128.const i32x4 1 1 1 1 f64x2.extract_lane 1 drop)
  (; 0xfd 0x17 ;) (func (export "f64x2.replace_lane") v128.const i32x4 1 1 1 1 f64.const 0 f64x2.replace_lane 1 drop)
  (; 0xfd 0x18 ;) (func (export "i8x16.eq") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.eq drop)
  (; 0xfd 0x19 ;) (func (export "i8x16.ne") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.ne drop)
  (; 0xfd 0x1a ;) (func (export "i8x16.lt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.lt_s drop)
  (; 0xfd 0x1b ;) (func (export "i8x16.lt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.lt_u drop)
  (; 0xfd 0x1c ;) (func (export "i8x16.gt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.gt_s drop)
  (; 0xfd 0x1d ;) (func (export "i8x16.gt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.gt_u drop)
  (; 0xfd 0x1e ;) (func (export "i8x16.le_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.le_s drop)
  (; 0xfd 0x1f ;) (func (export "i8x16.le_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.le_u drop)
  (; 0xfd 0x20 ;) (func (export "i8x16.ge_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.ge_s drop)
  (; 0xfd 0x21 ;) (func (export "i8x16.ge_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.ge_u drop)
  (; 0xfd 0x22 ;) (func (export "i16x8.eq") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.eq drop)
  (; 0xfd 0x23 ;) (func (export "i16x8.ne") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.ne drop)
  (; 0xfd 0x24 ;) (func (export "i16x8.lt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.lt_s drop)
  (; 0xfd 0x25 ;) (func (export "i16x8.lt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.lt_u drop)
  (; 0xfd 0x26 ;) (func (export "i16x8.gt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.gt_s drop)
  (; 0xfd 0x27 ;) (func (export "i16x8.gt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.gt_u drop)
  (; 0xfd 0x28 ;) (func (export "i16x8.le_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.le_s drop)
  (; 0xfd 0x29 ;) (func (export "i16x8.le_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.le_u drop)
  (; 0xfd 0x2a ;) (func (export "i16x8.ge_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.ge_s drop)
  (; 0xfd 0x2b ;) (func (export "i16x8.ge_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.ge_u drop)
  (; 0xfd 0x2c ;) (func (export "i32x4.eq") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.eq drop)
  (; 0xfd 0x2d ;) (func (export "i32x4.ne") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.ne drop)
  (; 0xfd 0x2e ;) (func (export "i32x4.lt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.lt_s drop)
  (; 0xfd 0x2f ;) (func (export "i32x4.lt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.lt_u drop)
  (; 0xfd 0x30 ;) (func (export "i32x4.gt_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.gt_s drop)
  (; 0xfd 0x31 ;) (func (export "i32x4.gt_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.gt_u drop)
  (; 0xfd 0x32 ;) (func (export "i32x4.le_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.le_s drop)
  (; 0xfd 0x33 ;) (func (export "i32x4.le_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.le_u drop)
  (; 0xfd 0x34 ;) (func (export "i32x4.ge_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.ge_s drop)
  (; 0xfd 0x35 ;) (func (export "i32x4.ge_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.ge_u drop)
  (; 0xfd 0x40 ;) (func (export "f32x4.eq") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.eq drop)
  (; 0xfd 0x41 ;) (func (export "f32x4.ne") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.ne drop)
  (; 0xfd 0x42 ;) (func (export "f32x4.lt") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.lt drop)
  (; 0xfd 0x43 ;) (func (export "f32x4.gt") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.gt drop)
  (; 0xfd 0x44 ;) (func (export "f32x4.le") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.le drop)
  (; 0xfd 0x45 ;) (func (export "f32x4.ge") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.ge drop)
  (; 0xfd 0x46 ;) (func (export "f64x2.eq") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.eq drop)
  (; 0xfd 0x47 ;) (func (export "f64x2.ne") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.ne drop)
  (; 0xfd 0x48 ;) (func (export "f64x2.lt") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.lt drop)
  (; 0xfd 0x49 ;) (func (export "f64x2.gt") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.gt drop)
  (; 0xfd 0x4a ;) (func (export "f64x2.le") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.le drop)
  (; 0xfd 0x4b ;) (func (export "f64x2.ge") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.ge drop)
  (; 0xfd 0x4c ;) (func (export "v128.not") v128.const i32x4 1 1 1 1 v128.not drop)
  (; 0xfd 0x4d ;) (func (export "v128.and") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v128.and drop)
  (; 0xfd 0x4e ;) (func (export "v128.or") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v128.or drop)
  (; 0xfd 0x4f ;) (func (export "v128.xor") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v128.xor drop)
  (; 0xfd 0x50 ;) (func (export "v128.bitselect") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v128.const i32x4 3 3 3 3 v128.bitselect drop)
  (; 0xfd 0x51 ;) (func (export "i8x16.neg") v128.const i32x4 1 1 1 1 i8x16.neg drop)
  (; 0xfd 0x52 ;) (func (export "i8x16.any_true") v128.const i32x4 1 1 1 1 i8x16.any_true drop)
  (; 0xfd 0x53 ;) (func (export "i8x16.all_true") v128.const i32x4 1 1 1 1 i8x16.all_true drop)
  (; 0xfd 0x54 ;) (func (export "i8x16.shl") v128.const i32x4 1 1 1 1 i32.const 0 i8x16.shl drop)
  (; 0xfd 0x55 ;) (func (export "i8x16.shr_s") v128.const i32x4 1 1 1 1 i32.const 0 i8x16.shr_s drop)
  (; 0xfd 0x56 ;) (func (export "i8x16.shr_u") v128.const i32x4 1 1 1 1 i32.const 0 i8x16.shr_u drop)
  (; 0xfd 0x57 ;) (func (export "i8x16.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.add drop)
  (; 0xfd 0x58 ;) (func (export "i8x16.add_saturate_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.add_saturate_s drop)
  (; 0xfd 0x59 ;) (func (export "i8x16.add_saturate_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.add_saturate_u drop)
  (; 0xfd 0x5a ;) (func (export "i8x16.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.sub drop)
  (; 0xfd 0x5b ;) (func (export "i8x16.sub_saturate_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.sub_saturate_s drop)
  (; 0xfd 0x5c ;) (func (export "i8x16.sub_saturate_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.sub_saturate_u drop)
  (; 0xfd 0x5d ;) (func (export "i8x16.mul") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.mul drop)
  (; 0xfd 0x62 ;) (func (export "i16x8.neg") v128.const i32x4 1 1 1 1 i16x8.neg drop)
  (; 0xfd 0x63 ;) (func (export "i16x8.any_true") v128.const i32x4 1 1 1 1 i16x8.any_true drop)
  (; 0xfd 0x64 ;) (func (export "i16x8.all_true") v128.const i32x4 1 1 1 1 i16x8.all_true drop)
  (; 0xfd 0x65 ;) (func (export "i16x8.shl") v128.const i32x4 1 1 1 1 i32.const 0 i16x8.shl drop)
  (; 0xfd 0x66 ;) (func (export "i16x8.shr_s") v128.const i32x4 1 1 1 1 i32.const 0 i16x8.shr_s drop)
  (; 0xfd 0x67 ;) (func (export "i16x8.shr_u") v128.const i32x4 1 1 1 1 i32.const 0 i16x8.shr_u drop)
  (; 0xfd 0x68 ;) (func (export "i16x8.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.add drop)
  (; 0xfd 0x69 ;) (func (export "i16x8.add_saturate_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.add_saturate_s drop)
  (; 0xfd 0x6a ;) (func (export "i16x8.add_saturate_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.add_saturate_u drop)
  (; 0xfd 0x6b ;) (func (export "i16x8.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.sub drop)
  (; 0xfd 0x6c ;) (func (export "i16x8.sub_saturate_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.sub_saturate_s drop)
  (; 0xfd 0x6d ;) (func (export "i16x8.sub_saturate_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.sub_saturate_u drop)
  (; 0xfd 0x6e ;) (func (export "i16x8.mul") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.mul drop)
  (; 0xfd 0x73 ;) (func (export "i32x4.neg") v128.const i32x4 1 1 1 1 i32x4.neg drop)
  (; 0xfd 0x74 ;) (func (export "i32x4.any_true") v128.const i32x4 1 1 1 1 i32x4.any_true drop)
  (; 0xfd 0x75 ;) (func (export "i32x4.all_true") v128.const i32x4 1 1 1 1 i32x4.all_true drop)
  (; 0xfd 0x76 ;) (func (export "i32x4.shl") v128.const i32x4 1 1 1 1 i32.const 0 i32x4.shl drop)
  (; 0xfd 0x77 ;) (func (export "i32x4.shr_s") v128.const i32x4 1 1 1 1 i32.const 0 i32x4.shr_s drop)
  (; 0xfd 0x78 ;) (func (export "i32x4.shr_u") v128.const i32x4 1 1 1 1 i32.const 0 i32x4.shr_u drop)
  (; 0xfd 0x79 ;) (func (export "i32x4.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.add drop)
  (; 0xfd 0x7c ;) (func (export "i32x4.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.sub drop)
  (; 0xfd 0x7f ;) (func (export "i32x4.mul") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i32x4.mul drop)
  (; 0xfd 0x84 ;) (func (export "i64x2.neg") v128.const i32x4 1 1 1 1 i64x2.neg drop)
  (; 0xfd 0x85 ;) (func (export "i64x2.any_true") v128.const i32x4 1 1 1 1 i64x2.any_true drop)
  (; 0xfd 0x86 ;) (func (export "i64x2.all_true") v128.const i32x4 1 1 1 1 i64x2.all_true drop)
  (; 0xfd 0x87 ;) (func (export "i64x2.shl") v128.const i32x4 1 1 1 1 i32.const 0 i64x2.shl drop)
  (; 0xfd 0x88 ;) (func (export "i64x2.shr_s") v128.const i32x4 1 1 1 1 i32.const 0 i64x2.shr_s drop)
  (; 0xfd 0x89 ;) (func (export "i64x2.shr_u") v128.const i32x4 1 1 1 1 i32.const 0 i64x2.shr_u drop)
  (; 0xfd 0x8a ;) (func (export "i64x2.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i64x2.add drop)
  (; 0xfd 0x8d ;) (func (export "i64x2.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i64x2.sub drop)
  (; 0xfd 0x95 ;) (func (export "f32x4.abs") v128.const i32x4 1 1 1 1 f32x4.abs drop)
  (; 0xfd 0x96 ;) (func (export "f32x4.neg") v128.const i32x4 1 1 1 1 f32x4.neg drop)
  (; 0xfd 0x97 ;) (func (export "f32x4.sqrt") v128.const i32x4 1 1 1 1 f32x4.sqrt drop)
  (; 0xfd 0x9a ;) (func (export "f32x4.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.add drop)
  (; 0xfd 0x9b ;) (func (export "f32x4.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.sub drop)
  (; 0xfd 0x9c ;) (func (export "f32x4.mul") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.mul drop)
  (; 0xfd 0x9d ;) (func (export "f32x4.div") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.div drop)
  (; 0xfd 0x9e ;) (func (export "f32x4.min") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.min drop)
  (; 0xfd 0x9f ;) (func (export "f32x4.max") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f32x4.max drop)
  (; 0xfd 0xa0 ;) (func (export "f64x2.abs") v128.const i32x4 1 1 1 1 f64x2.abs drop)
  (; 0xfd 0xa1 ;) (func (export "f64x2.neg") v128.const i32x4 1 1 1 1 f64x2.neg drop)
  (; 0xfd 0xa2 ;) (func (export "f64x2.sqrt") v128.const i32x4 1 1 1 1 f64x2.sqrt drop)
  (; 0xfd 0xa5 ;) (func (export "f64x2.add") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.add drop)
  (; 0xfd 0xa6 ;) (func (export "f64x2.sub") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.sub drop)
  (; 0xfd 0xa7 ;) (func (export "f64x2.mul") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.mul drop)
  (; 0xfd 0xa8 ;) (func (export "f64x2.div") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.div drop)
  (; 0xfd 0xa9 ;) (func (export "f64x2.min") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.min drop)
  (; 0xfd 0xaa ;) (func (export "f64x2.max") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 f64x2.max drop)
  (; 0xfd 0xab ;) (func (export "i32x4.trunc_sat_f32x4_s") v128.const i32x4 1 1 1 1 i32x4.trunc_sat_f32x4_s drop)
  (; 0xfd 0xac ;) (func (export "i32x4.trunc_sat_f32x4_u") v128.const i32x4 1 1 1 1 i32x4.trunc_sat_f32x4_u drop)
  (; 0xfd 0xad ;) (func (export "i64x2.trunc_sat_f64x2_s") v128.const i32x4 1 1 1 1 i64x2.trunc_sat_f64x2_s drop)
  (; 0xfd 0xae ;) (func (export "i64x2.trunc_sat_f64x2_u") v128.const i32x4 1 1 1 1 i64x2.trunc_sat_f64x2_u drop)
  (; 0xfd 0xaf ;) (func (export "f32x4.convert_i32x4_s") v128.const i32x4 1 1 1 1 f32x4.convert_i32x4_s drop)
  (; 0xfd 0xb0 ;) (func (export "f32x4.convert_i32x4_u") v128.const i32x4 1 1 1 1 f32x4.convert_i32x4_u drop)
  (; 0xfd 0xb1 ;) (func (export "f64x2.convert_i64x2_s") v128.const i32x4 1 1 1 1 f64x2.convert_i64x2_s drop)
  (; 0xfd 0xb2 ;) (func (export "f64x2.convert_i64x2_u") v128.const i32x4 1 1 1 1 f64x2.convert_i64x2_u drop)
  (; 0xfd 0xc0 ;) (func (export "v8x16.swizzle") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v8x16.swizzle drop)
  (; 0xfd 0xc1 ;) (func (export "v8x16.shuffle") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v8x16.shuffle 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 drop)
  (; 0xfd 0xc2 ;) (func (export "i8x16.load_splat") i32.const 1 i8x16.load_splat drop)
  (; 0xfd 0xc3 ;) (func (export "i16x8.load_splat") i32.const 1 i16x8.load_splat drop)
  (; 0xfd 0xc4 ;) (func (export "i32x4.load_splat") i32.const 1 i32x4.load_splat drop)
  (; 0xfd 0xc5 ;) (func (export "i64x2.load_splat") i32.const 1 i64x2.load_splat drop)
  (; 0xfd 0xc6 ;) (func (export "i8x16.narrow_i16x8_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.narrow_i16x8_s drop)
  (; 0xfd 0xc7 ;) (func (export "i8x16.narrow_i16x8_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.narrow_i16x8_u drop)
  (; 0xfd 0xc8 ;) (func (export "i16x8.narrow_i32x4_s") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.narrow_i32x4_s drop)
  (; 0xfd 0xc9 ;) (func (export "i16x8.narrow_i32x4_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.narrow_i32x4_u drop)
  (; 0xfd 0xca ;) (func (export "i16x8.widen_low_i8x16_s") v128.const i32x4 1 1 1 1 i16x8.widen_low_i8x16_s drop)
  (; 0xfd 0xcb ;) (func (export "i16x8.widen_high_i8x16_s") v128.const i32x4 1 1 1 1 i16x8.widen_high_i8x16_s drop)
  (; 0xfd 0xcc ;) (func (export "i16x8.widen_low_i8x16_u") v128.const i32x4 1 1 1 1 i16x8.widen_low_i8x16_u drop)
  (; 0xfd 0xcd ;) (func (export "i16x8.widen_high_i8x16_u") v128.const i32x4 1 1 1 1 i16x8.widen_high_i8x16_u drop)
  (; 0xfd 0xce ;) (func (export "i32x4.widen_low_i16x8_s") v128.const i32x4 1 1 1 1 i32x4.widen_low_i16x8_s drop)
  (; 0xfd 0xcf ;) (func (export "i32x4.widen_high_i16x8_s") v128.const i32x4 1 1 1 1 i32x4.widen_high_i16x8_s drop)
  (; 0xfd 0xd0 ;) (func (export "i32x4.widen_low_i16x8_u") v128.const i32x4 1 1 1 1 i32x4.widen_low_i16x8_u drop)
  (; 0xfd 0xd1 ;) (func (export "i32x4.widen_high_i16x8_u") v128.const i32x4 1 1 1 1 i32x4.widen_high_i16x8_u drop)
  (; 0xfd 0xd2 ;) (func (export "i16x8.load8x8_s") i32.const 0 i16x8.load8x8_s drop)
  (; 0xfd 0xd3 ;) (func (export "i16x8.load8x8_u") i32.const 0 i16x8.load8x8_u drop)
  (; 0xfd 0xd4 ;) (func (export "i32x4.load16x4_s") i32.const 0 i32x4.load16x4_s drop)
  (; 0xfd 0xd5 ;) (func (export "i32x4.load16x4_u") i32.const 0 i32x4.load16x4_u drop)
  (; 0xfd 0xd6 ;) (func (export "i64x2.load32x2_s") i32.const 0 i64x2.load32x2_s drop)
  (; 0xfd 0xd7 ;) (func (export "i64x2.load32x2_u") i32.const 0 i64x2.load32x2_u drop)
  (; 0xfd 0xd8 ;) (func (export "v128.andnot") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 v128.andnot drop)
  (; 0xfd 0xd9 ;) (func (export "i8x16.avgr_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i8x16.avgr_u drop)
  (; 0xfd 0xda ;) (func (export "i16x8.avgr_u") v128.const i32x4 1 1 1 1 v128.const i32x4 2 2 2 2 i16x8.avgr_u drop)

  ;; --enable-threads
  (; 0xfe 0x00 ;) (func (export "atomic.notify") i32.const 1 i32.const 2 atomic.notify offset=3 drop)
  (; 0xfe 0x01 ;) (func (export "i32.atomic.wait") i32.const 1 i32.const 2 i64.const 3 i32.atomic.wait offset=3 drop)
  (; 0xfe 0x02 ;) (func (export "i64.atomic.wait") i32.const 1 i64.const 2 i64.const 3 i64.atomic.wait offset=3 drop)
  (; 0xfe 0x10 ;) (func (export "i32.atomic.load") i32.const 1 i32.atomic.load offset=3 drop)
  (; 0xfe 0x11 ;) (func (export "i64.atomic.load") i32.const 1 i64.atomic.load offset=7 drop)
  (; 0xfe 0x12 ;) (func (export "i32.atomic.load8_u") i32.const 1 i32.atomic.load8_u offset=3 drop)
  (; 0xfe 0x13 ;) (func (export "i32.atomic.load16_u") i32.const 1 i32.atomic.load16_u offset=3 drop)
  (; 0xfe 0x14 ;) (func (export "i64.atomic.load8_u") i32.const 1 i64.atomic.load8_u offset=3 drop)
  (; 0xfe 0x15 ;) (func (export "i64.atomic.load16_u") i32.const 1 i64.atomic.load16_u offset=3 drop)
  (; 0xfe 0x16 ;) (func (export "i64.atomic.load32_u") i32.const 1 i64.atomic.load32_u offset=3 drop)
  (; 0xfe 0x17 ;) (func (export "i32.atomic.store") i32.const 1 i32.const 2 i32.atomic.store offset=3)
  (; 0xfe 0x18 ;) (func (export "i64.atomic.store") i32.const 1 i64.const 2 i64.atomic.store offset=7)
  (; 0xfe 0x19 ;) (func (export "i32.atomic.store8") i32.const 1 i32.const 2 i32.atomic.store8 offset=3)
  (; 0xfe 0x1a ;) (func (export "i32.atomic.store16") i32.const 1 i32.const 2 i32.atomic.store16 offset=3)
  (; 0xfe 0x1b ;) (func (export "i64.atomic.store8") i32.const 1 i64.const 2 i64.atomic.store8 offset=3)
  (; 0xfe 0x1c ;) (func (export "i64.atomic.store16") i32.const 1 i64.const 2 i64.atomic.store16 offset=3)
  (; 0xfe 0x1d ;) (func (export "i64.atomic.store32") i32.const 1 i64.const 2 i64.atomic.store32 offset=3)
  (; 0xfe 0x1e ;) (func (export "i32.atomic.rmw.add") i32.const 1 i32.const 2 i32.atomic.rmw.add offset=3 drop)
  (; 0xfe 0x1f ;) (func (export "i64.atomic.rmw.add") i32.const 1 i64.const 2 i64.atomic.rmw.add offset=7 drop)
  (; 0xfe 0x20 ;) (func (export "i32.atomic.rmw8.add_u") i32.const 1 i32.const 2 i32.atomic.rmw8.add_u offset=3 drop)
  (; 0xfe 0x21 ;) (func (export "i32.atomic.rmw16.add_u") i32.const 1 i32.const 2 i32.atomic.rmw16.add_u offset=3 drop)
  (; 0xfe 0x22 ;) (func (export "i64.atomic.rmw8.add_u") i32.const 1 i64.const 2 i64.atomic.rmw8.add_u offset=3 drop)
  (; 0xfe 0x23 ;) (func (export "i64.atomic.rmw16.add_u") i32.const 1 i64.const 2 i64.atomic.rmw16.add_u offset=3 drop)
  (; 0xfe 0x24 ;) (func (export "i64.atomic.rmw32.add_u") i32.const 1 i64.const 2 i64.atomic.rmw32.add_u offset=3 drop)
  (; 0xfe 0x25 ;) (func (export "i32.atomic.rmw.sub") i32.const 1 i32.const 2 i32.atomic.rmw.sub offset=3 drop)
  (; 0xfe 0x26 ;) (func (export "i64.atomic.rmw.sub") i32.const 1 i64.const 2 i64.atomic.rmw.sub offset=7 drop)
  (; 0xfe 0x27 ;) (func (export "i32.atomic.rmw8.sub_u") i32.const 1 i32.const 2 i32.atomic.rmw8.sub_u offset=3 drop)
  (; 0xfe 0x28 ;) (func (export "i32.atomic.rmw16.sub_u") i32.const 1 i32.const 2 i32.atomic.rmw16.sub_u offset=3 drop)
  (; 0xfe 0x29 ;) (func (export "i64.atomic.rmw8.sub_u") i32.const 1 i64.const 2 i64.atomic.rmw8.sub_u offset=3 drop)
  (; 0xfe 0x2a ;) (func (export "i64.atomic.rmw16.sub_u") i32.const 1 i64.const 2 i64.atomic.rmw16.sub_u offset=3 drop)
  (; 0xfe 0x2b ;) (func (export "i64.atomic.rmw32.sub_u") i32.const 1 i64.const 2 i64.atomic.rmw32.sub_u offset=3 drop)
  (; 0xfe 0x2c ;) (func (export "i32.atomic.rmw.and") i32.const 1 i32.const 2 i32.atomic.rmw.and offset=3 drop)
  (; 0xfe 0x2d ;) (func (export "i64.atomic.rmw.and") i32.const 1 i64.const 2 i64.atomic.rmw.and offset=7 drop)
  (; 0xfe 0x2e ;) (func (export "i32.atomic.rmw8.and_u") i32.const 1 i32.const 2 i32.atomic.rmw8.and_u offset=3 drop)
  (; 0xfe 0x2f ;) (func (export "i32.atomic.rmw16.and_u") i32.const 1 i32.const 2 i32.atomic.rmw16.and_u offset=3 drop)
  (; 0xfe 0x30 ;) (func (export "i64.atomic.rmw8.and_u") i32.const 1 i64.const 2 i64.atomic.rmw8.and_u offset=3 drop)
  (; 0xfe 0x31 ;) (func (export "i64.atomic.rmw16.and_u") i32.const 1 i64.const 2 i64.atomic.rmw16.and_u offset=3 drop)
  (; 0xfe 0x32 ;) (func (export "i64.atomic.rmw32.and_u") i32.const 1 i64.const 2 i64.atomic.rmw32.and_u offset=3 drop)
  (; 0xfe 0x33 ;) (func (export "i32.atomic.rmw.or") i32.const 1 i32.const 2 i32.atomic.rmw.or offset=3 drop)
  (; 0xfe 0x34 ;) (func (export "i64.atomic.rmw.or") i32.const 1 i64.const 2 i64.atomic.rmw.or offset=7 drop)
  (; 0xfe 0x35 ;) (func (export "i32.atomic.rmw8.or_u") i32.const 1 i32.const 2 i32.atomic.rmw8.or_u offset=3 drop)
  (; 0xfe 0x36 ;) (func (export "i32.atomic.rmw16.or_u") i32.const 1 i32.const 2 i32.atomic.rmw16.or_u offset=3 drop)
  (; 0xfe 0x37 ;) (func (export "i64.atomic.rmw8.or_u") i32.const 1 i64.const 2 i64.atomic.rmw8.or_u offset=3 drop)
  (; 0xfe 0x38 ;) (func (export "i64.atomic.rmw16.or_u") i32.const 1 i64.const 2 i64.atomic.rmw16.or_u offset=3 drop)
  (; 0xfe 0x39 ;) (func (export "i64.atomic.rmw32.or_u") i32.const 1 i64.const 2 i64.atomic.rmw32.or_u offset=3 drop)
  (; 0xfe 0x3a ;) (func (export "i32.atomic.rmw.xor") i32.const 1 i32.const 2 i32.atomic.rmw.xor offset=3 drop)
  (; 0xfe 0x3b ;) (func (export "i64.atomic.rmw.xor") i32.const 1 i64.const 2 i64.atomic.rmw.xor offset=7 drop)
  (; 0xfe 0x3c ;) (func (export "i32.atomic.rmw8.xor_u") i32.const 1 i32.const 2 i32.atomic.rmw8.xor_u offset=3 drop)
  (; 0xfe 0x3d ;) (func (export "i32.atomic.rmw16.xor_u") i32.const 1 i32.const 2 i32.atomic.rmw16.xor_u offset=3 drop)
  (; 0xfe 0x3e ;) (func (export "i64.atomic.rmw8.xor_u") i32.const 1 i64.const 2 i64.atomic.rmw8.xor_u offset=3 drop)
  (; 0xfe 0x3f ;) (func (export "i64.atomic.rmw16.xor_u") i32.const 1 i64.const 2 i64.atomic.rmw16.xor_u offset=3 drop)
  (; 0xfe 0x40 ;) (func (export "i64.atomic.rmw32.xor_u") i32.const 1 i64.const 2 i64.atomic.rmw32.xor_u offset=3 drop)
  (; 0xfe 0x41 ;) (func (export "i32.atomic.rmw.xchg") i32.const 1 i32.const 2 i32.atomic.rmw.xchg offset=3 drop)
  (; 0xfe 0x42 ;) (func (export "i64.atomic.rmw.xchg") i32.const 1 i64.const 2 i64.atomic.rmw.xchg offset=7 drop)
  (; 0xfe 0x43 ;) (func (export "i32.atomic.rmw8.xchg_u") i32.const 1 i32.const 2 i32.atomic.rmw8.xchg_u offset=3 drop)
  (; 0xfe 0x44 ;) (func (export "i32.atomic.rmw16.xchg_u") i32.const 1 i32.const 2 i32.atomic.rmw16.xchg_u offset=3 drop)
  (; 0xfe 0x45 ;) (func (export "i64.atomic.rmw8.xchg_u") i32.const 1 i64.const 2 i64.atomic.rmw8.xchg_u offset=3 drop)
  (; 0xfe 0x46 ;) (func (export "i64.atomic.rmw16.xchg_u") i32.const 1 i64.const 2 i64.atomic.rmw16.xchg_u offset=3 drop)
  (; 0xfe 0x47 ;) (func (export "i64.atomic.rmw32.xchg_u") i32.const 1 i64.const 2 i64.atomic.rmw32.xchg_u offset=3 drop)

  (; 0xfe 0x48 ;) (func (export "i32.atomic.rmw.cmpxchg") i32.const 1 i32.const 2 i32.const 3 i32.atomic.rmw.cmpxchg offset=3 drop)
  (; 0xfe 0x49 ;) (func (export "i64.atomic.rmw.cmpxchg") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw.cmpxchg offset=7 drop)
  (; 0xfe 0x4a ;) (func (export "i32.atomic.rmw8.cmpxchg_u") i32.const 1 i32.const 2 i32.const 3 i32.atomic.rmw8.cmpxchg_u offset=3 drop)
  (; 0xfe 0x4b ;) (func (export "i32.atomic.rmw16.cmpxchg_u") i32.const 1 i32.const 2 i32.const 3 i32.atomic.rmw16.cmpxchg_u offset=3 drop)
  (; 0xfe 0x4c ;) (func (export "i64.atomic.rmw8.cmpxchg_u") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw8.cmpxchg_u offset=3 drop)
  (; 0xfe 0x4d ;) (func (export "i64.atomic.rmw16.cmpxchg_u") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw16.cmpxchg_u offset=3 drop)
  (; 0xfe 0x4e ;) (func (export "i64.atomic.rmw32.cmpxchg_u") i32.const 1 i64.const 2 i64.const 3 i64.atomic.rmw32.cmpxchg_u offset=3 drop)
)

(;; STDOUT ;;;
0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 02                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 00                                        ; num params
000000d: 00                                        ; num results
; type 1
000000e: 60                                        ; func
000000f: 01                                        ; num params
0000010: 7f                                        ; i32
0000011: 00                                        ; num results
0000009: 08                                        ; FIXUP section size
; section "Import" (2)
0000012: 02                                        ; section code
0000013: 00                                        ; section size (guess)
0000014: 01                                        ; num imports
; import header 0
0000015: 04                                        ; string length
0000016: 686f 7374                                host  ; import module name
000001a: 05                                        ; string length
000001b: 7072 696e 74                             print  ; import field name
0000020: 00                                        ; import kind
0000021: 01                                        ; import signature index
0000013: 0e                                        ; FIXUP section size
; section "Function" (3)
0000022: 03                                        ; section code
0000023: 00                                        ; section size (guess)
0000024: aa03                                      ; num functions
0000026: 00                                        ; function 0 signature index
0000027: 00                                        ; function 1 signature index
0000028: 00                                        ; function 2 signature index
0000029: 00                                        ; function 3 signature index
000002a: 00                                        ; function 4 signature index
000002b: 00                                        ; function 5 signature index
000002c: 00                                        ; function 6 signature index
000002d: 00                                        ; function 7 signature index
000002e: 00                                        ; function 8 signature index
000002f: 00                                        ; function 9 signature index
0000030: 00                                        ; function 10 signature index
0000031: 00                                        ; function 11 signature index
0000032: 00                                        ; function 12 signature index
0000033: 00                                        ; function 13 signature index
0000034: 00                                        ; function 14 signature index
0000035: 00                                        ; function 15 signature index
0000036: 00                                        ; function 16 signature index
0000037: 00                                        ; function 17 signature index
0000038: 00                                        ; function 18 signature index
0000039: 00                                        ; function 19 signature index
000003a: 00                                        ; function 20 signature index
000003b: 00                                        ; function 21 signature index
000003c: 00                                        ; function 22 signature index
000003d: 00                                        ; function 23 signature index
000003e: 00                                        ; function 24 signature index
000003f: 00                                        ; function 25 signature index
0000040: 00                                        ; function 26 signature index
0000041: 00                                        ; function 27 signature index
0000042: 00                                        ; function 28 signature index
0000043: 00                                        ; function 29 signature index
0000044: 00                                        ; function 30 signature index
0000045: 00                                        ; function 31 signature index
0000046: 00                                        ; function 32 signature index
0000047: 00                                        ; function 33 signature index
0000048: 00                                        ; function 34 signature index
0000049: 00                                        ; function 35 signature index
000004a: 00                                        ; function 36 signature index
000004b: 00                                        ; function 37 signature index
000004c: 00                                        ; function 38 signature index
000004d: 00                                        ; function 39 signature index
000004e: 00                                        ; function 40 signature index
000004f: 00                                        ; function 41 signature index
0000050: 00                                        ; function 42 signature index
0000051: 00                                        ; function 43 signature index
0000052: 00                                        ; function 44 signature index
0000053: 00                                        ; function 45 signature index
0000054: 00                                        ; function 46 signature index
0000055: 00                                        ; function 47 signature index
0000056: 00                                        ; function 48 signature index
0000057: 00                                        ; function 49 signature index
0000058: 00                                        ; function 50 signature index
0000059: 00                                        ; function 51 signature index
000005a: 00                                        ; function 52 signature index
000005b: 00                                        ; function 53 signature index
000005c: 00                                        ; function 54 signature index
000005d: 00                                        ; function 55 signature index
000005e: 00                                        ; function 56 signature index
000005f: 00                                        ; function 57 signature index
0000060: 00                                        ; function 58 signature index
0000061: 00                                        ; function 59 signature index
0000062: 00                                        ; function 60 signature index
0000063: 00                                        ; function 61 signature index
0000064: 00                                        ; function 62 signature index
0000065: 00                                        ; function 63 signature index
0000066: 00                                        ; function 64 signature index
0000067: 00                                        ; function 65 signature index
0000068: 00                                        ; function 66 signature index
0000069: 00                                        ; function 67 signature index
000006a: 00                                        ; function 68 signature index
000006b: 00                                        ; function 69 signature index
000006c: 00                                        ; function 70 signature index
000006d: 00                                        ; function 71 signature index
000006e: 00                                        ; function 72 signature index
000006f: 00                                        ; function 73 signature index
0000070: 00                                        ; function 74 signature index
0000071: 00                                        ; function 75 signature index
0000072: 00                                        ; function 76 signature index
0000073: 00                                        ; function 77 signature index
0000074: 00                                        ; function 78 signature index
0000075: 00                                        ; function 79 signature index
0000076: 00                                        ; function 80 signature index
0000077: 00                                        ; function 81 signature index
0000078: 00                                        ; function 82 signature index
0000079: 00                                        ; function 83 signature index
000007a: 00                                        ; function 84 signature index
000007b: 00                                        ; function 85 signature index
000007c: 00                                        ; function 86 signature index
000007d: 00                                        ; function 87 signature index
000007e: 00                                        ; function 88 signature index
000007f: 00                                        ; function 89 signature index
0000080: 00                                        ; function 90 signature index
0000081: 00                                        ; function 91 signature index
0000082: 00                                        ; function 92 signature index
0000083: 00                                        ; function 93 signature index
0000084: 00                                        ; function 94 signature index
0000085: 00                                        ; function 95 signature index
0000086: 00                                        ; function 96 signature index
0000087: 00                                        ; function 97 signature index
0000088: 00                                        ; function 98 signature index
0000089: 00                                        ; function 99 signature index
000008a: 00                                        ; function 100 signature index
000008b: 00                                        ; function 101 signature index
000008c: 00                                        ; function 102 signature index
000008d: 00                                        ; function 103 signature index
000008e: 00                                        ; function 104 signature index
000008f: 00                                        ; function 105 signature index
0000090: 00                                        ; function 106 signature index
0000091: 00                                        ; function 107 signature index
0000092: 00                                        ; function 108 signature index
0000093: 00                                        ; function 109 signature index
0000094: 00                                        ; function 110 signature index
0000095: 00                                        ; function 111 signature index
0000096: 00                                        ; function 112 signature index
0000097: 00                                        ; function 113 signature index
0000098: 00                                        ; function 114 signature index
0000099: 00                                        ; function 115 signature index
000009a: 00                                        ; function 116 signature index
000009b: 00                                        ; function 117 signature index
000009c: 00                                        ; function 118 signature index
000009d: 00                                        ; function 119 signature index
000009e: 00                                        ; function 120 signature index
000009f: 00                                        ; function 121 signature index
00000a0: 00                                        ; function 122 signature index
00000a1: 00                                        ; function 123 signature index
00000a2: 00                                        ; function 124 signature index
00000a3: 00                                        ; function 125 signature index
00000a4: 00                                        ; function 126 signature index
00000a5: 00                                        ; function 127 signature index
00000a6: 00                                        ; function 128 signature index
00000a7: 00                                        ; function 129 signature index
00000a8: 00                                        ; function 130 signature index
00000a9: 00                                        ; function 131 signature index
00000aa: 00                                        ; function 132 signature index
00000ab: 00                                        ; function 133 signature index
00000ac: 00                                        ; function 134 signature index
00000ad: 00                                        ; function 135 signature index
00000ae: 00                                        ; function 136 signature index
00000af: 00                                        ; function 137 signature index
00000b0: 00                                        ; function 138 signature index
00000b1: 00                                        ; function 139 signature index
00000b2: 00                                        ; function 140 signature index
00000b3: 00                                        ; function 141 signature index
00000b4: 00                                        ; function 142 signature index
00000b5: 00                                        ; function 143 signature index
00000b6: 00                                        ; function 144 signature index
00000b7: 00                                        ; function 145 signature index
00000b8: 00                                        ; function 146 signature index
00000b9: 00                                        ; function 147 signature index
00000ba: 00                                        ; function 148 signature index
00000bb: 00                                        ; function 149 signature index
00000bc: 00                                        ; function 150 signature index
00000bd: 00                                        ; function 151 signature index
00000be: 00                                        ; function 152 signature index
00000bf: 00                                        ; function 153 signature index
00000c0: 00                                        ; function 154 signature index
00000c1: 00                                        ; function 155 signature index
00000c2: 00                                        ; function 156 signature index
00000c3: 00                                        ; function 157 signature index
00000c4: 00                                        ; function 158 signature index
00000c5: 00                                        ; function 159 signature index
00000c6: 00                                        ; function 160 signature index
00000c7: 00                                        ; function 161 signature index
00000c8: 00                                        ; function 162 signature index
00000c9: 00                                        ; function 163 signature index
00000ca: 00                                        ; function 164 signature index
00000cb: 00                                        ; function 165 signature index
00000cc: 00                                        ; function 166 signature index
00000cd: 00                                        ; function 167 signature index
00000ce: 00                                        ; function 168 signature index
00000cf: 00                                        ; function 169 signature index
00000d0: 00                                        ; function 170 signature index
00000d1: 00                                        ; function 171 signature index
00000d2: 00                                        ; function 172 signature index
00000d3: 00                                        ; function 173 signature index
00000d4: 00                                        ; function 174 signature index
00000d5: 00                                        ; function 175 signature index
00000d6: 00                                        ; function 176 signature index
00000d7: 00                                        ; function 177 signature index
00000d8: 00                                        ; function 178 signature index
00000d9: 00                                        ; function 179 signature index
00000da: 00                                        ; function 180 signature index
00000db: 00                                        ; function 181 signature index
00000dc: 00                                        ; function 182 signature index
00000dd: 00                                        ; function 183 signature index
00000de: 00                                        ; function 184 signature index
00000df: 00                                        ; function 185 signature index
00000e0: 00                                        ; function 186 signature index
00000e1: 00                                        ; function 187 signature index
00000e2: 00                                        ; function 188 signature index
00000e3: 00                                        ; function 189 signature index
00000e4: 00                                        ; function 190 signature index
00000e5: 00                                        ; function 191 signature index
00000e6: 00                                        ; function 192 signature index
00000e7: 00                                        ; function 193 signature index
00000e8: 00                                        ; function 194 signature index
00000e9: 00                                        ; function 195 signature index
00000ea: 00                                        ; function 196 signature index
00000eb: 00                                        ; function 197 signature index
00000ec: 00                                        ; function 198 signature index
00000ed: 00                                        ; function 199 signature index
00000ee: 00                                        ; function 200 signature index
00000ef: 00                                        ; function 201 signature index
00000f0: 00                                        ; function 202 signature index
00000f1: 00                                        ; function 203 signature index
00000f2: 00                                        ; function 204 signature index
00000f3: 00                                        ; function 205 signature index
00000f4: 00                                        ; function 206 signature index
00000f5: 00                                        ; function 207 signature index
00000f6: 00                                        ; function 208 signature index
00000f7: 00                                        ; function 209 signature index
00000f8: 00                                        ; function 210 signature index
00000f9: 00                                        ; function 211 signature index
00000fa: 00                                        ; function 212 signature index
00000fb: 00                                        ; function 213 signature index
00000fc: 00                                        ; function 214 signature index
00000fd: 00                                        ; function 215 signature index
00000fe: 00                                        ; function 216 signature index
00000ff: 00                                        ; function 217 signature index
0000100: 00                                        ; function 218 signature index
0000101: 00                                        ; function 219 signature index
0000102: 00                                        ; function 220 signature index
0000103: 00                                        ; function 221 signature index
0000104: 00                                        ; function 222 signature index
0000105: 00                                        ; function 223 signature index
0000106: 00                                        ; function 224 signature index
0000107: 00                                        ; function 225 signature index
0000108: 00                                        ; function 226 signature index
0000109: 00                                        ; function 227 signature index
000010a: 00                                        ; function 228 signature index
000010b: 00                                        ; function 229 signature index
000010c: 00                                        ; function 230 signature index
000010d: 00                                        ; function 231 signature index
000010e: 00                                        ; function 232 signature index
000010f: 00                                        ; function 233 signature index
0000110: 00                                        ; function 234 signature index
0000111: 00                                        ; function 235 signature index
0000112: 00                                        ; function 236 signature index
0000113: 00                                        ; function 237 signature index
0000114: 00                                        ; function 238 signature index
0000115: 00                                        ; function 239 signature index
0000116: 00                                        ; function 240 signature index
0000117: 00                                        ; function 241 signature index
0000118: 00                                        ; function 242 signature index
0000119: 00                                        ; function 243 signature index
000011a: 00                                        ; function 244 signature index
000011b: 00                                        ; function 245 signature index
000011c: 00                                        ; function 246 signature index
000011d: 00                                        ; function 247 signature index
000011e: 00                                        ; function 248 signature index
000011f: 00                                        ; function 249 signature index
0000120: 00                                        ; function 250 signature index
0000121: 00                                        ; function 251 signature index
0000122: 00                                        ; function 252 signature index
0000123: 00                                        ; function 253 signature index
0000124: 00                                        ; function 254 signature index
0000125: 00                                        ; function 255 signature index
0000126: 00                                        ; function 256 signature index
0000127: 00                                        ; function 257 signature index
0000128: 00                                        ; function 258 signature index
0000129: 00                                        ; function 259 signature index
000012a: 00                                        ; function 260 signature index
000012b: 00                                        ; function 261 signature index
000012c: 00                                        ; function 262 signature index
000012d: 00                                        ; function 263 signature index
000012e: 00                                        ; function 264 signature index
000012f: 00                                        ; function 265 signature index
0000130: 00                                        ; function 266 signature index
0000131: 00                                        ; function 267 signature index
0000132: 00                                        ; function 268 signature index
0000133: 00                                        ; function 269 signature index
0000134: 00                                        ; function 270 signature index
0000135: 00                                        ; function 271 signature index
0000136: 00                                        ; function 272 signature index
0000137: 00                                        ; function 273 signature index
0000138: 00                                        ; function 274 signature index
0000139: 00                                        ; function 275 signature index
000013a: 00                                        ; function 276 signature index
000013b: 00                                        ; function 277 signature index
000013c: 00                                        ; function 278 signature index
000013d: 00                                        ; function 279 signature index
000013e: 00                                        ; function 280 signature index
000013f: 00                                        ; function 281 signature index
0000140: 00                                        ; function 282 signature index
0000141: 00                                        ; function 283 signature index
0000142: 00                                        ; function 284 signature index
0000143: 00                                        ; function 285 signature index
0000144: 00                                        ; function 286 signature index
0000145: 00                                        ; function 287 signature index
0000146: 00                                        ; function 288 signature index
0000147: 00                                        ; function 289 signature index
0000148: 00                                        ; function 290 signature index
0000149: 00                                        ; function 291 signature index
000014a: 00                                        ; function 292 signature index
000014b: 00                                        ; function 293 signature index
000014c: 00                                        ; function 294 signature index
000014d: 00                                        ; function 295 signature index
000014e: 00                                        ; function 296 signature index
000014f: 00                                        ; function 297 signature index
0000150: 00                                        ; function 298 signature index
0000151: 00                                        ; function 299 signature index
0000152: 00                                        ; function 300 signature index
0000153: 00                                        ; function 301 signature index
0000154: 00                                        ; function 302 signature index
0000155: 00                                        ; function 303 signature index
0000156: 00                                        ; function 304 signature index
0000157: 00                                        ; function 305 signature index
0000158: 00                                        ; function 306 signature index
0000159: 00                                        ; function 307 signature index
000015a: 00                                        ; function 308 signature index
000015b: 00                                        ; function 309 signature index
000015c: 00                                        ; function 310 signature index
000015d: 00                                        ; function 311 signature index
000015e: 00                                        ; function 312 signature index
000015f: 00                                        ; function 313 signature index
0000160: 00                                        ; function 314 signature index
0000161: 00                                        ; function 315 signature index
0000162: 00                                        ; function 316 signature index
0000163: 00                                        ; function 317 signature index
0000164: 00                                        ; function 318 signature index
0000165: 00                                        ; function 319 signature index
0000166: 00                                        ; function 320 signature index
0000167: 00                                        ; function 321 signature index
0000168: 00                                        ; function 322 signature index
0000169: 00                                        ; function 323 signature index
000016a: 00                                        ; function 324 signature index
000016b: 00                                        ; function 325 signature index
000016c: 00                                        ; function 326 signature index
000016d: 00                                        ; function 327 signature index
000016e: 00                                        ; function 328 signature index
000016f: 00                                        ; function 329 signature index
0000170: 00                                        ; function 330 signature index
0000171: 00                                        ; function 331 signature index
0000172: 00                                        ; function 332 signature index
0000173: 00                                        ; function 333 signature index
0000174: 00                                        ; function 334 signature index
0000175: 00                                        ; function 335 signature index
0000176: 00                                        ; function 336 signature index
0000177: 00                                        ; function 337 signature index
0000178: 00                                        ; function 338 signature index
0000179: 00                                        ; function 339 signature index
000017a: 00                                        ; function 340 signature index
000017b: 00                                        ; function 341 signature index
000017c: 00                                        ; function 342 signature index
000017d: 00                                        ; function 343 signature index
000017e: 00                                        ; function 344 signature index
000017f: 00                                        ; function 345 signature index
0000180: 00                                        ; function 346 signature index
0000181: 00                                        ; function 347 signature index
0000182: 00                                        ; function 348 signature index
0000183: 00                                        ; function 349 signature index
0000184: 00                                        ; function 350 signature index
0000185: 00                                        ; function 351 signature index
0000186: 00                                        ; function 352 signature index
0000187: 00                                        ; function 353 signature index
0000188: 00                                        ; function 354 signature index
0000189: 00                                        ; function 355 signature index
000018a: 00                                        ; function 356 signature index
000018b: 00                                        ; function 357 signature index
000018c: 00                                        ; function 358 signature index
000018d: 00                                        ; function 359 signature index
000018e: 00                                        ; function 360 signature index
000018f: 00                                        ; function 361 signature index
0000190: 00                                        ; function 362 signature index
0000191: 00                                        ; function 363 signature index
0000192: 00                                        ; function 364 signature index
0000193: 00                                        ; function 365 signature index
0000194: 00                                        ; function 366 signature index
0000195: 00                                        ; function 367 signature index
0000196: 00                                        ; function 368 signature index
0000197: 00                                        ; function 369 signature index
0000198: 00                                        ; function 370 signature index
0000199: 00                                        ; function 371 signature index
000019a: 00                                        ; function 372 signature index
000019b: 00                                        ; function 373 signature index
000019c: 00                                        ; function 374 signature index
000019d: 00                                        ; function 375 signature index
000019e: 00                                        ; function 376 signature index
000019f: 00                                        ; function 377 signature index
00001a0: 00                                        ; function 378 signature index
00001a1: 00                                        ; function 379 signature index
00001a2: 00                                        ; function 380 signature index
00001a3: 00                                        ; function 381 signature index
00001a4: 00                                        ; function 382 signature index
00001a5: 00                                        ; function 383 signature index
00001a6: 00                                        ; function 384 signature index
00001a7: 00                                        ; function 385 signature index
00001a8: 00                                        ; function 386 signature index
00001a9: 00                                        ; function 387 signature index
00001aa: 00                                        ; function 388 signature index
00001ab: 00                                        ; function 389 signature index
00001ac: 00                                        ; function 390 signature index
00001ad: 00                                        ; function 391 signature index
00001ae: 00                                        ; function 392 signature index
00001af: 00                                        ; function 393 signature index
00001b0: 00                                        ; function 394 signature index
00001b1: 00                                        ; function 395 signature index
00001b2: 00                                        ; function 396 signature index
00001b3: 00                                        ; function 397 signature index
00001b4: 00                                        ; function 398 signature index
00001b5: 00                                        ; function 399 signature index
00001b6: 00                                        ; function 400 signature index
00001b7: 00                                        ; function 401 signature index
00001b8: 00                                        ; function 402 signature index
00001b9: 00                                        ; function 403 signature index
00001ba: 00                                        ; function 404 signature index
00001bb: 00                                        ; function 405 signature index
00001bc: 00                                        ; function 406 signature index
00001bd: 00                                        ; function 407 signature index
00001be: 00                                        ; function 408 signature index
00001bf: 00                                        ; function 409 signature index
00001c0: 00                                        ; function 410 signature index
00001c1: 00                                        ; function 411 signature index
00001c2: 00                                        ; function 412 signature index
00001c3: 00                                        ; function 413 signature index
00001c4: 00                                        ; function 414 signature index
00001c5: 00                                        ; function 415 signature index
00001c6: 00                                        ; function 416 signature index
00001c7: 00                                        ; function 417 signature index
00001c8: 00                                        ; function 418 signature index
00001c9: 00                                        ; function 419 signature index
00001ca: 00                                        ; function 420 signature index
00001cb: 00                                        ; function 421 signature index
00001cc: 00                                        ; function 422 signature index
00001cd: 00                                        ; function 423 signature index
00001ce: 00                                        ; function 424 signature index
00001cf: 00                                        ; function 425 signature index
; move data: [24, 1d0) -> [25, 1d1)
0000023: ac03                                      ; FIXUP section size
; section "Table" (4)
00001d1: 04                                        ; section code
00001d2: 00                                        ; section size (guess)
00001d3: 01                                        ; num tables
; table 0
00001d4: 70                                        ; funcref
00001d5: 01                                        ; limits: flags
00001d6: 02                                        ; limits: initial
00001d7: 02                                        ; limits: max
00001d2: 05                                        ; FIXUP section size
; section "Memory" (5)
00001d8: 05                                        ; section code
00001d9: 00                                        ; section size (guess)
00001da: 01                                        ; num memories
; memory 0
00001db: 03                                        ; limits: flags
00001dc: 01                                        ; limits: initial
00001dd: 01                                        ; limits: max
00001d9: 04                                        ; FIXUP section size
; section "Global" (6)
00001de: 06                                        ; section code
00001df: 00                                        ; section size (guess)
00001e0: 01                                        ; num globals
00001e1: 7f                                        ; i32
00001e2: 01                                        ; global mutability
00001e3: 41                                        ; i32.const
00001e4: 00                                        ; i32 literal
00001e5: 0b                                        ; end
00001df: 06                                        ; FIXUP section size
; section "Export" (7)
00001e6: 07                                        ; section code
00001e7: 00                                        ; section size (guess)
00001e8: a903                                      ; num exports
00001ea: 0b                                        ; string length
00001eb: 756e 7265 6163 6861 626c 65              unreachable  ; export name
00001f6: 00                                        ; export kind
00001f7: 02                                        ; export func index
00001f8: 02                                        ; string length
00001f9: 6272                                     br  ; export name
00001fb: 00                                        ; export kind
00001fc: 03                                        ; export func index
00001fd: 08                                        ; string length
00001fe: 6272 5f74 6162 6c65                      br_table  ; export name
0000206: 00                                        ; export kind
0000207: 04                                        ; export func index
0000208: 06                                        ; string length
0000209: 7265 7475 726e                           return  ; export name
000020f: 00                                        ; export kind
0000210: 05                                        ; export func index
0000211: 04                                        ; string length
0000212: 6361 6c6c                                call  ; export name
0000216: 00                                        ; export kind
0000217: 06                                        ; export func index
0000218: 0d                                        ; string length
0000219: 6361 6c6c 5f69 6e64 6972 6563 74         call_indirect  ; export name
0000226: 00                                        ; export kind
0000227: 07                                        ; export func index
0000228: 0b                                        ; string length
0000229: 7265 7475 726e 5f63 616c 6c              return_call  ; export name
0000234: 00                                        ; export kind
0000235: 08                                        ; export func index
0000236: 14                                        ; string length
0000237: 7265 7475 726e 5f63 616c 6c5f 696e 6469  return_call_indi
0000247: 7265 6374                                rect  ; export name
000024b: 00                                        ; export kind
000024c: 09                                        ; export func index
000024d: 04                                        ; string length
000024e: 6472 6f70                                drop  ; export name
0000252: 00                                        ; export kind
0000253: 0a                                        ; export func index
0000254: 06                                        ; string length
0000255: 7365 6c65 6374                           select  ; export name
000025b: 00                                        ; export kind
000025c: 0b                                        ; export func index
000025d: 08                                        ; string length
000025e: 7365 6c65 6374 5f74                      select_t  ; export name
0000266: 00                                        ; export kind
0000267: 0c                                        ; export func index
0000268: 09                                        ; string length
0000269: 6765 745f 6c6f 6361 6c                   get_local  ; export name
0000272: 00                                        ; export kind
0000273: 0d                                        ; export func index
0000274: 09                                        ; string length
0000275: 7365 745f 6c6f 6361 6c                   set_local  ; export name
000027e: 00                                        ; export kind
000027f: 0e                                        ; export func index
0000280: 09                                        ; string length
0000281: 7465 655f 6c6f 6361 6c                   tee_local  ; export name
000028a: 00                                        ; export kind
000028b: 0f                                        ; export func index
000028c: 0a                                        ; string length
000028d: 6765 745f 676c 6f62 616c                 get_global  ; export name
0000297: 00                                        ; export kind
0000298: 10                                        ; export func index
0000299: 0a                                        ; string length
000029a: 7365 745f 676c 6f62 616c                 set_global  ; export name
00002a4: 00                                        ; export kind
00002a5: 11                                        ; export func index
00002a6: 08                                        ; string length
00002a7: 6933 322e 6c6f 6164                      i32.load  ; export name
00002af: 00                                        ; export kind
00002b0: 12                                        ; export func index
00002b1: 08                                        ; string length
00002b2: 6936 342e 6c6f 6164                      i64.load  ; export name
00002ba: 00                                        ; export kind
00002bb: 13                                        ; export func index
00002bc: 08                                        ; string length
00002bd: 6633 322e 6c6f 6164                      f32.load  ; export name
00002c5: 00                                        ; export kind
00002c6: 14                                        ; export func index
00002c7: 08                                        ; string length
00002c8: 6636 342e 6c6f 6164                      f64.load  ; export name
00002d0: 00                                        ; export kind
00002d1: 15                                        ; export func index
00002d2: 0b                                        ; string length
00002d3: 6933 322e 6c6f 6164 385f 73              i32.load8_s  ; export name
00002de: 00                                        ; export kind
00002df: 16                                        ; export func index
00002e0: 0b                                        ; string length
00002e1: 6933 322e 6c6f 6164 385f 75              i32.load8_u  ; export name
00002ec: 00                                        ; export kind
00002ed: 17                                        ; export func index
00002ee: 0c                                        ; string length
00002ef: 6933 322e 6c6f 6164 3136 5f73            i32.load16_s  ; export name
00002fb: 00                                        ; export kind
00002fc: 18                                        ; export func index
00002fd: 0c                                        ; string length
00002fe: 6933 322e 6c6f 6164 3136 5f75            i32.load16_u  ; export name
000030a: 00                                        ; export kind
000030b: 19                                        ; export func index
000030c: 0b                                        ; string length
000030d: 6936 342e 6c6f 6164 385f 73              i64.load8_s  ; export name
0000318: 00                                        ; export kind
0000319: 1a                                        ; export func index
000031a: 0b                                        ; string length
000031b: 6936 342e 6c6f 6164 385f 75              i64.load8_u  ; export name
0000326: 00                                        ; export kind
0000327: 1b                                        ; export func index
0000328: 0c                                        ; string length
0000329: 6936 342e 6c6f 6164 3136 5f73            i64.load16_s  ; export name
0000335: 00                                        ; export kind
0000336: 1c                                        ; export func index
0000337: 0c                                        ; string length
0000338: 6936 342e 6c6f 6164 3136 5f75            i64.load16_u  ; export name
0000344: 00                                        ; export kind
0000345: 1d                                        ; export func index
0000346: 0c                                        ; string length
0000347: 6936 342e 6c6f 6164 3332 5f73            i64.load32_s  ; export name
0000353: 00                                        ; export kind
0000354: 1e                                        ; export func index
0000355: 0c                                        ; string length
0000356: 6936 342e 6c6f 6164 3332 5f75            i64.load32_u  ; export name
0000362: 00                                        ; export kind
0000363: 1f                                        ; export func index
0000364: 09                                        ; string length
0000365: 6933 322e 7374 6f72 65                   i32.store  ; export name
000036e: 00                                        ; export kind
000036f: 20                                        ; export func index
0000370: 09                                        ; string length
0000371: 6936 342e 7374 6f72 65                   i64.store  ; export name
000037a: 00                                        ; export kind
000037b: 21                                        ; export func index
000037c: 09                                        ; string length
000037d: 6633 322e 7374 6f72 65                   f32.store  ; export name
0000386: 00                                        ; export kind
0000387: 22                                        ; export func index
0000388: 09                                        ; string length
0000389: 6636 342e 7374 6f72 65                   f64.store  ; export name
0000392: 00                                        ; export kind
0000393: 23                                        ; export func index
0000394: 0a                                        ; string length
0000395: 6933 322e 7374 6f72 6538                 i32.store8  ; export name
000039f: 00                                        ; export kind
00003a0: 24                                        ; export func index
00003a1: 0b                                        ; string length
00003a2: 6933 322e 7374 6f72 6531 36              i32.store16  ; export name
00003ad: 00                                        ; export kind
00003ae: 25                                        ; export func index
00003af: 0a                                        ; string length
00003b0: 6936 342e 7374 6f72 6538                 i64.store8  ; export name
00003ba: 00                                        ; export kind
00003bb: 26                                        ; export func index
00003bc: 0b                                        ; string length
00003bd: 6936 342e 7374 6f72 6531 36              i64.store16  ; export name
00003c8: 00                                        ; export kind
00003c9: 27                                        ; export func index
00003ca: 0b                                        ; string length
00003cb: 6936 342e 7374 6f72 6533 32              i64.store32  ; export name
00003d6: 00                                        ; export kind
00003d7: 28                                        ; export func index
00003d8: 0e                                        ; string length
00003d9: 6375 7272 656e 745f 6d65 6d6f 7279       current_memory  ; export name
00003e7: 00                                        ; export kind
00003e8: 29                                        ; export func index
00003e9: 0b                                        ; string length
00003ea: 6772 6f77 5f6d 656d 6f72 79              grow_memory  ; export name
00003f5: 00                                        ; export kind
00003f6: 2a                                        ; export func index
00003f7: 09                                        ; string length
00003f8: 6933 322e 636f 6e73 74                   i32.const  ; export name
0000401: 00                                        ; export kind
0000402: 2b                                        ; export func index
0000403: 09                                        ; string length
0000404: 6936 342e 636f 6e73 74                   i64.const  ; export name
000040d: 00                                        ; export kind
000040e: 2c                                        ; export func index
000040f: 09                                        ; string length
0000410: 6633 322e 636f 6e73 74                   f32.const  ; export name
0000419: 00                                        ; export kind
000041a: 2d                                        ; export func index
000041b: 09                                        ; string length
000041c: 6636 342e 636f 6e73 74                   f64.const  ; export name
0000425: 00                                        ; export kind
0000426: 2e                                        ; export func index
0000427: 07                                        ; string length
0000428: 6933 322e 6571 7a                        i32.eqz  ; export name
000042f: 00                                        ; export kind
0000430: 2f                                        ; export func index
0000431: 06                                        ; string length
0000432: 6933 322e 6571                           i32.eq  ; export name
0000438: 00                                        ; export kind
0000439: 30                                        ; export func index
000043a: 06                                        ; string length
000043b: 6933 322e 6e65                           i32.ne  ; export name
0000441: 00                                        ; export kind
0000442: 31                                        ; export func index
0000443: 08                                        ; string length
0000444: 6933 322e 6c74 5f73                      i32.lt_s  ; export name
000044c: 00                                        ; export kind
000044d: 32                                        ; export func index
000044e: 08                                        ; string length
000044f: 6933 322e 6c74 5f75                      i32.lt_u  ; export name
0000457: 00                                        ; export kind
0000458: 33                                        ; export func index
0000459: 08                                        ; string length
000045a: 6933 322e 6774 5f73                      i32.gt_s  ; export name
0000462: 00                                        ; export kind
0000463: 34                                        ; export func index
0000464: 08                                        ; string length
0000465: 6933 322e 6774 5f75                      i32.gt_u  ; export name
000046d: 00                                        ; export kind
000046e: 35                                        ; export func index
000046f: 08                                        ; string length
0000470: 6933 322e 6c65 5f73                      i32.le_s  ; export name
0000478: 00                                        ; export kind
0000479: 36                                        ; export func index
000047a: 08                                        ; string length
000047b: 6933 322e 6c65 5f75                      i32.le_u  ; export name
0000483: 00                                        ; export kind
0000484: 37                                        ; export func index
0000485: 08                                        ; string length
0000486: 6933 322e 6765 5f73                      i32.ge_s  ; export name
000048e: 00                                        ; export kind
000048f: 38                                        ; export func index
0000490: 08                                        ; string length
0000491: 6933 322e 6765 5f75                      i32.ge_u  ; export name
0000499: 00                                        ; export kind
000049a: 39                                        ; export func index
000049b: 07                                        ; string length
000049c: 6936 342e 6571 7a                        i64.eqz  ; export name
00004a3: 00                                        ; export kind
00004a4: 3a                                        ; export func index
00004a5: 06                                        ; string length
00004a6: 6936 342e 6571                           i64.eq  ; export name
00004ac: 00                                        ; export kind
00004ad: 3b                                        ; export func index
00004ae: 06                                        ; string length
00004af: 6936 342e 6e65                           i64.ne  ; export name
00004b5: 00                                        ; export kind
00004b6: 3c                                        ; export func index
00004b7: 08                                        ; string length
00004b8: 6936 342e 6c74 5f73                      i64.lt_s  ; export name
00004c0: 00                                        ; export kind
00004c1: 3d                                        ; export func index
00004c2: 08                                        ; string length
00004c3: 6936 342e 6c74 5f75                      i64.lt_u  ; export name
00004cb: 00                                        ; export kind
00004cc: 3e                                        ; export func index
00004cd: 08                                        ; string length
00004ce: 6936 342e 6774 5f73                      i64.gt_s  ; export name
00004d6: 00                                        ; export kind
00004d7: 3f                                        ; export func index
00004d8: 08                                        ; string length
00004d9: 6936 342e 6774 5f75                      i64.gt_u  ; export name
00004e1: 00                                        ; export kind
00004e2: 40                                        ; export func index
00004e3: 08                                        ; string length
00004e4: 6936 342e 6c65 5f73                      i64.le_s  ; export name
00004ec: 00                                        ; export kind
00004ed: 41                                        ; export func index
00004ee: 08                                        ; string length
00004ef: 6936 342e 6c65 5f75                      i64.le_u  ; export name
00004f7: 00                                        ; export kind
00004f8: 42                                        ; export func index
00004f9: 08                                        ; string length
00004fa: 6936 342e 6765 5f73                      i64.ge_s  ; export name
0000502: 00                                        ; export kind
0000503: 43                                        ; export func index
0000504: 08                                        ; string length
0000505: 6936 342e 6765 5f75                      i64.ge_u  ; export name
000050d: 00                                        ; export kind
000050e: 44                                        ; export func index
000050f: 06                                        ; string length
0000510: 6633 322e 6571                           f32.eq  ; export name
0000516: 00                                        ; export kind
0000517: 45                                        ; export func index
0000518: 06                                        ; string length
0000519: 6633 322e 6e65                           f32.ne  ; export name
000051f: 00                                        ; export kind
0000520: 46                                        ; export func index
0000521: 06                                        ; string length
0000522: 6633 322e 6c74                           f32.lt  ; export name
0000528: 00                                        ; export kind
0000529: 47                                        ; export func index
000052a: 06                                        ; string length
000052b: 6633 322e 6774                           f32.gt  ; export name
0000531: 00                                        ; export kind
0000532: 48                                        ; export func index
0000533: 06                                        ; string length
0000534: 6633 322e 6c65                           f32.le  ; export name
000053a: 00                                        ; export kind
000053b: 49                                        ; export func index
000053c: 06                                        ; string length
000053d: 6633 322e 6765                           f32.ge  ; export name
0000543: 00                                        ; export kind
0000544: 4a                                        ; export func index
0000545: 06                                        ; string length
0000546: 6636 342e 6571                           f64.eq  ; export name
000054c: 00                                        ; export kind
000054d: 4b                                        ; export func index
000054e: 06                                        ; string length
000054f: 6636 342e 6e65                           f64.ne  ; export name
0000555: 00                                        ; export kind
0000556: 4c                                        ; export func index
0000557: 06                                        ; string length
0000558: 6636 342e 6c74                           f64.lt  ; export name
000055e: 00                                        ; export kind
000055f: 4d                                        ; export func index
0000560: 06                                        ; string length
0000561: 6636 342e 6774                           f64.gt  ; export name
0000567: 00                                        ; export kind
0000568: 4e                                        ; export func index
0000569: 06                                        ; string length
000056a: 6636 342e 6c65                           f64.le  ; export name
0000570: 00                                        ; export kind
0000571: 4f                                        ; export func index
0000572: 06                                        ; string length
0000573: 6636 342e 6765                           f64.ge  ; export name
0000579: 00                                        ; export kind
000057a: 50                                        ; export func index
000057b: 07                                        ; string length
000057c: 6933 322e 636c 7a                        i32.clz  ; export name
0000583: 00                                        ; export kind
0000584: 51                                        ; export func index
0000585: 07                                        ; string length
0000586: 6933 322e 6374 7a                        i32.ctz  ; export name
000058d: 00                                        ; export kind
000058e: 52                                        ; export func index
000058f: 0a                                        ; string length
0000590: 6933 322e 706f 7063 6e74                 i32.popcnt  ; export name
000059a: 00                                        ; export kind
000059b: 53                                        ; export func index
000059c: 07                                        ; string length
000059d: 6933 322e 6164 64                        i32.add  ; export name
00005a4: 00                                        ; export kind
00005a5: 54                                        ; export func index
00005a6: 07                                        ; string length
00005a7: 6933 322e 7375 62                        i32.sub  ; export name
00005ae: 00                                        ; export kind
00005af: 55                                        ; export func index
00005b0: 07                                        ; string length
00005b1: 6933 322e 6d75 6c                        i32.mul  ; export name
00005b8: 00                                        ; export kind
00005b9: 56                                        ; export func index
00005ba: 09                                        ; string length
00005bb: 6933 322e 6469 765f 73                   i32.div_s  ; export name
00005c4: 00                                        ; export kind
00005c5: 57                                        ; export func index
00005c6: 09                                        ; string length
00005c7: 6933 322e 6469 765f 75                   i32.div_u  ; export name
00005d0: 00                                        ; export kind
00005d1: 58                                        ; export func index
00005d2: 09                                        ; string length
00005d3: 6933 322e 7265 6d5f 73                   i32.rem_s  ; export name
00005dc: 00                                        ; export kind
00005dd: 59                                        ; export func index
00005de: 09                                        ; string length
00005df: 6933 322e 7265 6d5f 75                   i32.rem_u  ; export name
00005e8: 00                                        ; export kind
00005e9: 5a                                        ; export func index
00005ea: 07                                        ; string length
00005eb: 6933 322e 616e 64                        i32.and  ; export name
00005f2: 00                                        ; export kind
00005f3: 5b                                        ; export func index
00005f4: 06                                        ; string length
00005f5: 6933 322e 6f72                           i32.or  ; export name
00005fb: 00                                        ; export kind
00005fc: 5c                                        ; export func index
00005fd: 07                                        ; string length
00005fe: 6933 322e 786f 72                        i32.xor  ; export name
0000605: 00                                        ; export kind
0000606: 5d                                        ; export func index
0000607: 07                                        ; string length
0000608: 6933 322e 7368 6c                        i32.shl  ; export name
000060f: 00                                        ; export kind
0000610: 5e                                        ; export func index
0000611: 09                                        ; string length
0000612: 6933 322e 7368 725f 73                   i32.shr_s  ; export name
000061b: 00                                        ; export kind
000061c: 5f                                        ; export func index
000061d: 09                                        ; string length
000061e: 6933 322e 7368 725f 75                   i32.shr_u  ; export name
0000627: 00                                        ; export kind
0000628: 60                                        ; export func index
0000629: 08                                        ; string length
000062a: 6933 322e 726f 746c                      i32.rotl  ; export name
0000632: 00                                        ; export kind
0000633: 61                                        ; export func index
0000634: 08                                        ; string length
0000635: 6933 322e 726f 7472                      i32.rotr  ; export name
000063d: 00                                        ; export kind
000063e: 62                                        ; export func index
000063f: 07                                        ; string length
0000640: 6936 342e 636c 7a                        i64.clz  ; export name
0000647: 00                                        ; export kind
0000648: 63                                        ; export func index
0000649: 07                                        ; string length
000064a: 6936 342e 6374 7a                        i64.ctz  ; export name
0000651: 00                                        ; export kind
0000652: 64                                        ; export func index
0000653: 0a                                        ; string length
0000654: 6936 342e 706f 7063 6e74                 i64.popcnt  ; export name
000065e: 00                                        ; export kind
000065f: 65                                        ; export func index
0000660: 07                                        ; string length
0000661: 6936 342e 6164 64                        i64.add  ; export name
0000668: 00                                        ; export kind
0000669: 66                                        ; export func index
000066a: 07                                        ; string length
000066b: 6936 342e 7375 62                        i64.sub  ; export name
0000672: 00                                        ; export kind
0000673: 67                                        ; export func index
0000674: 07                                        ; string length
0000675: 6936 342e 6d75 6c                        i64.mul  ; export name
000067c: 00                                        ; export kind
000067d: 68                                        ; export func index
000067e: 09                                        ; string length
000067f: 6936 342e 6469 765f 73                   i64.div_s  ; export name
0000688: 00                                        ; export kind
0000689: 69                                        ; export func index
000068a: 09                                        ; string length
000068b: 6936 342e 6469 765f 75                   i64.div_u  ; export name
0000694: 00                                        ; export kind
0000695: 6a                                        ; export func index
0000696: 09                                        ; string length
0000697: 6936 342e 7265 6d5f 73                   i64.rem_s  ; export name
00006a0: 00                                        ; export kind
00006a1: 6b                                        ; export func index
00006a2: 09                                        ; string length
00006a3: 6936 342e 7265 6d5f 75                   i64.rem_u  ; export name
00006ac: 00                                        ; export kind
00006ad: 6c                                        ; export func index
00006ae: 07                                        ; string length
00006af: 6936 342e 616e 64                        i64.and  ; export name
00006b6: 00                                        ; export kind
00006b7: 6d                                        ; export func index
00006b8: 06                                        ; string length
00006b9: 6936 342e 6f72                           i64.or  ; export name
00006bf: 00                                        ; export kind
00006c0: 6e                                        ; export func index
00006c1: 07                                        ; string length
00006c2: 6936 342e 786f 72                        i64.xor  ; export name
00006c9: 00                                        ; export kind
00006ca: 6f                                        ; export func index
00006cb: 07                                        ; string length
00006cc: 6936 342e 7368 6c                        i64.shl  ; export name
00006d3: 00                                        ; export kind
00006d4: 70                                        ; export func index
00006d5: 09                                        ; string length
00006d6: 6936 342e 7368 725f 73                   i64.shr_s  ; export name
00006df: 00                                        ; export kind
00006e0: 71                                        ; export func index
00006e1: 09                                        ; string length
00006e2: 6936 342e 7368 725f 75                   i64.shr_u  ; export name
00006eb: 00                                        ; export kind
00006ec: 72                                        ; export func index
00006ed: 08                                        ; string length
00006ee: 6936 342e 726f 746c                      i64.rotl  ; export name
00006f6: 00                                        ; export kind
00006f7: 73                                        ; export func index
00006f8: 08                                        ; string length
00006f9: 6936 342e 726f 7472                      i64.rotr  ; export name
0000701: 00                                        ; export kind
0000702: 74                                        ; export func index
0000703: 07                                        ; string length
0000704: 6633 322e 6162 73                        f32.abs  ; export name
000070b: 00                                        ; export kind
000070c: 75                                        ; export func index
000070d: 07                                        ; string length
000070e: 6633 322e 6e65 67                        f32.neg  ; export name
0000715: 00                                        ; export kind
0000716: 76                                        ; export func index
0000717: 08                                        ; string length
0000718: 6633 322e 6365 696c                      f32.ceil  ; export name
0000720: 00                                        ; export kind
0000721: 77                                        ; export func index
0000722: 09                                        ; string length
0000723: 6633 322e 666c 6f6f 72                   f32.floor  ; export name
000072c: 00                                        ; export kind
000072d: 78                                        ; export func index
000072e: 09                                        ; string length
000072f: 6633 322e 7472 756e 63                   f32.trunc  ; export name
0000738: 00                                        ; export kind
0000739: 79                                        ; export func index
000073a: 0b                                        ; string length
000073b: 6633 322e 6e65 6172 6573 74              f32.nearest  ; export name
0000746: 00                                        ; export kind
0000747: 7a                                        ; export func index
0000748: 08                                        ; string length
0000749: 6633 322e 7371 7274                      f32.sqrt  ; export name
0000751: 00                                        ; export kind
0000752: 7b                                        ; export func index
0000753: 07                                        ; string length
0000754: 6633 322e 6164 64                        f32.add  ; export name
000075b: 00                                        ; export kind
000075c: 7c                                        ; export func index
000075d: 07                                        ; string length
000075e: 6633 322e 7375 62                        f32.sub  ; export name
0000765: 00                                        ; export kind
0000766: 7d                                        ; export func index
0000767: 07                                        ; string length
0000768: 6633 322e 6d75 6c                        f32.mul  ; export name
000076f: 00                                        ; export kind
0000770: 7e                                        ; export func index
0000771: 07                                        ; string length
0000772: 6633 322e 6469 76                        f32.div  ; export name
0000779: 00                                        ; export kind
000077a: 7f                                        ; export func index
000077b: 07                                        ; string length
000077c: 6633 322e 6d69 6e                        f32.min  ; export name
0000783: 00                                        ; export kind
0000784: 8001                                      ; export func index
0000786: 07                                        ; string length
0000787: 6633 322e 6d61 78                        f32.max  ; export name
000078e: 00                                        ; export kind
000078f: 8101                                      ; export func index
0000791: 0c                                        ; string length
0000792: 6633 322e 636f 7079 7369 676e            f32.copysign  ; export name
000079e: 00                                        ; export kind
000079f: 8201                                      ; export func index
00007a1: 07                                        ; string length
00007a2: 6636 342e 6162 73                        f64.abs  ; export name
00007a9: 00                                        ; export kind
00007aa: 8301                                      ; export func index
00007ac: 07                                        ; string length
00007ad: 6636 342e 6e65 67                        f64.neg  ; export name
00007b4: 00                                        ; export kind
00007b5: 8401                                      ; export func index
00007b7: 08                                        ; string length
00007b8: 6636 342e 6365 696c                      f64.ceil  ; export name
00007c0: 00                                        ; export kind
00007c1: 8501                                      ; export func index
00007c3: 09                                        ; string length
00007c4: 6636 342e 666c 6f6f 72                   f64.floor  ; export name
00007cd: 00                                        ; export kind
00007ce: 8601                                      ; export func index
00007d0: 09                                        ; string length
00007d1: 6636 342e 7472 756e 63                   f64.trunc  ; export name
00007da: 00                                        ; export kind
00007db: 8701                                      ; export func index
00007dd: 0b                                        ; string length
00007de: 6636 342e 6e65 6172 6573 74              f64.nearest  ; export name
00007e9: 00                                        ; export kind
00007ea: 8801                                      ; export func index
00007ec: 08                                        ; string length
00007ed: 6636 342e 7371 7274                      f64.sqrt  ; export name
00007f5: 00                                        ; export kind
00007f6: 8901                                      ; export func index
00007f8: 07                                        ; string length
00007f9: 6636 342e 6164 64                        f64.add  ; export name
0000800: 00                                        ; export kind
0000801: 8a01                                      ; export func index
0000803: 07                                        ; string length
0000804: 6636 342e 7375 62                        f64.sub  ; export name
000080b: 00                                        ; export kind
000080c: 8b01                                      ; export func index
000080e: 07                                        ; string length
000080f: 6636 342e 6d75 6c                        f64.mul  ; export name
0000816: 00                                        ; export kind
0000817: 8c01                                      ; export func index
0000819: 07                                        ; string length
000081a: 6636 342e 6469 76                        f64.div  ; export name
0000821: 00                                        ; export kind
0000822: 8d01                                      ; export func index
0000824: 07                                        ; string length
0000825: 6636 342e 6d69 6e                        f64.min  ; export name
000082c: 00                                        ; export kind
000082d: 8e01                                      ; export func index
000082f: 07                                        ; string length
0000830: 6636 342e 6d61 78                        f64.max  ; export name
0000837: 00                                        ; export kind
0000838: 8f01                                      ; export func index
000083a: 0c                                        ; string length
000083b: 6636 342e 636f 7079 7369 676e            f64.copysign  ; export name
0000847: 00                                        ; export kind
0000848: 9001                                      ; export func index
000084a: 0c                                        ; string length
000084b: 6933 322e 7772 6170 2f69 3634            i32.wrap/i64  ; export name
0000857: 00                                        ; export kind
0000858: 9101                                      ; export func index
000085a: 0f                                        ; string length
000085b: 6933 322e 7472 756e 635f 732f 6633 32    i32.trunc_s/f32  ; export name
000086a: 00                                        ; export kind
000086b: 9201                                      ; export func index
000086d: 0f                                        ; string length
000086e: 6933 322e 7472 756e 635f 752f 6633 32    i32.trunc_u/f32  ; export name
000087d: 00                                        ; export kind
000087e: 9301                                      ; export func index
0000880: 0f                                        ; string length
0000881: 6933 322e 7472 756e 635f 732f 6636 34    i32.trunc_s/f64  ; export name
0000890: 00                                        ; export kind
0000891: 9401                                      ; export func index
0000893: 0f                                        ; string length
0000894: 6933 322e 7472 756e 635f 752f 6636 34    i32.trunc_u/f64  ; export name
00008a3: 00                                        ; export kind
00008a4: 9501                                      ; export func index
00008a6: 10                                        ; string length
00008a7: 6936 342e 6578 7465 6e64 5f73 2f69 3332  i64.extend_s/i32  ; export name
00008b7: 00                                        ; export kind
00008b8: 9601                                      ; export func index
00008ba: 10                                        ; string length
00008bb: 6936 342e 6578 7465 6e64 5f75 2f69 3332  i64.extend_u/i32  ; export name
00008cb: 00                                        ; export kind
00008cc: 9701                                      ; export func index
00008ce: 0f                                        ; string length
00008cf: 6936 342e 7472 756e 635f 732f 6633 32    i64.trunc_s/f32  ; export name
00008de: 00                                        ; export kind
00008df: 9801                                      ; export func index
00008e1: 0f                                        ; string length
00008e2: 6936 342e 7472 756e 635f 752f 6633 32    i64.trunc_u/f32  ; export name
00008f1: 00                                        ; export kind
00008f2: 9901                                      ; export func index
00008f4: 0f                                        ; string length
00008f5: 6936 342e 7472 756e 635f 732f 6636 34    i64.trunc_s/f64  ; export name
0000904: 00                                        ; export kind
0000905: 9a01                                      ; export func index
0000907: 0f                                        ; string length
0000908: 6936 342e 7472 756e 635f 752f 6636 34    i64.trunc_u/f64  ; export name
0000917: 00                                        ; export kind
0000918: 9b01                                      ; export func index
000091a: 11                                        ; string length
000091b: 6633 322e 636f 6e76 6572 745f 732f 6933  f32.convert_s/i3
000092b: 32                                       2  ; export name
000092c: 00                                        ; export kind
000092d: 9c01                                      ; export func index
000092f: 11                                        ; string length
0000930: 6633 322e 636f 6e76 6572 745f 752f 6933  f32.convert_u/i3
0000940: 32                                       2  ; export name
0000941: 00                                        ; export kind
0000942: 9d01                                      ; export func index
0000944: 11                                        ; string length
0000945: 6633 322e 636f 6e76 6572 745f 732f 6936  f32.convert_s/i6
0000955: 34                                       4  ; export name
0000956: 00                                        ; export kind
0000957: 9e01                                      ; export func index
0000959: 11                                        ; string length
000095a: 6633 322e 636f 6e76 6572 745f 752f 6936  f32.convert_u/i6
000096a: 34                                       4  ; export name
000096b: 00                                        ; export kind
000096c: 9f01                                      ; export func index
000096e: 0e                                        ; string length
000096f: 6633 322e 6465 6d6f 7465 2f66 3634       f32.demote/f64  ; export name
000097d: 00                                        ; export kind
000097e: a001                                      ; export func index
0000980: 11                                        ; string length
0000981: 6636 342e 636f 6e76 6572 745f 732f 6933  f64.convert_s/i3
0000991: 32                                       2  ; export name
0000992: 00                                        ; export kind
0000993: a101                                      ; export func index
0000995: 11                                        ; string length
0000996: 6636 342e 636f 6e76 6572 745f 752f 6933  f64.convert_u/i3
00009a6: 32                                       2  ; export name
00009a7: 00                                        ; export kind
00009a8: a201                                      ; export func index
00009aa: 11                                        ; string length
00009ab: 6636 342e 636f 6e76 6572 745f 732f 6936  f64.convert_s/i6
00009bb: 34                                       4  ; export name
00009bc: 00                                        ; export kind
00009bd: a301                                      ; export func index
00009bf: 11                                        ; string length
00009c0: 6636 342e 636f 6e76 6572 745f 752f 6936  f64.convert_u/i6
00009d0: 34                                       4  ; export name
00009d1: 00                                        ; export kind
00009d2: a401                                      ; export func index
00009d4: 0f                                        ; string length
00009d5: 6636 342e 7072 6f6d 6f74 652f 6633 32    f64.promote/f32  ; export name
00009e4: 00                                        ; export kind
00009e5: a501                                      ; export func index
00009e7: 13                                        ; string length
00009e8: 6933 322e 7265 696e 7465 7270 7265 742f  i32.reinterpret/
00009f8: 6633 32                                  f32  ; export name
00009fb: 00                                        ; export kind
00009fc: a601                                      ; export func index
00009fe: 13                                        ; string length
00009ff: 6633 322e 7265 696e 7465 7270 7265 742f  f32.reinterpret/
0000a0f: 6933 32                                  i32  ; export name
0000a12: 00                                        ; export kind
0000a13: a701                                      ; export func index
0000a15: 13                                        ; string length
0000a16: 6936 342e 7265 696e 7465 7270 7265 742f  i64.reinterpret/
0000a26: 6636 34                                  f64  ; export name
0000a29: 00                                        ; export kind
0000a2a: a801                                      ; export func index
0000a2c: 13                                        ; string length
0000a2d: 6636 342e 7265 696e 7465 7270 7265 742f  f64.reinterpret/
0000a3d: 6936 34                                  i64  ; export name
0000a40: 00                                        ; export kind
0000a41: a901                                      ; export func index
0000a43: 0d                                        ; string length
0000a44: 6933 322e 6578 7465 6e64 385f 73         i32.extend8_s  ; export name
0000a51: 00                                        ; export kind
0000a52: aa01                                      ; export func index
0000a54: 0e                                        ; string length
0000a55: 6933 322e 6578 7465 6e64 3136 5f73       i32.extend16_s  ; export name
0000a63: 00                                        ; export kind
0000a64: ab01                                      ; export func index
0000a66: 0d                                        ; string length
0000a67: 6936 342e 6578 7465 6e64 385f 73         i64.extend8_s  ; export name
0000a74: 00                                        ; export kind
0000a75: ac01                                      ; export func index
0000a77: 0e                                        ; string length
0000a78: 6936 342e 6578 7465 6e64 3136 5f73       i64.extend16_s  ; export name
0000a86: 00                                        ; export kind
0000a87: ad01                                      ; export func index
0000a89: 0e                                        ; string length
0000a8a: 6936 342e 6578 7465 6e64 3332 5f73       i64.extend32_s  ; export name
0000a98: 00                                        ; export kind
0000a99: ae01                                      ; export func index
0000a9b: 06                                        ; string length
0000a9c: 616c 6c6f 6361                           alloca  ; export name
0000aa2: 00                                        ; export kind
0000aa3: af01                                      ; export func index
0000aa5: 09                                        ; string length
0000aa6: 6272 5f75 6e6c 6573 73                   br_unless  ; export name
0000aaf: 00                                        ; export kind
0000ab0: b001                                      ; export func index
0000ab2: 09                                        ; string length
0000ab3: 6361 6c6c 5f68 6f73 74                   call_host  ; export name
0000abc: 00                                        ; export kind
0000abd: b101                                      ; export func index
0000abf: 04                                        ; string length
0000ac0: 6461 7461                                data  ; export name
0000ac4: 00                                        ; export kind
0000ac5: b201                                      ; export func index
0000ac7: 09                                        ; string length
0000ac8: 6472 6f70 5f6b 6565 70                   drop_keep  ; export name
0000ad1: 00                                        ; export kind
0000ad2: b301                                      ; export func index
0000ad4: 13                                        ; string length
0000ad5: 6933 322e 7472 756e 635f 733a 7361 742f  i32.trunc_s:sat/
0000ae5: 6633 32                                  f32  ; export name
0000ae8: 00                                        ; export kind
0000ae9: b401                                      ; export func index
0000aeb: 13                                        ; string length
0000aec: 6933 322e 7472 756e 635f 753a 7361 742f  i32.trunc_u:sat/
0000afc: 6633 32                                  f32  ; export name
0000aff: 00                                        ; export kind
0000b00: b501                                      ; export func index
0000b02: 13                                        ; string length
0000b03: 6933 322e 7472 756e 635f 733a 7361 742f  i32.trunc_s:sat/
0000b13: 6636 34                                  f64  ; export name
0000b16: 00                                        ; export kind
0000b17: b601                                      ; export func index
0000b19: 13                                        ; string length
0000b1a: 6933 322e 7472 756e 635f 753a 7361 742f  i32.trunc_u:sat/
0000b2a: 6636 34                                  f64  ; export name
0000b2d: 00                                        ; export kind
0000b2e: b701                                      ; export func index
0000b30: 13                                        ; string length
0000b31: 6936 342e 7472 756e 635f 733a 7361 742f  i64.trunc_s:sat/
0000b41: 6633 32                                  f32  ; export name
0000b44: 00                                        ; export kind
0000b45: b801                                      ; export func index
0000b47: 13                                        ; string length
0000b48: 6936 342e 7472 756e 635f 753a 7361 742f  i64.trunc_u:sat/
0000b58: 6633 32                                  f32  ; export name
0000b5b: 00                                        ; export kind
0000b5c: b901                                      ; export func index
0000b5e: 13                                        ; string length
0000b5f: 6936 342e 7472 756e 635f 733a 7361 742f  i64.trunc_s:sat/
0000b6f: 6636 34                                  f64  ; export name
0000b72: 00                                        ; export kind
0000b73: ba01                                      ; export func index
0000b75: 13                                        ; string length
0000b76: 6936 342e 7472 756e 635f 753a 7361 742f  i64.trunc_u:sat/
0000b86: 6636 34                                  f64  ; export name
0000b89: 00                                        ; export kind
0000b8a: bb01                                      ; export func index
0000b8c: 0b                                        ; string length
0000b8d: 6d65 6d6f 7279 2e69 6e69 74              memory.init  ; export name
0000b98: 00                                        ; export kind
0000b99: bc01                                      ; export func index
0000b9b: 09                                        ; string length
0000b9c: 6461 7461 2e64 726f 70                   data.drop  ; export name
0000ba5: 00                                        ; export kind
0000ba6: bd01                                      ; export func index
0000ba8: 0b                                        ; string length
0000ba9: 6d65 6d6f 7279 2e63 6f70 79              memory.copy  ; export name
0000bb4: 00                                        ; export kind
0000bb5: be01                                      ; export func index
0000bb7: 0b                                        ; string length
0000bb8: 6d65 6d6f 7279 2e66 696c 6c              memory.fill  ; export name
0000bc3: 00                                        ; export kind
0000bc4: bf01                                      ; export func index
0000bc6: 0a                                        ; string length
0000bc7: 7461 626c 652e 696e 6974                 table.init  ; export name
0000bd1: 00                                        ; export kind
0000bd2: c001                                      ; export func index
0000bd4: 09                                        ; string length
0000bd5: 656c 656d 2e64 726f 70                   elem.drop  ; export name
0000bde: 00                                        ; export kind
0000bdf: c101                                      ; export func index
0000be1: 0a                                        ; string length
0000be2: 7461 626c 652e 636f 7079                 table.copy  ; export name
0000bec: 00                                        ; export kind
0000bed: c201                                      ; export func index
0000bef: 09                                        ; string length
0000bf0: 7631 3238 2e6c 6f61 64                   v128.load  ; export name
0000bf9: 00                                        ; export kind
0000bfa: c301                                      ; export func index
0000bfc: 0a                                        ; string length
0000bfd: 7631 3238 2e73 746f 7265                 v128.store  ; export name
0000c07: 00                                        ; export kind
0000c08: c401                                      ; export func index
0000c0a: 0a                                        ; string length
0000c0b: 7631 3238 2e63 6f6e 7374                 v128.const  ; export name
0000c15: 00                                        ; export kind
0000c16: c501                                      ; export func index
0000c18: 0b                                        ; string length
0000c19: 6938 7831 362e 7370 6c61 74              i8x16.splat  ; export name
0000c24: 00                                        ; export kind
0000c25: c601                                      ; export func index
0000c27: 14                                        ; string length
0000c28: 6938 7831 362e 6578 7472 6163 745f 6c61  i8x16.extract_la
0000c38: 6e65 5f73                                ne_s  ; export name
0000c3c: 00                                        ; export kind
0000c3d: c701                                      ; export func index
0000c3f: 14                                        ; string length
0000c40: 6938 7831 362e 6578 7472 6163 745f 6c61  i8x16.extract_la
0000c50: 6e65 5f75                                ne_u  ; export name
0000c54: 00                                        ; export kind
0000c55: c801                                      ; export func index
0000c57: 12                                        ; string length
0000c58: 6938 7831 362e 7265 706c 6163 655f 6c61  i8x16.replace_la
0000c68: 6e65                                     ne  ; export name
0000c6a: 00                                        ; export kind
0000c6b: c901                                      ; export func index
0000c6d: 0b                                        ; string length
0000c6e: 6931 3678 382e 7370 6c61 74              i16x8.splat  ; export name
0000c79: 00                                        ; export kind
0000c7a: ca01                                      ; export func index
0000c7c: 14                                        ; string length
0000c7d: 6931 3678 382e 6578 7472 6163 745f 6c61  i16x8.extract_la
0000c8d: 6e65 5f73                                ne_s  ; export name
0000c91: 00                                        ; export kind
0000c92: cb01                                      ; export func index
0000c94: 14                                        ; string length
0000c95: 6931 3678 382e 6578 7472 6163 745f 6c61  i16x8.extract_la
0000ca5: 6e65 5f75                                ne_u  ; export name
0000ca9: 00                                        ; export kind
0000caa: cc01                                      ; export func index
0000cac: 12                                        ; string length
0000cad: 6931 3678 382e 7265 706c 6163 655f 6c61  i16x8.replace_la
0000cbd: 6e65                                     ne  ; export name
0000cbf: 00                                        ; export kind
0000cc0: cd01                                      ; export func index
0000cc2: 0b                                        ; string length
0000cc3: 6933 3278 342e 7370 6c61 74              i32x4.splat  ; export name
0000cce: 00                                        ; export kind
0000ccf: ce01                                      ; export func index
0000cd1: 12                                        ; string length
0000cd2: 6933 3278 342e 6578 7472 6163 745f 6c61  i32x4.extract_la
0000ce2: 6e65                                     ne  ; export name
0000ce4: 00                                        ; export kind
0000ce5: cf01                                      ; export func index
0000ce7: 12                                        ; string length
0000ce8: 6933 3278 342e 7265 706c 6163 655f 6c61  i32x4.replace_la
0000cf8: 6e65                                     ne  ; export name
0000cfa: 00                                        ; export kind
0000cfb: d001                                      ; export func index
0000cfd: 0b                                        ; string length
0000cfe: 6936 3478 322e 7370 6c61 74              i64x2.splat  ; export name
0000d09: 00                                        ; export kind
0000d0a: d101                                      ; export func index
0000d0c: 12                                        ; string length
0000d0d: 6936 3478 322e 6578 7472 6163 745f 6c61  i64x2.extract_la
0000d1d: 6e65                                     ne  ; export name
0000d1f: 00                                        ; export kind
0000d20: d201                                      ; export func index
0000d22: 12                                        ; string length
0000d23: 6936 3478 322e 7265 706c 6163 655f 6c61  i64x2.replace_la
0000d33: 6e65                                     ne  ; export name
0000d35: 00                                        ; export kind
0000d36: d301                                      ; export func index
0000d38: 0b                                        ; string length
0000d39: 6633 3278 342e 7370 6c61 74              f32x4.splat  ; export name
0000d44: 00                                        ; export kind
0000d45: d401                                      ; export func index
0000d47: 12                                        ; string length
0000d48: 6633 3278 342e 6578 7472 6163 745f 6c61  f32x4.extract_la
0000d58: 6e65                                     ne  ; export name
0000d5a: 00                                        ; export kind
0000d5b: d501                                      ; export func index
0000d5d: 12                                        ; string length
0000d5e: 6633 3278 342e 7265 706c 6163 655f 6c61  f32x4.replace_la
0000d6e: 6e65                                     ne  ; export name
0000d70: 00                                        ; export kind
0000d71: d601                                      ; export func index
0000d73: 0b                                        ; string length
0000d74: 6636 3478 322e 7370 6c61 74              f64x2.splat  ; export name
0000d7f: 00                                        ; export kind
0000d80: d701                                      ; export func index
0000d82: 12                                        ; string length
0000d83: 6636 3478 322e 6578 7472 6163 745f 6c61  f64x2.extract_la
0000d93: 6e65                                     ne  ; export name
0000d95: 00                                        ; export kind
0000d96: d801                                      ; export func index
0000d98: 12                                        ; string length
0000d99: 6636 3478 322e 7265 706c 6163 655f 6c61  f64x2.replace_la
0000da9: 6e65                                     ne  ; export name
0000dab: 00                                        ; export kind
0000dac: d901                                      ; export func index
0000dae: 08                                        ; string length
0000daf: 6938 7831 362e 6571                      i8x16.eq  ; export name
0000db7: 00                                        ; export kind
0000db8: da01                                      ; export func index
0000dba: 08                                        ; string length
0000dbb: 6938 7831 362e 6e65                      i8x16.ne  ; export name
0000dc3: 00                                        ; export kind
0000dc4: db01                                      ; export func index
0000dc6: 0a                                        ; string length
0000dc7: 6938 7831 362e 6c74 5f73                 i8x16.lt_s  ; export name
0000dd1: 00                                        ; export kind
0000dd2: dc01                                      ; export func index
0000dd4: 0a                                        ; string length
0000dd5: 6938 7831 362e 6c74 5f75                 i8x16.lt_u  ; export name
0000ddf: 00                                        ; export kind
0000de0: dd01                                      ; export func index
0000de2: 0a                                        ; string length
0000de3: 6938 7831 362e 6774 5f73                 i8x16.gt_s  ; export name
0000ded: 00                                        ; export kind
0000dee: de01                                      ; export func index
0000df0: 0a                                        ; string length
0000df1: 6938 7831 362e 6774 5f75                 i8x16.gt_u  ; export name
0000dfb: 00                                        ; export kind
0000dfc: df01                                      ; export func index
0000dfe: 0a                                        ; string length
0000dff: 6938 7831 362e 6c65 5f73                 i8x16.le_s  ; export name
0000e09: 00                                        ; export kind
0000e0a: e001                                      ; export func index
0000e0c: 0a                                        ; string length
0000e0d: 6938 7831 362e 6c65 5f75                 i8x16.le_u  ; export name
0000e17: 00                                        ; export kind
0000e18: e101                                      ; export func index
0000e1a: 0a                                        ; string length
0000e1b: 6938 7831 362e 6765 5f73                 i8x16.ge_s  ; export name
0000e25: 00                                        ; export kind
0000e26: e201                                      ; export func index
0000e28: 0a                                        ; string length
0000e29: 6938 7831 362e 6765 5f75                 i8x16.ge_u  ; export name
0000e33: 00                                        ; export kind
0000e34: e301                                      ; export func index
0000e36: 08                                        ; string length
0000e37: 6931 3678 382e 6571                      i16x8.eq  ; export name
0000e3f: 00                                        ; export kind
0000e40: e401                                      ; export func index
0000e42: 08                                        ; string length
0000e43: 6931 3678 382e 6e65                      i16x8.ne  ; export name
0000e4b: 00                                        ; export kind
0000e4c: e501                                      ; export func index
0000e4e: 0a                                        ; string length
0000e4f: 6931 3678 382e 6c74 5f73                 i16x8.lt_s  ; export name
0000e59: 00                                        ; export kind
0000e5a: e601                                      ; export func index
0000e5c: 0a                                        ; string length
0000e5d: 6931 3678 382e 6c74 5f75                 i16x8.lt_u  ; export name
0000e67: 00                                        ; export kind
0000e68: e701                                      ; export func index
0000e6a: 0a                                        ; string length
0000e6b: 6931 3678 382e 6774 5f73                 i16x8.gt_s  ; export name
0000e75: 00                                        ; export kind
0000e76: e801                                      ; export func index
0000e78: 0a                                        ; string length
0000e79: 6931 3678 382e 6774 5f75                 i16x8.gt_u  ; export name
0000e83: 00                                        ; export kind
0000e84: e901                                      ; export func index
0000e86: 0a                                        ; string length
0000e87: 6931 3678 382e 6c65 5f73                 i16x8.le_s  ; export name
0000e91: 00                                        ; export kind
0000e92: ea01                                      ; export func index
0000e94: 0a                                        ; string length
0000e95: 6931 3678 382e 6c65 5f75                 i16x8.le_u  ; export name
0000e9f: 00                                        ; export kind
0000ea0: eb01                                      ; export func index
0000ea2: 0a                                        ; string length
0000ea3: 6931 3678 382e 6765 5f73                 i16x8.ge_s  ; export name
0000ead: 00                                        ; export kind
0000eae: ec01                                      ; export func index
0000eb0: 0a                                        ; string length
0000eb1: 6931 3678 382e 6765 5f75                 i16x8.ge_u  ; export name
0000ebb: 00                                        ; export kind
0000ebc: ed01                                      ; export func index
0000ebe: 08                                        ; string length
0000ebf: 6933 3278 342e 6571                      i32x4.eq  ; export name
0000ec7: 00                                        ; export kind
0000ec8: ee01                                      ; export func index
0000eca: 08                                        ; string length
0000ecb: 6933 3278 342e 6e65                      i32x4.ne  ; export name
0000ed3: 00                                        ; export kind
0000ed4: ef01                                      ; export func index
0000ed6: 0a                                        ; string length
0000ed7: 6933 3278 342e 6c74 5f73                 i32x4.lt_s  ; export name
0000ee1: 00                                        ; export kind
0000ee2: f001                                      ; export func index
0000ee4: 0a                                        ; string length
0000ee5: 6933 3278 342e 6c74 5f75                 i32x4.lt_u  ; export name
0000eef: 00                                        ; export kind
0000ef0: f101                                      ; export func index
0000ef2: 0a                                        ; string length
0000ef3: 6933 3278 342e 6774 5f73                 i32x4.gt_s  ; export name
0000efd: 00                                        ; export kind
0000efe: f201                                      ; export func index
0000f00: 0a                                        ; string length
0000f01: 6933 3278 342e 6774 5f75                 i32x4.gt_u  ; export name
0000f0b: 00                                        ; export kind
0000f0c: f301                                      ; export func index
0000f0e: 0a                                        ; string length
0000f0f: 6933 3278 342e 6c65 5f73                 i32x4.le_s  ; export name
0000f19: 00                                        ; export kind
0000f1a: f401                                      ; export func index
0000f1c: 0a                                        ; string length
0000f1d: 6933 3278 342e 6c65 5f75                 i32x4.le_u  ; export name
0000f27: 00                                        ; export kind
0000f28: f501                                      ; export func index
0000f2a: 0a                                        ; string length
0000f2b: 6933 3278 342e 6765 5f73                 i32x4.ge_s  ; export name
0000f35: 00                                        ; export kind
0000f36: f601                                      ; export func index
0000f38: 0a                                        ; string length
0000f39: 6933 3278 342e 6765 5f75                 i32x4.ge_u  ; export name
0000f43: 00                                        ; export kind
0000f44: f701                                      ; export func index
0000f46: 08                                        ; string length
0000f47: 6633 3278 342e 6571                      f32x4.eq  ; export name
0000f4f: 00                                        ; export kind
0000f50: f801                                      ; export func index
0000f52: 08                                        ; string length
0000f53: 6633 3278 342e 6e65                      f32x4.ne  ; export name
0000f5b: 00                                        ; export kind
0000f5c: f901                                      ; export func index
0000f5e: 08                                        ; string length
0000f5f: 6633 3278 342e 6c74                      f32x4.lt  ; export name
0000f67: 00                                        ; export kind
0000f68: fa01                                      ; export func index
0000f6a: 08                                        ; string length
0000f6b: 6633 3278 342e 6774                      f32x4.gt  ; export name
0000f73: 00                                        ; export kind
0000f74: fb01                                      ; export func index
0000f76: 08                                        ; string length
0000f77: 6633 3278 342e 6c65                      f32x4.le  ; export name
0000f7f: 00                                        ; export kind
0000f80: fc01                                      ; export func index
0000f82: 08                                        ; string length
0000f83: 6633 3278 342e 6765                      f32x4.ge  ; export name
0000f8b: 00                                        ; export kind
0000f8c: fd01                                      ; export func index
0000f8e: 08                                        ; string length
0000f8f: 6636 3478 322e 6571                      f64x2.eq  ; export name
0000f97: 00                                        ; export kind
0000f98: fe01                                      ; export func index
0000f9a: 08                                        ; string length
0000f9b: 6636 3478 322e 6e65                      f64x2.ne  ; export name
0000fa3: 00                                        ; export kind
0000fa4: ff01                                      ; export func index
0000fa6: 08                                        ; string length
0000fa7: 6636 3478 322e 6c74                      f64x2.lt  ; export name
0000faf: 00                                        ; export kind
0000fb0: 8002                                      ; export func index
0000fb2: 08                                        ; string length
0000fb3: 6636 3478 322e 6774                      f64x2.gt  ; export name
0000fbb: 00                                        ; export kind
0000fbc: 8102                                      ; export func index
0000fbe: 08                                        ; string length
0000fbf: 6636 3478 322e 6c65                      f64x2.le  ; export name
0000fc7: 00                                        ; export kind
0000fc8: 8202                                      ; export func index
0000fca: 08                                        ; string length
0000fcb: 6636 3478 322e 6765                      f64x2.ge  ; export name
0000fd3: 00                                        ; export kind
0000fd4: 8302                                      ; export func index
0000fd6: 08                                        ; string length
0000fd7: 7631 3238 2e6e 6f74                      v128.not  ; export name
0000fdf: 00                                        ; export kind
0000fe0: 8402                                      ; export func index
0000fe2: 08                                        ; string length
0000fe3: 7631 3238 2e61 6e64                      v128.and  ; export name
0000feb: 00                                        ; export kind
0000fec: 8502                                      ; export func index
0000fee: 07                                        ; string length
0000fef: 7631 3238 2e6f 72                        v128.or  ; export name
0000ff6: 00                                        ; export kind
0000ff7: 8602                                      ; export func index
0000ff9: 08                                        ; string length
0000ffa: 7631 3238 2e78 6f72                      v128.xor  ; export name
0001002: 00                                        ; export kind
0001003: 8702                                      ; export func index
0001005: 0e                                        ; string length
0001006: 7631 3238 2e62 6974 7365 6c65 6374       v128.bitselect  ; export name
0001014: 00                                        ; export kind
0001015: 8802                                      ; export func index
0001017: 09                                        ; string length
0001018: 6938 7831 362e 6e65 67                   i8x16.neg  ; export name
0001021: 00                                        ; export kind
0001022: 8902                                      ; export func index
0001024: 0e                                        ; string length
0001025: 6938 7831 362e 616e 795f 7472 7565       i8x16.any_true  ; export name
0001033: 00                                        ; export kind
0001034: 8a02                                      ; export func index
0001036: 0e                                        ; string length
0001037: 6938 7831 362e 616c 6c5f 7472 7565       i8x16.all_true  ; export name
0001045: 00                                        ; export kind
0001046: 8b02                                      ; export func index
0001048: 09                                        ; string length
0001049: 6938 7831 362e 7368 6c                   i8x16.shl  ; export name
0001052: 00                                        ; export kind
0001053: 8c02                                      ; export func index
0001055: 0b                                        ; string length
0001056: 6938 7831 362e 7368 725f 73              i8x16.shr_s  ; export name
0001061: 00                                        ; export kind
0001062: 8d02                                      ; export func index
0001064: 0b                                        ; string length
0001065: 6938 7831 362e 7368 725f 75              i8x16.shr_u  ; export name
0001070: 00                                        ; export kind
0001071: 8e02                                      ; export func index
0001073: 09                                        ; string length
0001074: 6938 7831 362e 6164 64                   i8x16.add  ; export name
000107d: 00                                        ; export kind
000107e: 8f02                                      ; export func index
0001080: 14                                        ; string length
0001081: 6938 7831 362e 6164 645f 7361 7475 7261  i8x16.add_satura
0001091: 7465 5f73                                te_s  ; export name
0001095: 00                                        ; export kind
0001096: 9002                                      ; export func index
0001098: 14                                        ; string length
0001099: 6938 7831 362e 6164 645f 7361 7475 7261  i8x16.add_satura
00010a9: 7465 5f75                                te_u  ; export name
00010ad: 00                                        ; export kind
00010ae: 9102                                      ; export func index
00010b0: 09                                        ; string length
00010b1: 6938 7831 362e 7375 62                   i8x16.sub  ; export name
00010ba: 00                                        ; export kind
00010bb: 9202                                      ; export func index
00010bd: 14                                        ; string length
00010be: 6938 7831 362e 7375 625f 7361 7475 7261  i8x16.sub_satura
00010ce: 7465 5f73                                te_s  ; export name
00010d2: 00                                        ; export kind
00010d3: 9302                                      ; export func index
00010d5: 14                                        ; string length
00010d6: 6938 7831 362e 7375 625f 7361 7475 7261  i8x16.sub_satura
00010e6: 7465 5f75                                te_u  ; export name
00010ea: 00                                        ; export kind
00010eb: 9402                                      ; export func index
00010ed: 09                                        ; string length
00010ee: 6938 7831 362e 6d75 6c                   i8x16.mul  ; export name
00010f7: 00                                        ; export kind
00010f8: 9502                                      ; export func index
00010fa: 09                                        ; string length
00010fb: 6931 3678 382e 6e65 67                   i16x8.neg  ; export name
0001104: 00                                        ; export kind
0001105: 9602                                      ; export func index
0001107: 0e                                        ; string length
0001108: 6931 3678 382e 616e 795f 7472 7565       i16x8.any_true  ; export name
0001116: 00                                        ; export kind
0001117: 9702                                      ; export func index
0001119: 0e                                        ; string length
000111a: 6931 3678 382e 616c 6c5f 7472 7565       i16x8.all_true  ; export name
0001128: 00                                        ; export kind
0001129: 9802                                      ; export func index
000112b: 09                                        ; string length
000112c: 6931 3678 382e 7368 6c                   i16x8.shl  ; export name
0001135: 00                                        ; export kind
0001136: 9902                                      ; export func index
0001138: 0b                                        ; string length
0001139: 6931 3678 382e 7368 725f 73              i16x8.shr_s  ; export name
0001144: 00                                        ; export kind
0001145: 9a02                                      ; export func index
0001147: 0b                                        ; string length
0001148: 6931 3678 382e 7368 725f 75              i16x8.shr_u  ; export name
0001153: 00                                        ; export kind
0001154: 9b02                                      ; export func index
0001156: 09                                        ; string length
0001157: 6931 3678 382e 6164 64                   i16x8.add  ; export name
0001160: 00                                        ; export kind
0001161: 9c02                                      ; export func index
0001163: 14                                        ; string length
0001164: 6931 3678 382e 6164 645f 7361 7475 7261  i16x8.add_satura
0001174: 7465 5f73                                te_s  ; export name
0001178: 00                                        ; export kind
0001179: 9d02                                      ; export func index
000117b: 14                                        ; string length
000117c: 6931 3678 382e 6164 645f 7361 7475 7261  i16x8.add_satura
000118c: 7465 5f75                                te_u  ; export name
0001190: 00                                        ; export kind
0001191: 9e02                                      ; export func index
0001193: 09                                        ; string length
0001194: 6931 3678 382e 7375 62                   i16x8.sub  ; export name
000119d: 00                                        ; export kind
000119e: 9f02                                      ; export func index
00011a0: 14                                        ; string length
00011a1: 6931 3678 382e 7375 625f 7361 7475 7261  i16x8.sub_satura
00011b1: 7465 5f73                                te_s  ; export name
00011b5: 00                                        ; export kind
00011b6: a002                                      ; export func index
00011b8: 14                                        ; string length
00011b9: 6931 3678 382e 7375 625f 7361 7475 7261  i16x8.sub_satura
00011c9: 7465 5f75                                te_u  ; export name
00011cd: 00                                        ; export kind
00011ce: a102                                      ; export func index
00011d0: 09                                        ; string length
00011d1: 6931 3678 382e 6d75 6c                   i16x8.mul  ; export name
00011da: 00                                        ; export kind
00011db: a202                                      ; export func index
00011dd: 09                                        ; string length
00011de: 6933 3278 342e 6e65 67                   i32x4.neg  ; export name
00011e7: 00                                        ; export kind
00011e8: a302                                      ; export func index
00011ea: 0e                                        ; string length
00011eb: 6933 3278 342e 616e 795f 7472 7565       i32x4.any_true  ; export name
00011f9: 00                                        ; export kind
00011fa: a402                                      ; export func index
00011fc: 0e                                        ; string length
00011fd: 6933 3278 342e 616c 6c5f 7472 7565       i32x4.all_true  ; export name
000120b: 00                                        ; export kind
000120c: a502                                      ; export func index
000120e: 09                                        ; string length
000120f: 6933 3278 342e 7368 6c                   i32x4.shl  ; export name
0001218: 00                                        ; export kind
0001219: a602                                      ; export func index
000121b: 0b                                        ; string length
000121c: 6933 3278 342e 7368 725f 73              i32x4.shr_s  ; export name
0001227: 00                                        ; export kind
0001228: a702                                      ; export func index
000122a: 0b                                        ; string length
000122b: 6933 3278 342e 7368 725f 75              i32x4.shr_u  ; export name
0001236: 00                                        ; export kind
0001237: a802                                      ; export func index
0001239: 09                                        ; string length
000123a: 6933 3278 342e 6164 64                   i32x4.add  ; export name
0001243: 00                                        ; export kind
0001244: a902                                      ; export func index
0001246: 09                                        ; string length
0001247: 6933 3278 342e 7375 62                   i32x4.sub  ; export name
0001250: 00                                        ; export kind
0001251: aa02                                      ; export func index
0001253: 09                                        ; string length
0001254: 6933 3278 342e 6d75 6c                   i32x4.mul  ; export name
000125d: 00                                        ; export kind
000125e: ab02                                      ; export func index
0001260: 09                                        ; string length
0001261: 6936 3478 322e 6e65 67                   i64x2.neg  ; export name
000126a: 00                                        ; export kind
000126b: ac02                                      ; export func index
000126d: 0e                                        ; string length
000126e: 6936 3478 322e 616e 795f 7472 7565       i64x2.any_true  ; export name
000127c: 00                                        ; export kind
000127d: ad02                                      ; export func index
000127f: 0e                                        ; string length
0001280: 6936 3478 322e 616c 6c5f 7472 7565       i64x2.all_true  ; export name
000128e: 00                                        ; export kind
000128f: ae02                                      ; export func index
0001291: 09                                        ; string length
0001292: 6936 3478 322e 7368 6c                   i64x2.shl  ; export name
000129b: 00                                        ; export kind
000129c: af02                                      ; export func index
000129e: 0b                                        ; string length
000129f: 6936 3478 322e 7368 725f 73              i64x2.shr_s  ; export name
00012aa: 00                                        ; export kind
00012ab: b002                                      ; export func index
00012ad: 0b                                        ; string length
00012ae: 6936 3478 322e 7368 725f 75              i64x2.shr_u  ; export name
00012b9: 00                                        ; export kind
00012ba: b102                                      ; export func index
00012bc: 09                                        ; string length
00012bd: 6936 3478 322e 6164 64                   i64x2.add  ; export name
00012c6: 00                                        ; export kind
00012c7: b202                                      ; export func index
00012c9: 09                                        ; string length
00012ca: 6936 3478 322e 7375 62                   i64x2.sub  ; export name
00012d3: 00                                        ; export kind
00012d4: b302                                      ; export func index
00012d6: 09                                        ; string length
00012d7: 6633 3278 342e 6162 73                   f32x4.abs  ; export name
00012e0: 00                                        ; export kind
00012e1: b402                                      ; export func index
00012e3: 09                                        ; string length
00012e4: 6633 3278 342e 6e65 67                   f32x4.neg  ; export name
00012ed: 00                                        ; export kind
00012ee: b502                                      ; export func index
00012f0: 0a                                        ; string length
00012f1: 6633 3278 342e 7371 7274                 f32x4.sqrt  ; export name
00012fb: 00                                        ; export kind
00012fc: b602                                      ; export func index
00012fe: 09                                        ; string length
00012ff: 6633 3278 342e 6164 64                   f32x4.add  ; export name
0001308: 00                                        ; export kind
0001309: b702                                      ; export func index
000130b: 09                                        ; string length
000130c: 6633 3278 342e 7375 62                   f32x4.sub  ; export name
0001315: 00                                        ; export kind
0001316: b802                                      ; export func index
0001318: 09                                        ; string length
0001319: 6633 3278 342e 6d75 6c                   f32x4.mul  ; export name
0001322: 00                                        ; export kind
0001323: b902                                      ; export func index
0001325: 09                                        ; string length
0001326: 6633 3278 342e 6469 76                   f32x4.div  ; export name
000132f: 00                                        ; export kind
0001330: ba02                                      ; export func index
0001332: 09                                        ; string length
0001333: 6633 3278 342e 6d69 6e                   f32x4.min  ; export name
000133c: 00                                        ; export kind
000133d: bb02                                      ; export func index
000133f: 09                                        ; string length
0001340: 6633 3278 342e 6d61 78                   f32x4.max  ; export name
0001349: 00                                        ; export kind
000134a: bc02                                      ; export func index
000134c: 09                                        ; string length
000134d: 6636 3478 322e 6162 73                   f64x2.abs  ; export name
0001356: 00                                        ; export kind
0001357: bd02                                      ; export func index
0001359: 09                                        ; string length
000135a: 6636 3478 322e 6e65 67                   f64x2.neg  ; export name
0001363: 00                                        ; export kind
0001364: be02                                      ; export func index
0001366: 0a                                        ; string length
0001367: 6636 3478 322e 7371 7274                 f64x2.sqrt  ; export name
0001371: 00                                        ; export kind
0001372: bf02                                      ; export func index
0001374: 09                                        ; string length
0001375: 6636 3478 322e 6164 64                   f64x2.add  ; export name
000137e: 00                                        ; export kind
000137f: c002                                      ; export func index
0001381: 09                                        ; string length
0001382: 6636 3478 322e 7375 62                   f64x2.sub  ; export name
000138b: 00                                        ; export kind
000138c: c102                                      ; export func index
000138e: 09                                        ; string length
000138f: 6636 3478 322e 6d75 6c                   f64x2.mul  ; export name
0001398: 00                                        ; export kind
0001399: c202                                      ; export func index
000139b: 09                                        ; string length
000139c: 6636 3478 322e 6469 76                   f64x2.div  ; export name
00013a5: 00                                        ; export kind
00013a6: c302                                      ; export func index
00013a8: 09                                        ; string length
00013a9: 6636 3478 322e 6d69 6e                   f64x2.min  ; export name
00013b2: 00                                        ; export kind
00013b3: c402                                      ; export func index
00013b5: 09                                        ; string length
00013b6: 6636 3478 322e 6d61 78                   f64x2.max  ; export name
00013bf: 00                                        ; export kind
00013c0: c502                                      ; export func index
00013c2: 17                                        ; string length
00013c3: 6933 3278 342e 7472 756e 635f 7361 745f  i32x4.trunc_sat_
00013d3: 6633 3278 345f 73                        f32x4_s  ; export name
00013da: 00                                        ; export kind
00013db: c602                                      ; export func index
00013dd: 17                                        ; string length
00013de: 6933 3278 342e 7472 756e 635f 7361 745f  i32x4.trunc_sat_
00013ee: 6633 3278 345f 75                        f32x4_u  ; export name
00013f5: 00                                        ; export kind
00013f6: c702                                      ; export func index
00013f8: 17                                        ; string length
00013f9: 6936 3478 322e 7472 756e 635f 7361 745f  i64x2.trunc_sat_
0001409: 6636 3478 325f 73                        f64x2_s  ; export name
0001410: 00                                        ; export kind
0001411: c802                                      ; export func index
0001413: 17                                        ; string length
0001414: 6936 3478 322e 7472 756e 635f 7361 745f  i64x2.trunc_sat_
0001424: 6636 3478 325f 75                        f64x2_u  ; export name
000142b: 00                                        ; export kind
000142c: c902                                      ; export func index
000142e: 15                                        ; string length
000142f: 6633 3278 342e 636f 6e76 6572 745f 6933  f32x4.convert_i3
000143f: 3278 345f 73                             2x4_s  ; export name
0001444: 00                                        ; export kind
0001445: ca02                                      ; export func index
0001447: 15                                        ; string length
0001448: 6633 3278 342e 636f 6e76 6572 745f 6933  f32x4.convert_i3
0001458: 3278 345f 75                             2x4_u  ; export name
000145d: 00                                        ; export kind
000145e: cb02                                      ; export func index
0001460: 15                                        ; string length
0001461: 6636 3478 322e 636f 6e76 6572 745f 6936  f64x2.convert_i6
0001471: 3478 325f 73                             4x2_s  ; export name
0001476: 00                                        ; export kind
0001477: cc02                                      ; export func index
0001479: 15                                        ; string length
000147a: 6636 3478 322e 636f 6e76 6572 745f 6936  f64x2.convert_i6
000148a: 3478 325f 75                             4x2_u  ; export name
000148f: 00                                        ; export kind
0001490: cd02                                      ; export func index
0001492: 0d                                        ; string length
0001493: 7638 7831 362e 7377 697a 7a6c 65         v8x16.swizzle  ; export name
00014a0: 00                                        ; export kind
00014a1: ce02                                      ; export func index
00014a3: 0d                                        ; string length
00014a4: 7638 7831 362e 7368 7566 666c 65         v8x16.shuffle  ; export name
00014b1: 00                                        ; export kind
00014b2: cf02                                      ; export func index
00014b4: 10                                        ; string length
00014b5: 6938 7831 362e 6c6f 6164 5f73 706c 6174  i8x16.load_splat  ; export name
00014c5: 00                                        ; export kind
00014c6: d002                                      ; export func index
00014c8: 10                                        ; string length
00014c9: 6931 3678 382e 6c6f 6164 5f73 706c 6174  i16x8.load_splat  ; export name
00014d9: 00                                        ; export kind
00014da: d102                                      ; export func index
00014dc: 10                                        ; string length
00014dd: 6933 3278 342e 6c6f 6164 5f73 706c 6174  i32x4.load_splat  ; export name
00014ed: 00                                        ; export kind
00014ee: d202                                      ; export func index
00014f0: 10                                        ; string length
00014f1: 6936 3478 322e 6c6f 6164 5f73 706c 6174  i64x2.load_splat  ; export name
0001501: 00                                        ; export kind
0001502: d302                                      ; export func index
0001504: 14                                        ; string length
0001505: 6938 7831 362e 6e61 7272 6f77 5f69 3136  i8x16.narrow_i16
0001515: 7838 5f73                                x8_s  ; export name
0001519: 00                                        ; export kind
000151a: d402                                      ; export func index
000151c: 14                                        ; string length
000151d: 6938 7831 362e 6e61 7272 6f77 5f69 3136  i8x16.narrow_i16
000152d: 7838 5f75                                x8_u  ; export name
0001531: 00                                        ; export kind
0001532: d502                                      ; export func index
0001534: 14                                        ; string length
0001535: 6931 3678 382e 6e61 7272 6f77 5f69 3332  i16x8.narrow_i32
0001545: 7834 5f73                                x4_s  ; export name
0001549: 00                                        ; export kind
000154a: d602                                      ; export func index
000154c: 14                                        ; string length
000154d: 6931 3678 382e 6e61 7272 6f77 5f69 3332  i16x8.narrow_i32
000155d: 7834 5f75                                x4_u  ; export name
0001561: 00                                        ; export kind
0001562: d702                                      ; export func index
0001564: 17                                        ; string length
0001565: 6931 3678 382e 7769 6465 6e5f 6c6f 775f  i16x8.widen_low_
0001575: 6938 7831 365f 73                        i8x16_s  ; export name
000157c: 00                                        ; export kind
000157d: d802                                      ; export func index
000157f: 18                                        ; string length
0001580: 6931 3678 382e 7769 6465 6e5f 6869 6768  i16x8.widen_high
0001590: 5f69 3878 3136 5f73                      _i8x16_s  ; export name
0001598: 00                                        ; export kind
0001599: d902                                      ; export func index
000159b: 17                                        ; string length
000159c: 6931 3678 382e 7769 6465 6e5f 6c6f 775f  i16x8.widen_low_
00015ac: 6938 7831 365f 75                        i8x16_u  ; export name
00015b3: 00                                        ; export kind
00015b4: da02                                      ; export func index
00015b6: 18                                        ; string length
00015b7: 6931 3678 382e 7769 6465 6e5f 6869 6768  i16x8.widen_high
00015c7: 5f69 3878 3136 5f75                      _i8x16_u  ; export name
00015cf: 00                                        ; export kind
00015d0: db02                                      ; export func index
00015d2: 17                                        ; string length
00015d3: 6933 3278 342e 7769 6465 6e5f 6c6f 775f  i32x4.widen_low_
00015e3: 6931 3678 385f 73                        i16x8_s  ; export name
00015ea: 00                                        ; export kind
00015eb: dc02                                      ; export func index
00015ed: 18                                        ; string length
00015ee: 6933 3278 342e 7769 6465 6e5f 6869 6768  i32x4.widen_high
00015fe: 5f69 3136 7838 5f73                      _i16x8_s  ; export name
0001606: 00                                        ; export kind
0001607: dd02                                      ; export func index
0001609: 17                                        ; string length
000160a: 6933 3278 342e 7769 6465 6e5f 6c6f 775f  i32x4.widen_low_
000161a: 6931 3678 385f 75                        i16x8_u  ; export name
0001621: 00                                        ; export kind
0001622: de02                                      ; export func index
0001624: 18                                        ; string length
0001625: 6933 3278 342e 7769 6465 6e5f 6869 6768  i32x4.widen_high
0001635: 5f69 3136 7838 5f75                      _i16x8_u  ; export name
000163d: 00                                        ; export kind
000163e: df02                                      ; export func index
0001640: 0f                                        ; string length
0001641: 6931 3678 382e 6c6f 6164 3878 385f 73    i16x8.load8x8_s  ; export name
0001650: 00                                        ; export kind
0001651: e002                                      ; export func index
0001653: 0f                                        ; string length
0001654: 6931 3678 382e 6c6f 6164 3878 385f 75    i16x8.load8x8_u  ; export name
0001663: 00                                        ; export kind
0001664: e102                                      ; export func index
0001666: 10                                        ; string length
0001667: 6933 3278 342e 6c6f 6164 3136 7834 5f73  i32x4.load16x4_s  ; export name
0001677: 00                                        ; export kind
0001678: e202                                      ; export func index
000167a: 10                                        ; string length
000167b: 6933 3278 342e 6c6f 6164 3136 7834 5f75  i32x4.load16x4_u  ; export name
000168b: 00                                        ; export kind
000168c: e302                                      ; export func index
000168e: 10                                        ; string length
000168f: 6936 3478 322e 6c6f 6164 3332 7832 5f73  i64x2.load32x2_s  ; export name
000169f: 00                                        ; export kind
00016a0: e402                                      ; export func index
00016a2: 10                                        ; string length
00016a3: 6936 3478 322e 6c6f 6164 3332 7832 5f75  i64x2.load32x2_u  ; export name
00016b3: 00                                        ; export kind
00016b4: e502                                      ; export func index
00016b6: 0b                                        ; string length
00016b7: 7631 3238 2e61 6e64 6e6f 74              v128.andnot  ; export name
00016c2: 00                                        ; export kind
00016c3: e602                                      ; export func index
00016c5: 0c                                        ; string length
00016c6: 6938 7831 362e 6176 6772 5f75            i8x16.avgr_u  ; export name
00016d2: 00                                        ; export kind
00016d3: e702                                      ; export func index
00016d5: 0c                                        ; string length
00016d6: 6931 3678 382e 6176 6772 5f75            i16x8.avgr_u  ; export name
00016e2: 00                                        ; export kind
00016e3: e802                                      ; export func index
00016e5: 0d                                        ; string length
00016e6: 6174 6f6d 6963 2e6e 6f74 6966 79         atomic.notify  ; export name
00016f3: 00                                        ; export kind
00016f4: e902                                      ; export func index
00016f6: 0f                                        ; string length
00016f7: 6933 322e 6174 6f6d 6963 2e77 6169 74    i32.atomic.wait  ; export name
0001706: 00                                        ; export kind
0001707: ea02                                      ; export func index
0001709: 0f                                        ; string length
000170a: 6936 342e 6174 6f6d 6963 2e77 6169 74    i64.atomic.wait  ; export name
0001719: 00                                        ; export kind
000171a: eb02                                      ; export func index
000171c: 0f                                        ; string length
000171d: 6933 322e 6174 6f6d 6963 2e6c 6f61 64    i32.atomic.load  ; export name
000172c: 00                                        ; export kind
000172d: ec02                                      ; export func index
000172f: 0f                                        ; string length
0001730: 6936 342e 6174 6f6d 6963 2e6c 6f61 64    i64.atomic.load  ; export name
000173f: 00                                        ; export kind
0001740: ed02                                      ; export func index
0001742: 12                                        ; string length
0001743: 6933 322e 6174 6f6d 6963 2e6c 6f61 6438  i32.atomic.load8
0001753: 5f75                                     _u  ; export name
0001755: 00                                        ; export kind
0001756: ee02                                      ; export func index
0001758: 13                                        ; string length
0001759: 6933 322e 6174 6f6d 6963 2e6c 6f61 6431  i32.atomic.load1
0001769: 365f 75                                  6_u  ; export name
000176c: 00                                        ; export kind
000176d: ef02                                      ; export func index
000176f: 12                                        ; string length
0001770: 6936 342e 6174 6f6d 6963 2e6c 6f61 6438  i64.atomic.load8
0001780: 5f75                                     _u  ; export name
0001782: 00                                        ; export kind
0001783: f002                                      ; export func index
0001785: 13                                        ; string length
0001786: 6936 342e 6174 6f6d 6963 2e6c 6f61 6431  i64.atomic.load1
0001796: 365f 75                                  6_u  ; export name
0001799: 00                                        ; export kind
000179a: f102                                      ; export func index
000179c: 13                                        ; string length
000179d: 6936 342e 6174 6f6d 6963 2e6c 6f61 6433  i64.atomic.load3
00017ad: 325f 75                                  2_u  ; export name
00017b0: 00                                        ; export kind
00017b1: f202                                      ; export func index
00017b3: 10                                        ; string length
00017b4: 6933 322e 6174 6f6d 6963 2e73 746f 7265  i32.atomic.store  ; export name
00017c4: 00                                        ; export kind
00017c5: f302                                      ; export func index
00017c7: 10                                        ; string length
00017c8: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store  ; export name
00017d8: 00                                        ; export kind
00017d9: f402                                      ; export func index
00017db: 11                                        ; string length
00017dc: 6933 322e 6174 6f6d 6963 2e73 746f 7265  i32.atomic.store
00017ec: 38                                       8  ; export name
00017ed: 00                                        ; export kind
00017ee: f502                                      ; export func index
00017f0: 12                                        ; string length
00017f1: 6933 322e 6174 6f6d 6963 2e73 746f 7265  i32.atomic.store
0001801: 3136                                     16  ; export name
0001803: 00                                        ; export kind
0001804: f602                                      ; export func index
0001806: 11                                        ; string length
0001807: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store
0001817: 38                                       8  ; export name
0001818: 00                                        ; export kind
0001819: f702                                      ; export func index
000181b: 12                                        ; string length
000181c: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store
000182c: 3136                                     16  ; export name
000182e: 00                                        ; export kind
000182f: f802                                      ; export func index
0001831: 12                                        ; string length
0001832: 6936 342e 6174 6f6d 6963 2e73 746f 7265  i64.atomic.store
0001842: 3332                                     32  ; export name
0001844: 00                                        ; export kind
0001845: f902                                      ; export func index
0001847: 12                                        ; string length
0001848: 6933 322e 6174 6f6d 6963 2e72 6d77 2e61  i32.atomic.rmw.a
0001858: 6464                                     dd  ; export name
000185a: 00                                        ; export kind
000185b: fa02                                      ; export func index
000185d: 12                                        ; string length
000185e: 6936 342e 6174 6f6d 6963 2e72 6d77 2e61  i64.atomic.rmw.a
000186e: 6464                                     dd  ; export name
0001870: 00                                        ; export kind
0001871: fb02                                      ; export func index
0001873: 15                                        ; string length
0001874: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
0001884: 6164 645f 75                             add_u  ; export name
0001889: 00                                        ; export kind
000188a: fc02                                      ; export func index
000188c: 16                                        ; string length
000188d: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
000189d: 2e61 6464 5f75                           .add_u  ; export name
00018a3: 00                                        ; export kind
00018a4: fd02                                      ; export func index
00018a6: 15                                        ; string length
00018a7: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
00018b7: 6164 645f 75                             add_u  ; export name
00018bc: 00                                        ; export kind
00018bd: fe02                                      ; export func index
00018bf: 16                                        ; string length
00018c0: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
00018d0: 2e61 6464 5f75                           .add_u  ; export name
00018d6: 00                                        ; export kind
00018d7: ff02                                      ; export func index
00018d9: 16                                        ; string length
00018da: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
00018ea: 2e61 6464 5f75                           .add_u  ; export name
00018f0: 00                                        ; export kind
00018f1: 8003                                      ; export func index
00018f3: 12                                        ; string length
00018f4: 6933 322e 6174 6f6d 6963 2e72 6d77 2e73  i32.atomic.rmw.s
0001904: 7562                                     ub  ; export name
0001906: 00                                        ; export kind
0001907: 8103                                      ; export func index
0001909: 12                                        ; string length
000190a: 6936 342e 6174 6f6d 6963 2e72 6d77 2e73  i64.atomic.rmw.s
000191a: 7562                                     ub  ; export name
000191c: 00                                        ; export kind
000191d: 8203                                      ; export func index
000191f: 15                                        ; string length
0001920: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
0001930: 7375 625f 75                             sub_u  ; export name
0001935: 00                                        ; export kind
0001936: 8303                                      ; export func index
0001938: 16                                        ; string length
0001939: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0001949: 2e73 7562 5f75                           .sub_u  ; export name
000194f: 00                                        ; export kind
0001950: 8403                                      ; export func index
0001952: 15                                        ; string length
0001953: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
0001963: 7375 625f 75                             sub_u  ; export name
0001968: 00                                        ; export kind
0001969: 8503                                      ; export func index
000196b: 16                                        ; string length
000196c: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
000197c: 2e73 7562 5f75                           .sub_u  ; export name
0001982: 00                                        ; export kind
0001983: 8603                                      ; export func index
0001985: 16                                        ; string length
0001986: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0001996: 2e73 7562 5f75                           .sub_u  ; export name
000199c: 00                                        ; export kind
000199d: 8703                                      ; export func index
000199f: 12                                        ; string length
00019a0: 6933 322e 6174 6f6d 6963 2e72 6d77 2e61  i32.atomic.rmw.a
00019b0: 6e64                                     nd  ; export name
00019b2: 00                                        ; export kind
00019b3: 8803                                      ; export func index
00019b5: 12                                        ; string length
00019b6: 6936 342e 6174 6f6d 6963 2e72 6d77 2e61  i64.atomic.rmw.a
00019c6: 6e64                                     nd  ; export name
00019c8: 00                                        ; export kind
00019c9: 8903                                      ; export func index
00019cb: 15                                        ; string length
00019cc: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
00019dc: 616e 645f 75                             and_u  ; export name
00019e1: 00                                        ; export kind
00019e2: 8a03                                      ; export func index
00019e4: 16                                        ; string length
00019e5: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
00019f5: 2e61 6e64 5f75                           .and_u  ; export name
00019fb: 00                                        ; export kind
00019fc: 8b03                                      ; export func index
00019fe: 15                                        ; string length
00019ff: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
0001a0f: 616e 645f 75                             and_u  ; export name
0001a14: 00                                        ; export kind
0001a15: 8c03                                      ; export func index
0001a17: 16                                        ; string length
0001a18: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0001a28: 2e61 6e64 5f75                           .and_u  ; export name
0001a2e: 00                                        ; export kind
0001a2f: 8d03                                      ; export func index
0001a31: 16                                        ; string length
0001a32: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0001a42: 2e61 6e64 5f75                           .and_u  ; export name
0001a48: 00                                        ; export kind
0001a49: 8e03                                      ; export func index
0001a4b: 11                                        ; string length
0001a4c: 6933 322e 6174 6f6d 6963 2e72 6d77 2e6f  i32.atomic.rmw.o
0001a5c: 72                                       r  ; export name
0001a5d: 00                                        ; export kind
0001a5e: 8f03                                      ; export func index
0001a60: 11                                        ; string length
0001a61: 6936 342e 6174 6f6d 6963 2e72 6d77 2e6f  i64.atomic.rmw.o
0001a71: 72                                       r  ; export name
0001a72: 00                                        ; export kind
0001a73: 9003                                      ; export func index
0001a75: 14                                        ; string length
0001a76: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
0001a86: 6f72 5f75                                or_u  ; export name
0001a8a: 00                                        ; export kind
0001a8b: 9103                                      ; export func index
0001a8d: 15                                        ; string length
0001a8e: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0001a9e: 2e6f 725f 75                             .or_u  ; export name
0001aa3: 00                                        ; export kind
0001aa4: 9203                                      ; export func index
0001aa6: 14                                        ; string length
0001aa7: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
0001ab7: 6f72 5f75                                or_u  ; export name
0001abb: 00                                        ; export kind
0001abc: 9303                                      ; export func index
0001abe: 15                                        ; string length
0001abf: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0001acf: 2e6f 725f 75                             .or_u  ; export name
0001ad4: 00                                        ; export kind
0001ad5: 9403                                      ; export func index
0001ad7: 15                                        ; string length
0001ad8: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0001ae8: 2e6f 725f 75                             .or_u  ; export name
0001aed: 00                                        ; export kind
0001aee: 9503                                      ; export func index
0001af0: 12                                        ; string length
0001af1: 6933 322e 6174 6f6d 6963 2e72 6d77 2e78  i32.atomic.rmw.x
0001b01: 6f72                                     or  ; export name
0001b03: 00                                        ; export kind
0001b04: 9603                                      ; export func index
0001b06: 12                                        ; string length
0001b07: 6936 342e 6174 6f6d 6963 2e72 6d77 2e78  i64.atomic.rmw.x
0001b17: 6f72                                     or  ; export name
0001b19: 00                                        ; export kind
0001b1a: 9703                                      ; export func index
0001b1c: 15                                        ; string length
0001b1d: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
0001b2d: 786f 725f 75                             xor_u  ; export name
0001b32: 00                                        ; export kind
0001b33: 9803                                      ; export func index
0001b35: 16                                        ; string length
0001b36: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0001b46: 2e78 6f72 5f75                           .xor_u  ; export name
0001b4c: 00                                        ; export kind
0001b4d: 9903                                      ; export func index
0001b4f: 15                                        ; string length
0001b50: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
0001b60: 786f 725f 75                             xor_u  ; export name
0001b65: 00                                        ; export kind
0001b66: 9a03                                      ; export func index
0001b68: 16                                        ; string length
0001b69: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0001b79: 2e78 6f72 5f75                           .xor_u  ; export name
0001b7f: 00                                        ; export kind
0001b80: 9b03                                      ; export func index
0001b82: 16                                        ; string length
0001b83: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0001b93: 2e78 6f72 5f75                           .xor_u  ; export name
0001b99: 00                                        ; export kind
0001b9a: 9c03                                      ; export func index
0001b9c: 13                                        ; string length
0001b9d: 6933 322e 6174 6f6d 6963 2e72 6d77 2e78  i32.atomic.rmw.x
0001bad: 6368 67                                  chg  ; export name
0001bb0: 00                                        ; export kind
0001bb1: 9d03                                      ; export func index
0001bb3: 13                                        ; string length
0001bb4: 6936 342e 6174 6f6d 6963 2e72 6d77 2e78  i64.atomic.rmw.x
0001bc4: 6368 67                                  chg  ; export name
0001bc7: 00                                        ; export kind
0001bc8: 9e03                                      ; export func index
0001bca: 16                                        ; string length
0001bcb: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
0001bdb: 7863 6867 5f75                           xchg_u  ; export name
0001be1: 00                                        ; export kind
0001be2: 9f03                                      ; export func index
0001be4: 17                                        ; string length
0001be5: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0001bf5: 2e78 6368 675f 75                        .xchg_u  ; export name
0001bfc: 00                                        ; export kind
0001bfd: a003                                      ; export func index
0001bff: 16                                        ; string length
0001c00: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
0001c10: 7863 6867 5f75                           xchg_u  ; export name
0001c16: 00                                        ; export kind
0001c17: a103                                      ; export func index
0001c19: 17                                        ; string length
0001c1a: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0001c2a: 2e78 6368 675f 75                        .xchg_u  ; export name
0001c31: 00                                        ; export kind
0001c32: a203                                      ; export func index
0001c34: 17                                        ; string length
0001c35: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0001c45: 2e78 6368 675f 75                        .xchg_u  ; export name
0001c4c: 00                                        ; export kind
0001c4d: a303                                      ; export func index
0001c4f: 16                                        ; string length
0001c50: 6933 322e 6174 6f6d 6963 2e72 6d77 2e63  i32.atomic.rmw.c
0001c60: 6d70 7863 6867                           mpxchg  ; export name
0001c66: 00                                        ; export kind
0001c67: a403                                      ; export func index
0001c69: 16                                        ; string length
0001c6a: 6936 342e 6174 6f6d 6963 2e72 6d77 2e63  i64.atomic.rmw.c
0001c7a: 6d70 7863 6867                           mpxchg  ; export name
0001c80: 00                                        ; export kind
0001c81: a503                                      ; export func index
0001c83: 19                                        ; string length
0001c84: 6933 322e 6174 6f6d 6963 2e72 6d77 382e  i32.atomic.rmw8.
0001c94: 636d 7078 6368 675f 75                   cmpxchg_u  ; export name
0001c9d: 00                                        ; export kind
0001c9e: a603                                      ; export func index
0001ca0: 1a                                        ; string length
0001ca1: 6933 322e 6174 6f6d 6963 2e72 6d77 3136  i32.atomic.rmw16
0001cb1: 2e63 6d70 7863 6867 5f75                 .cmpxchg_u  ; export name
0001cbb: 00                                        ; export kind
0001cbc: a703                                      ; export func index
0001cbe: 19                                        ; string length
0001cbf: 6936 342e 6174 6f6d 6963 2e72 6d77 382e  i64.atomic.rmw8.
0001ccf: 636d 7078 6368 675f 75                   cmpxchg_u  ; export name
0001cd8: 00                                        ; export kind
0001cd9: a803                                      ; export func index
0001cdb: 1a                                        ; string length
0001cdc: 6936 342e 6174 6f6d 6963 2e72 6d77 3136  i64.atomic.rmw16
0001cec: 2e63 6d70 7863 6867 5f75                 .cmpxchg_u  ; export name
0001cf6: 00                                        ; export kind
0001cf7: a903                                      ; export func index
0001cf9: 1a                                        ; string length
0001cfa: 6936 342e 6174 6f6d 6963 2e72 6d77 3332  i64.atomic.rmw32
0001d0a: 2e63 6d70 7863 6867 5f75                 .cmpxchg_u  ; export name
0001d14: 00                                        ; export kind
0001d15: aa03                                      ; export func index
; move data: [1e8, 1d17) -> [1e9, 1d18)
00001e7: af36                                      ; FIXUP section size
; section "Elem" (9)
0001d18: 09                                        ; section code
0001d19: 00                                        ; section size (guess)
0001d1a: 02                                        ; num elem segments
; elem segment header 0
0001d1b: 00                                        ; segment flags
0001d1c: 41                                        ; i32.const
0001d1d: 00                                        ; i32 literal
0001d1e: 0b                                        ; end
0001d1f: 02                                        ; num elems
0001d20: 01                                        ; elem function index
0001d21: 01                                        ; elem function index
; elem segment header 1
0001d22: 01                                        ; segment flags
0001d23: 00                                        ; elem list type
0001d24: 00                                        ; num elems
0001d19: 0b                                        ; FIXUP section size
; section "DataCount" (12)
0001d25: 0c                                        ; section code
0001d26: 00                                        ; section size (guess)
0001d27: 01                                        ; data count
0001d26: 01                                        ; FIXUP section size
; section "Code" (10)
0001d28: 0a                                        ; section code
0001d29: 00                                        ; section size (guess)
0001d2a: aa03                                      ; num functions
; function body 0
0001d2c: 00                                        ; func body size (guess)
0001d2d: 00                                        ; local decl count
0001d2e: 0b                                        ; end
0001d2c: 02                                        ; FIXUP func body size
; function body 1
0001d2f: 00                                        ; func body size (guess)
0001d30: 00                                        ; local decl count
0001d31: 00                                        ; unreachable
0001d32: 0b                                        ; end
0001d2f: 03                                        ; FIXUP func body size
; function body 2
0001d33: 00                                        ; func body size (guess)
0001d34: 00                                        ; local decl count
0001d35: 0c                                        ; br
0001d36: 00                                        ; break depth
0001d37: 0b                                        ; end
0001d33: 04                                        ; FIXUP func body size
; function body 3
0001d38: 00                                        ; func body size (guess)
0001d39: 00                                        ; local decl count
0001d3a: 41                                        ; i32.const
0001d3b: 01                                        ; i32 literal
0001d3c: 0e                                        ; br_table
0001d3d: 00                                        ; num targets
0001d3e: 00                                        ; break depth for default
0001d3f: 0b                                        ; end
0001d38: 07                                        ; FIXUP func body size
; function body 4
0001d40: 00                                        ; func body size (guess)
0001d41: 00                                        ; local decl count
0001d42: 0f                                        ; return
0001d43: 0b                                        ; end
0001d40: 03                                        ; FIXUP func body size
; function body 5
0001d44: 00                                        ; func body size (guess)
0001d45: 00                                        ; local decl count
0001d46: 10                                        ; call
0001d47: 01                                        ; function index
0001d48: 0b                                        ; end
0001d44: 04                                        ; FIXUP func body size
; function body 6
0001d49: 00                                        ; func body size (guess)
0001d4a: 00                                        ; local decl count
0001d4b: 41                                        ; i32.const
0001d4c: 01                                        ; i32 literal
0001d4d: 11                                        ; call_indirect
0001d4e: 00                                        ; signature index
0001d4f: 00                                        ; table index
0001d50: 0b                                        ; end
0001d49: 07                                        ; FIXUP func body size
; function body 7
0001d51: 00                                        ; func body size (guess)
0001d52: 00                                        ; local decl count
0001d53: 12                                        ; return_call
0001d54: 01                                        ; function index
0001d55: 0b                                        ; end
0001d51: 04                                        ; FIXUP func body size
; function body 8
0001d56: 00                                        ; func body size (guess)
0001d57: 00                                        ; local decl count
0001d58: 41                                        ; i32.const
0001d59: 01                                        ; i32 literal
0001d5a: 13                                        ; return_call_indirect
0001d5b: 00                                        ; signature index
0001d5c: 00                                        ; table index
0001d5d: 0b                                        ; end
0001d56: 07                                        ; FIXUP func body size
; function body 9
0001d5e: 00                                        ; func body size (guess)
0001d5f: 00                                        ; local decl count
0001d60: 41                                        ; i32.const
0001d61: 01                                        ; i32 literal
0001d62: 1a                                        ; drop
0001d63: 0b                                        ; end
0001d5e: 05                                        ; FIXUP func body size
; function body 10
0001d64: 00                                        ; func body size (guess)
0001d65: 00                                        ; local decl count
0001d66: 41                                        ; i32.const
0001d67: 01                                        ; i32 literal
0001d68: 41                                        ; i32.const
0001d69: 02                                        ; i32 literal
0001d6a: 41                                        ; i32.const
0001d6b: 03                                        ; i32 literal
0001d6c: 1b                                        ; select
0001d6d: 1a                                        ; drop
0001d6e: 0b                                        ; end
0001d64: 0a                                        ; FIXUP func body size
; function body 11
0001d6f: 00                                        ; func body size (guess)
0001d70: 00                                        ; local decl count
0001d71: 41                                        ; i32.const
0001d72: 01                                        ; i32 literal
0001d73: 41                                        ; i32.const
0001d74: 02                                        ; i32 literal
0001d75: 41                                        ; i32.const
0001d76: 03                                        ; i32 literal
0001d77: 1c                                        ; select
0001d78: 01                                        ; num result types
0001d79: 7f                                        ; result type
0001d7a: 1a                                        ; drop
0001d7b: 0b                                        ; end
0001d6f: 0c                                        ; FIXUP func body size
; function body 12
0001d7c: 00                                        ; func body size (guess)
0001d7d: 01                                        ; local decl count
0001d7e: 01                                        ; local type count
0001d7f: 7f                                        ; i32
0001d80: 20                                        ; local.get
0001d81: 00                                        ; local index
0001d82: 1a                                        ; drop
0001d83: 0b                                        ; end
0001d7c: 07                                        ; FIXUP func body size
; function body 13
0001d84: 00                                        ; func body size (guess)
0001d85: 01                                        ; local decl count
0001d86: 01                                        ; local type count
0001d87: 7f                                        ; i32
0001d88: 41                                        ; i32.const
0001d89: 01                                        ; i32 literal
0001d8a: 21                                        ; local.set
0001d8b: 00                                        ; local index
0001d8c: 0b                                        ; end
0001d84: 08                                        ; FIXUP func body size
; function body 14
0001d8d: 00                                        ; func body size (guess)
0001d8e: 01                                        ; local decl count
0001d8f: 01                                        ; local type count
0001d90: 7f                                        ; i32
0001d91: 41                                        ; i32.const
0001d92: 01                                        ; i32 literal
0001d93: 22                                        ; local.tee
0001d94: 00                                        ; local index
0001d95: 1a                                        ; drop
0001d96: 0b                                        ; end
0001d8d: 09                                        ; FIXUP func body size
; function body 15
0001d97: 00                                        ; func body size (guess)
0001d98: 00                                        ; local decl count
0001d99: 23                                        ; global.get
0001d9a: 00                                        ; global index
0001d9b: 1a                                        ; drop
0001d9c: 0b                                        ; end
0001d97: 05                                        ; FIXUP func body size
; function body 16
0001d9d: 00                                        ; func body size (guess)
0001d9e: 00                                        ; local decl count
0001d9f: 41                                        ; i32.const
0001da0: 01                                        ; i32 literal
0001da1: 24                                        ; global.set
0001da2: 00                                        ; global index
0001da3: 0b                                        ; end
0001d9d: 06                                        ; FIXUP func body size
; function body 17
0001da4: 00                                        ; func body size (guess)
0001da5: 00                                        ; local decl count
0001da6: 41                                        ; i32.const
0001da7: 01                                        ; i32 literal
0001da8: 28                                        ; i32.load
0001da9: 02                                        ; alignment
0001daa: 02                                        ; load offset
0001dab: 1a                                        ; drop
0001dac: 0b                                        ; end
0001da4: 08                                        ; FIXUP func body size
; function body 18
0001dad: 00                                        ; func body size (guess)
0001dae: 00                                        ; local decl count
0001daf: 41                                        ; i32.const
0001db0: 01                                        ; i32 literal
0001db1: 29                                        ; i64.load
0001db2: 03                                        ; alignment
0001db3: 02                                        ; load offset
0001db4: 1a                                        ; drop
0001db5: 0b                                        ; end
0001dad: 08                                        ; FIXUP func body size
; function body 19
0001db6: 00                                        ; func body size (guess)
0001db7: 00                                        ; local decl count
0001db8: 41                                        ; i32.const
0001db9: 01                                        ; i32 literal
0001dba: 2a                                        ; f32.load
0001dbb: 02                                        ; alignment
0001dbc: 02                                        ; load offset
0001dbd: 1a                                        ; drop
0001dbe: 0b                                        ; end
0001db6: 08                                        ; FIXUP func body size
; function body 20
0001dbf: 00                                        ; func body size (guess)
0001dc0: 00                                        ; local decl count
0001dc1: 41                                        ; i32.const
0001dc2: 01                                        ; i32 literal
0001dc3: 2b                                        ; f64.load
0001dc4: 03                                        ; alignment
0001dc5: 02                                        ; load offset
0001dc6: 1a                                        ; drop
0001dc7: 0b                                        ; end
0001dbf: 08                                        ; FIXUP func body size
; function body 21
0001dc8: 00                                        ; func body size (guess)
0001dc9: 00                                        ; local decl count
0001dca: 41                                        ; i32.const
0001dcb: 01                                        ; i32 literal
0001dcc: 2c                                        ; i32.load8_s
0001dcd: 00                                        ; alignment
0001dce: 02                                        ; load offset
0001dcf: 1a                                        ; drop
0001dd0: 0b                                        ; end
0001dc8: 08                                        ; FIXUP func body size
; function body 22
0001dd1: 00                                        ; func body size (guess)
0001dd2: 00                                        ; local decl count
0001dd3: 41                                        ; i32.const
0001dd4: 01                                        ; i32 literal
0001dd5: 2d                                        ; i32.load8_u
0001dd6: 00                                        ; alignment
0001dd7: 02                                        ; load offset
0001dd8: 1a                                        ; drop
0001dd9: 0b                                        ; end
0001dd1: 08                                        ; FIXUP func body size
; function body 23
0001dda: 00                                        ; func body size (guess)
0001ddb: 00                                        ; local decl count
0001ddc: 41                                        ; i32.const
0001ddd: 01                                        ; i32 literal
0001dde: 2e                                        ; i32.load16_s
0001ddf: 01                                        ; alignment
0001de0: 02                                        ; load offset
0001de1: 1a                                        ; drop
0001de2: 0b                                        ; end
0001dda: 08                                        ; FIXUP func body size
; function body 24
0001de3: 00                                        ; func body size (guess)
0001de4: 00                                        ; local decl count
0001de5: 41                                        ; i32.const
0001de6: 01                                        ; i32 literal
0001de7: 2f                                        ; i32.load16_u
0001de8: 01                                        ; alignment
0001de9: 02                                        ; load offset
0001dea: 1a                                        ; drop
0001deb: 0b                                        ; end
0001de3: 08                                        ; FIXUP func body size
; function body 25
0001dec: 00                                        ; func body size (guess)
0001ded: 00                                        ; local decl count
0001dee: 41                                        ; i32.const
0001def: 01                                        ; i32 literal
0001df0: 30                                        ; i64.load8_s
0001df1: 00                                        ; alignment
0001df2: 02                                        ; load offset
0001df3: 1a                                        ; drop
0001df4: 0b                                        ; end
0001dec: 08                                        ; FIXUP func body size
; function body 26
0001df5: 00                                        ; func body size (guess)
0001df6: 00                                        ; local decl count
0001df7: 41                                        ; i32.const
0001df8: 01                                        ; i32 literal
0001df9: 31                                        ; i64.load8_u
0001dfa: 00                                        ; alignment
0001dfb: 02                                        ; load offset
0001dfc: 1a                                        ; drop
0001dfd: 0b                                        ; end
0001df5: 08                                        ; FIXUP func body size
; function body 27
0001dfe: 00                                        ; func body size (guess)
0001dff: 00                                        ; local decl count
0001e00: 41                                        ; i32.const
0001e01: 01                                        ; i32 literal
0001e02: 32                                        ; i64.load16_s
0001e03: 01                                        ; alignment
0001e04: 02                                        ; load offset
0001e05: 1a                                        ; drop
0001e06: 0b                                        ; end
0001dfe: 08                                        ; FIXUP func body size
; function body 28
0001e07: 00                                        ; func body size (guess)
0001e08: 00                                        ; local decl count
0001e09: 41                                        ; i32.const
0001e0a: 01                                        ; i32 literal
0001e0b: 33                                        ; i64.load16_u
0001e0c: 01                                        ; alignment
0001e0d: 02                                        ; load offset
0001e0e: 1a                                        ; drop
0001e0f: 0b                                        ; end
0001e07: 08                                        ; FIXUP func body size
; function body 29
0001e10: 00                                        ; func body size (guess)
0001e11: 00                                        ; local decl count
0001e12: 41                                        ; i32.const
0001e13: 01                                        ; i32 literal
0001e14: 34                                        ; i64.load32_s
0001e15: 02                                        ; alignment
0001e16: 02                                        ; load offset
0001e17: 1a                                        ; drop
0001e18: 0b                                        ; end
0001e10: 08                                        ; FIXUP func body size
; function body 30
0001e19: 00                                        ; func body size (guess)
0001e1a: 00                                        ; local decl count
0001e1b: 41                                        ; i32.const
0001e1c: 01                                        ; i32 literal
0001e1d: 35                                        ; i64.load32_u
0001e1e: 02                                        ; alignment
0001e1f: 02                                        ; load offset
0001e20: 1a                                        ; drop
0001e21: 0b                                        ; end
0001e19: 08                                        ; FIXUP func body size
; function body 31
0001e22: 00                                        ; func body size (guess)
0001e23: 00                                        ; local decl count
0001e24: 41                                        ; i32.const
0001e25: 01                                        ; i32 literal
0001e26: 41                                        ; i32.const
0001e27: 02                                        ; i32 literal
0001e28: 36                                        ; i32.store
0001e29: 02                                        ; alignment
0001e2a: 02                                        ; store offset
0001e2b: 0b                                        ; end
0001e22: 09                                        ; FIXUP func body size
; function body 32
0001e2c: 00                                        ; func body size (guess)
0001e2d: 00                                        ; local decl count
0001e2e: 41                                        ; i32.const
0001e2f: 01                                        ; i32 literal
0001e30: 42                                        ; i64.const
0001e31: 02                                        ; i64 literal
0001e32: 37                                        ; i64.store
0001e33: 03                                        ; alignment
0001e34: 02                                        ; store offset
0001e35: 0b                                        ; end
0001e2c: 09                                        ; FIXUP func body size
; function body 33
0001e36: 00                                        ; func body size (guess)
0001e37: 00                                        ; local decl count
0001e38: 41                                        ; i32.const
0001e39: 01                                        ; i32 literal
0001e3a: 43                                        ; f32.const
0001e3b: 0000 0040                                 ; f32 literal
0001e3f: 38                                        ; f32.store
0001e40: 02                                        ; alignment
0001e41: 02                                        ; store offset
0001e42: 0b                                        ; end
0001e36: 0c                                        ; FIXUP func body size
; function body 34
0001e43: 00                                        ; func body size (guess)
0001e44: 00                                        ; local decl count
0001e45: 41                                        ; i32.const
0001e46: 01                                        ; i32 literal
0001e47: 44                                        ; f64.const
0001e48: 0000 0000 0000 0040                       ; f64 literal
0001e50: 39                                        ; f64.store
0001e51: 03                                        ; alignment
0001e52: 02                                        ; store offset
0001e53: 0b                                        ; end
0001e43: 10                                        ; FIXUP func body size
; function body 35
0001e54: 00                                        ; func body size (guess)
0001e55: 00                                        ; local decl count
0001e56: 41                                        ; i32.const
0001e57: 01                                        ; i32 literal
0001e58: 41                                        ; i32.const
0001e59: 02                                        ; i32 literal
0001e5a: 3a                                        ; i32.store8
0001e5b: 00                                        ; alignment
0001e5c: 02                                        ; store offset
0001e5d: 0b                                        ; end
0001e54: 09                                        ; FIXUP func body size
; function body 36
0001e5e: 00                                        ; func body size (guess)
0001e5f: 00                                        ; local decl count
0001e60: 41                                        ; i32.const
0001e61: 01                                        ; i32 literal
0001e62: 41                                        ; i32.const
0001e63: 02                                        ; i32 literal
0001e64: 3b                                        ; i32.store16
0001e65: 01                                        ; alignment
0001e66: 02                                        ; store offset
0001e67: 0b                                        ; end
0001e5e: 09                                        ; FIXUP func body size
; function body 37
0001e68: 00                                        ; func body size (guess)
0001e69: 00                                        ; local decl count
0001e6a: 41                                        ; i32.const
0001e6b: 01                                        ; i32 literal
0001e6c: 42                                        ; i64.const
0001e6d: 02                                        ; i64 literal
0001e6e: 3c                                        ; i64.store8
0001e6f: 00                                        ; alignment
0001e70: 02                                        ; store offset
0001e71: 0b                                        ; end
0001e68: 09                                        ; FIXUP func body size
; function body 38
0001e72: 00                                        ; func body size (guess)
0001e73: 00                                        ; local decl count
0001e74: 41                                        ; i32.const
0001e75: 01                                        ; i32 literal
0001e76: 42                                        ; i64.const
0001e77: 02                                        ; i64 literal
0001e78: 3d                                        ; i64.store16
0001e79: 01                                        ; alignment
0001e7a: 02                                        ; store offset
0001e7b: 0b                                        ; end
0001e72: 09                                        ; FIXUP func body size
; function body 39
0001e7c: 00                                        ; func body size (guess)
0001e7d: 00                                        ; local decl count
0001e7e: 41                                        ; i32.const
0001e7f: 01                                        ; i32 literal
0001e80: 42                                        ; i64.const
0001e81: 02                                        ; i64 literal
0001e82: 3e                                        ; i64.store32
0001e83: 02                                        ; alignment
0001e84: 02                                        ; store offset
0001e85: 0b                                        ; end
0001e7c: 09                                        ; FIXUP func body size
; function body 40
0001e86: 00                                        ; func body size (guess)
0001e87: 00                                        ; local decl count
0001e88: 3f                                        ; memory.size
0001e89: 00                                        ; memory.size reserved
0001e8a: 1a                                        ; drop
0001e8b: 0b                                        ; end
0001e86: 05                                        ; FIXUP func body size
; function body 41
0001e8c: 00                                        ; func body size (guess)
0001e8d: 00                                        ; local decl count
0001e8e: 41                                        ; i32.const
0001e8f: 01                                        ; i32 literal
0001e90: 40                                        ; memory.grow
0001e91: 00                                        ; memory.grow reserved
0001e92: 1a                                        ; drop
0001e93: 0b                                        ; end
0001e8c: 07                                        ; FIXUP func body size
; function body 42
0001e94: 00                                        ; func body size (guess)
0001e95: 00                                        ; local decl count
0001e96: 41                                        ; i32.const
0001e97: 01                                        ; i32 literal
0001e98: 1a                                        ; drop
0001e99: 0b                                        ; end
0001e94: 05                                        ; FIXUP func body size
; function body 43
0001e9a: 00                                        ; func body size (guess)
0001e9b: 00                                        ; local decl count
0001e9c: 42                                        ; i64.const
0001e9d: 01                                        ; i64 literal
0001e9e: 1a                                        ; drop
0001e9f: 0b                                        ; end
0001e9a: 05                                        ; FIXUP func body size
; function body 44
0001ea0: 00                                        ; func body size (guess)
0001ea1: 00                                        ; local decl count
0001ea2: 43                                        ; f32.const
0001ea3: 0000 803f                                 ; f32 literal
0001ea7: 1a                                        ; drop
0001ea8: 0b                                        ; end
0001ea0: 08                                        ; FIXUP func body size
; function body 45
0001ea9: 00                                        ; func body size (guess)
0001eaa: 00                                        ; local decl count
0001eab: 44                                        ; f64.const
0001eac: 0000 0000 0000 f03f                       ; f64 literal
0001eb4: 1a                                        ; drop
0001eb5: 0b                                        ; end
0001ea9: 0c                                        ; FIXUP func body size
; function body 46
0001eb6: 00                                        ; func body size (guess)
0001eb7: 00                                        ; local decl count
0001eb8: 41                                        ; i32.const
0001eb9: 01                                        ; i32 literal
0001eba: 45                                        ; i32.eqz
0001ebb: 1a                                        ; drop
0001ebc: 0b                                        ; end
0001eb6: 06                                        ; FIXUP func body size
; function body 47
0001ebd: 00                                        ; func body size (guess)
0001ebe: 00                                        ; local decl count
0001ebf: 41                                        ; i32.const
0001ec0: 01                                        ; i32 literal
0001ec1: 41                                        ; i32.const
0001ec2: 02                                        ; i32 literal
0001ec3: 46                                        ; i32.eq
0001ec4: 1a                                        ; drop
0001ec5: 0b                                        ; end
0001ebd: 08                                        ; FIXUP func body size
; function body 48
0001ec6: 00                                        ; func body size (guess)
0001ec7: 00                                        ; local decl count
0001ec8: 41                                        ; i32.const
0001ec9: 01                                        ; i32 literal
0001eca: 41                                        ; i32.const
0001ecb: 02                                        ; i32 literal
0001ecc: 47                                        ; i32.ne
0001ecd: 1a                                        ; drop
0001ece: 0b                                        ; end
0001ec6: 08                                        ; FIXUP func body size
; function body 49
0001ecf: 00                                        ; func body size (guess)
0001ed0: 00                                        ; local decl count
0001ed1: 41                                        ; i32.const
0001ed2: 01                                        ; i32 literal
0001ed3: 41                                        ; i32.const
0001ed4: 02                                        ; i32 literal
0001ed5: 48                                        ; i32.lt_s
0001ed6: 1a                                        ; drop
0001ed7: 0b                                        ; end
0001ecf: 08                                        ; FIXUP func body size
; function body 50
0001ed8: 00                                        ; func body size (guess)
0001ed9: 00                                        ; local decl count
0001eda: 41                                        ; i32.const
0001edb: 01                                        ; i32 literal
0001edc: 41                                        ; i32.const
0001edd: 02                                        ; i32 literal
0001ede: 49                                        ; i32.lt_u
0001edf: 1a                                        ; drop
0001ee0: 0b                                        ; end
0001ed8: 08                                        ; FIXUP func body size
; function body 51
0001ee1: 00                                        ; func body size (guess)
0001ee2: 00                                        ; local decl count
0001ee3: 41                                        ; i32.const
0001ee4: 01                                        ; i32 literal
0001ee5: 41                                        ; i32.const
0001ee6: 02                                        ; i32 literal
0001ee7: 4a                                        ; i32.gt_s
0001ee8: 1a                                        ; drop
0001ee9: 0b                                        ; end
0001ee1: 08                                        ; FIXUP func body size
; function body 52
0001eea: 00                                        ; func body size (guess)
0001eeb: 00                                        ; local decl count
0001eec: 41                                        ; i32.const
0001eed: 01                                        ; i32 literal
0001eee: 41                                        ; i32.const
0001eef: 02                                        ; i32 literal
0001ef0: 4b                                        ; i32.gt_u
0001ef1: 1a                                        ; drop
0001ef2: 0b                                        ; end
0001eea: 08                                        ; FIXUP func body size
; function body 53
0001ef3: 00                                        ; func body size (guess)
0001ef4: 00                                        ; local decl count
0001ef5: 41                                        ; i32.const
0001ef6: 01                                        ; i32 literal
0001ef7: 41                                        ; i32.const
0001ef8: 02                                        ; i32 literal
0001ef9: 4c                                        ; i32.le_s
0001efa: 1a                                        ; drop
0001efb: 0b                                        ; end
0001ef3: 08                                        ; FIXUP func body size
; function body 54
0001efc: 00                                        ; func body size (guess)
0001efd: 00                                        ; local decl count
0001efe: 41                                        ; i32.const
0001eff: 01                                        ; i32 literal
0001f00: 41                                        ; i32.const
0001f01: 02                                        ; i32 literal
0001f02: 4d                                        ; i32.le_u
0001f03: 1a                                        ; drop
0001f04: 0b                                        ; end
0001efc: 08                                        ; FIXUP func body size
; function body 55
0001f05: 00                                        ; func body size (guess)
0001f06: 00                                        ; local decl count
0001f07: 41                                        ; i32.const
0001f08: 01                                        ; i32 literal
0001f09: 41                                        ; i32.const
0001f0a: 02                                        ; i32 literal
0001f0b: 4e                                        ; i32.ge_s
0001f0c: 1a                                        ; drop
0001f0d: 0b                                        ; end
0001f05: 08                                        ; FIXUP func body size
; function body 56
0001f0e: 00                                        ; func body size (guess)
0001f0f: 00                                        ; local decl count
0001f10: 41                                        ; i32.const
0001f11: 01                                        ; i32 literal
0001f12: 41                                        ; i32.const
0001f13: 02                                        ; i32 literal
0001f14: 4f                                        ; i32.ge_u
0001f15: 1a                                        ; drop
0001f16: 0b                                        ; end
0001f0e: 08                                        ; FIXUP func body size
; function body 57
0001f17: 00                                        ; func body size (guess)
0001f18: 00                                        ; local decl count
0001f19: 42                                        ; i64.const
0001f1a: 01                                        ; i64 literal
0001f1b: 50                                        ; i64.eqz
0001f1c: 1a                                        ; drop
0001f1d: 0b                                        ; end
0001f17: 06                                        ; FIXUP func body size
; function body 58
0001f1e: 00                                        ; func body size (guess)
0001f1f: 00                                        ; local decl count
0001f20: 42                                        ; i64.const
0001f21: 01                                        ; i64 literal
0001f22: 42                                        ; i64.const
0001f23: 02                                        ; i64 literal
0001f24: 51                                        ; i64.eq
0001f25: 1a                                        ; drop
0001f26: 0b                                        ; end
0001f1e: 08                                        ; FIXUP func body size
; function body 59
0001f27: 00                                        ; func body size (guess)
0001f28: 00                                        ; local decl count
0001f29: 42                                        ; i64.const
0001f2a: 01                                        ; i64 literal
0001f2b: 42                                        ; i64.const
0001f2c: 02                                        ; i64 literal
0001f2d: 52                                        ; i64.ne
0001f2e: 1a                                        ; drop
0001f2f: 0b                                        ; end
0001f27: 08                                        ; FIXUP func body size
; function body 60
0001f30: 00                                        ; func body size (guess)
0001f31: 00                                        ; local decl count
0001f32: 42                                        ; i64.const
0001f33: 01                                        ; i64 literal
0001f34: 42                                        ; i64.const
0001f35: 02                                        ; i64 literal
0001f36: 53                                        ; i64.lt_s
0001f37: 1a                                        ; drop
0001f38: 0b                                        ; end
0001f30: 08                                        ; FIXUP func body size
; function body 61
0001f39: 00                                        ; func body size (guess)
0001f3a: 00                                        ; local decl count
0001f3b: 42                                        ; i64.const
0001f3c: 01                                        ; i64 literal
0001f3d: 42                                        ; i64.const
0001f3e: 02                                        ; i64 literal
0001f3f: 54                                        ; i64.lt_u
0001f40: 1a                                        ; drop
0001f41: 0b                                        ; end
0001f39: 08                                        ; FIXUP func body size
; function body 62
0001f42: 00                                        ; func body size (guess)
0001f43: 00                                        ; local decl count
0001f44: 42                                        ; i64.const
0001f45: 01                                        ; i64 literal
0001f46: 42                                        ; i64.const
0001f47: 02                                        ; i64 literal
0001f48: 55                                        ; i64.gt_s
0001f49: 1a                                        ; drop
0001f4a: 0b                                        ; end
0001f42: 08                                        ; FIXUP func body size
; function body 63
0001f4b: 00                                        ; func body size (guess)
0001f4c: 00                                        ; local decl count
0001f4d: 42                                        ; i64.const
0001f4e: 01                                        ; i64 literal
0001f4f: 42                                        ; i64.const
0001f50: 02                                        ; i64 literal
0001f51: 56                                        ; i64.gt_u
0001f52: 1a                                        ; drop
0001f53: 0b                                        ; end
0001f4b: 08                                        ; FIXUP func body size
; function body 64
0001f54: 00                                        ; func body size (guess)
0001f55: 00                                        ; local decl count
0001f56: 42                                        ; i64.const
0001f57: 01                                        ; i64 literal
0001f58: 42                                        ; i64.const
0001f59: 02                                        ; i64 literal
0001f5a: 57                                        ; i64.le_s
0001f5b: 1a                                        ; drop
0001f5c: 0b                                        ; end
0001f54: 08                                        ; FIXUP func body size
; function body 65
0001f5d: 00                                        ; func body size (guess)
0001f5e: 00                                        ; local decl count
0001f5f: 42                                        ; i64.const
0001f60: 01                                        ; i64 literal
0001f61: 42                                        ; i64.const
0001f62: 02                                        ; i64 literal
0001f63: 58                                        ; i64.le_u
0001f64: 1a                                        ; drop
0001f65: 0b                                        ; end
0001f5d: 08                                        ; FIXUP func body size
; function body 66
0001f66: 00                                        ; func body size (guess)
0001f67: 00                                        ; local decl count
0001f68: 42                                        ; i64.const
0001f69: 01                                        ; i64 literal
0001f6a: 42                                        ; i64.const
0001f6b: 02                                        ; i64 literal
0001f6c: 59                                        ; i64.ge_s
0001f6d: 1a                                        ; drop
0001f6e: 0b                                        ; end
0001f66: 08                                        ; FIXUP func body size
; function body 67
0001f6f: 00                                        ; func body size (guess)
0001f70: 00                                        ; local decl count
0001f71: 42                                        ; i64.const
0001f72: 01                                        ; i64 literal
0001f73: 42                                        ; i64.const
0001f74: 02                                        ; i64 literal
0001f75: 5a                                        ; i64.ge_u
0001f76: 1a                                        ; drop
0001f77: 0b                                        ; end
0001f6f: 08                                        ; FIXUP func body size
; function body 68
0001f78: 00                                        ; func body size (guess)
0001f79: 00                                        ; local decl count
0001f7a: 43                                        ; f32.const
0001f7b: 0000 803f                                 ; f32 literal
0001f7f: 43                                        ; f32.const
0001f80: 0000 0040                                 ; f32 literal
0001f84: 5b                                        ; f32.eq
0001f85: 1a                                        ; drop
0001f86: 0b                                        ; end
0001f78: 0e                                        ; FIXUP func body size
; function body 69
0001f87: 00                                        ; func body size (guess)
0001f88: 00                                        ; local decl count
0001f89: 43                                        ; f32.const
0001f8a: 0000 803f                                 ; f32 literal
0001f8e: 43                                        ; f32.const
0001f8f: 0000 0040                                 ; f32 literal
0001f93: 5c                                        ; f32.ne
0001f94: 1a                                        ; drop
0001f95: 0b                                        ; end
0001f87: 0e                                        ; FIXUP func body size
; function body 70
0001f96: 00                                        ; func body size (guess)
0001f97: 00                                        ; local decl count
0001f98: 43                                        ; f32.const
0001f99: 0000 803f                                 ; f32 literal
0001f9d: 43                                        ; f32.const
0001f9e: 0000 0040                                 ; f32 literal
0001fa2: 5d                                        ; f32.lt
0001fa3: 1a                                        ; drop
0001fa4: 0b                                        ; end
0001f96: 0e                                        ; FIXUP func body size
; function body 71
0001fa5: 00                                        ; func body size (guess)
0001fa6: 00                                        ; local decl count
0001fa7: 43                                        ; f32.const
0001fa8: 0000 803f                                 ; f32 literal
0001fac: 43                                        ; f32.const
0001fad: 0000 0040                                 ; f32 literal
0001fb1: 5e                                        ; f32.gt
0001fb2: 1a                                        ; drop
0001fb3: 0b                                        ; end
0001fa5: 0e                                        ; FIXUP func body size
; function body 72
0001fb4: 00                                        ; func body size (guess)
0001fb5: 00                                        ; local decl count
0001fb6: 43                                        ; f32.const
0001fb7: 0000 803f                                 ; f32 literal
0001fbb: 43                                        ; f32.const
0001fbc: 0000 0040                                 ; f32 literal
0001fc0: 5f                                        ; f32.le
0001fc1: 1a                                        ; drop
0001fc2: 0b                                        ; end
0001fb4: 0e                                        ; FIXUP func body size
; function body 73
0001fc3: 00                                        ; func body size (guess)
0001fc4: 00                                        ; local decl count
0001fc5: 43                                        ; f32.const
0001fc6: 0000 803f                                 ; f32 literal
0001fca: 43                                        ; f32.const
0001fcb: 0000 0040                                 ; f32 literal
0001fcf: 60                                        ; f32.ge
0001fd0: 1a                                        ; drop
0001fd1: 0b                                        ; end
0001fc3: 0e                                        ; FIXUP func body size
; function body 74
0001fd2: 00                                        ; func body size (guess)
0001fd3: 00                                        ; local decl count
0001fd4: 44                                        ; f64.const
0001fd5: 0000 0000 0000 f03f                       ; f64 literal
0001fdd: 44                                        ; f64.const
0001fde: 0000 0000 0000 0040                       ; f64 literal
0001fe6: 61                                        ; f64.eq
0001fe7: 1a                                        ; drop
0001fe8: 0b                                        ; end
0001fd2: 16                                        ; FIXUP func body size
; function body 75
0001fe9: 00                                        ; func body size (guess)
0001fea: 00                                        ; local decl count
0001feb: 44                                        ; f64.const
0001fec: 0000 0000 0000 f03f                       ; f64 literal
0001ff4: 44                                        ; f64.const
0001ff5: 0000 0000 0000 0040                       ; f64 literal
0001ffd: 62                                        ; f64.ne
0001ffe: 1a                                        ; drop
0001fff: 0b                                        ; end
0001fe9: 16                                        ; FIXUP func body size
; function body 76
0002000: 00                                        ; func body size (guess)
0002001: 00                                        ; local decl count
0002002: 44                                        ; f64.const
0002003: 0000 0000 0000 f03f                       ; f64 literal
000200b: 44                                        ; f64.const
000200c: 0000 0000 0000 0040                       ; f64 literal
0002014: 63                                        ; f64.lt
0002015: 1a                                        ; drop
0002016: 0b                                        ; end
0002000: 16                                        ; FIXUP func body size
; function body 77
0002017: 00                                        ; func body size (guess)
0002018: 00                                        ; local decl count
0002019: 44                                        ; f64.const
000201a: 0000 0000 0000 f03f                       ; f64 literal
0002022: 44                                        ; f64.const
0002023: 0000 0000 0000 0040                       ; f64 literal
000202b: 64                                        ; f64.gt
000202c: 1a                                        ; drop
000202d: 0b                                        ; end
0002017: 16                                        ; FIXUP func body size
; function body 78
000202e: 00                                        ; func body size (guess)
000202f: 00                                        ; local decl count
0002030: 44                                        ; f64.const
0002031: 0000 0000 0000 f03f                       ; f64 literal
0002039: 44                                        ; f64.const
000203a: 0000 0000 0000 0040                       ; f64 literal
0002042: 65                                        ; f64.le
0002043: 1a                                        ; drop
0002044: 0b                                        ; end
000202e: 16                                        ; FIXUP func body size
; function body 79
0002045: 00                                        ; func body size (guess)
0002046: 00                                        ; local decl count
0002047: 44                                        ; f64.const
0002048: 0000 0000 0000 f03f                       ; f64 literal
0002050: 44                                        ; f64.const
0002051: 0000 0000 0000 0040                       ; f64 literal
0002059: 66                                        ; f64.ge
000205a: 1a                                        ; drop
000205b: 0b                                        ; end
0002045: 16                                        ; FIXUP func body size
; function body 80
000205c: 00                                        ; func body size (guess)
000205d: 00                                        ; local decl count
000205e: 41                                        ; i32.const
000205f: 01                                        ; i32 literal
0002060: 67                                        ; i32.clz
0002061: 1a                                        ; drop
0002062: 0b                                        ; end
000205c: 06                                        ; FIXUP func body size
; function body 81
0002063: 00                                        ; func body size (guess)
0002064: 00                                        ; local decl count
0002065: 41                                        ; i32.const
0002066: 01                                        ; i32 literal
0002067: 68                                        ; i32.ctz
0002068: 1a                                        ; drop
0002069: 0b                                        ; end
0002063: 06                                        ; FIXUP func body size
; function body 82
000206a: 00                                        ; func body size (guess)
000206b: 00                                        ; local decl count
000206c: 41                                        ; i32.const
000206d: 01                                        ; i32 literal
000206e: 69                                        ; i32.popcnt
000206f: 1a                                        ; drop
0002070: 0b                                        ; end
000206a: 06                                        ; FIXUP func body size
; function body 83
0002071: 00                                        ; func body size (guess)
0002072: 00                                        ; local decl count
0002073: 41                                        ; i32.const
0002074: 01                                        ; i32 literal
0002075: 41                                        ; i32.const
0002076: 02                                        ; i32 literal
0002077: 6a                                        ; i32.add
0002078: 1a                                        ; drop
0002079: 0b                                        ; end
0002071: 08                                        ; FIXUP func body size
; function body 84
000207a: 00                                        ; func body size (guess)
000207b: 00                                        ; local decl count
000207c: 41                                        ; i32.const
000207d: 01                                        ; i32 literal
000207e: 41                                        ; i32.const
000207f: 02                                        ; i32 literal
0002080: 6b                                        ; i32.sub
0002081: 1a                                        ; drop
0002082: 0b                                        ; end
000207a: 08                                        ; FIXUP func body size
; function body 85
0002083: 00                                        ; func body size (guess)
0002084: 00                                        ; local decl count
0002085: 41                                        ; i32.const
0002086: 01                                        ; i32 literal
0002087: 41                                        ; i32.const
0002088: 02                                        ; i32 literal
0002089: 6c                                        ; i32.mul
000208a: 1a                                        ; drop
000208b: 0b                                        ; end
0002083: 08                                        ; FIXUP func body size
; function body 86
000208c: 00                                        ; func body size (guess)
000208d: 00                                        ; local decl count
000208e: 41                                        ; i32.const
000208f: 01                                        ; i32 literal
0002090: 41                                        ; i32.const
0002091: 02                                        ; i32 literal
0002092: 6d                                        ; i32.div_s
0002093: 1a                                        ; drop
0002094: 0b                                        ; end
000208c: 08                                        ; FIXUP func body size
; function body 87
0002095: 00                                        ; func body size (guess)
0002096: 00                                        ; local decl count
0002097: 41                                        ; i32.const
0002098: 01                                        ; i32 literal
0002099: 41                                        ; i32.const
000209a: 02                                        ; i32 literal
000209b: 6e                                        ; i32.div_u
000209c: 1a                                        ; drop
000209d: 0b                                        ; end
0002095: 08                                        ; FIXUP func body size
; function body 88
000209e: 00                                        ; func body size (guess)
000209f: 00                                        ; local decl count
00020a0: 41                                        ; i32.const
00020a1: 01                                        ; i32 literal
00020a2: 41                                        ; i32.const
00020a3: 02                                        ; i32 literal
00020a4: 6f                                        ; i32.rem_s
00020a5: 1a                                        ; drop
00020a6: 0b                                        ; end
000209e: 08                                        ; FIXUP func body size
; function body 89
00020a7: 00                                        ; func body size (guess)
00020a8: 00                                        ; local decl count
00020a9: 41                                        ; i32.const
00020aa: 01                                        ; i32 literal
00020ab: 41                                        ; i32.const
00020ac: 02                                        ; i32 literal
00020ad: 70                                        ; i32.rem_u
00020ae: 1a                                        ; drop
00020af: 0b                                        ; end
00020a7: 08                                        ; FIXUP func body size
; function body 90
00020b0: 00                                        ; func body size (guess)
00020b1: 00                                        ; local decl count
00020b2: 41                                        ; i32.const
00020b3: 01                                        ; i32 literal
00020b4: 41                                        ; i32.const
00020b5: 02                                        ; i32 literal
00020b6: 71                                        ; i32.and
00020b7: 1a                                        ; drop
00020b8: 0b                                        ; end
00020b0: 08                                        ; FIXUP func body size
; function body 91
00020b9: 00                                        ; func body size (guess)
00020ba: 00                                        ; local decl count
00020bb: 41                                        ; i32.const
00020bc: 01                                        ; i32 literal
00020bd: 41                                        ; i32.const
00020be: 02                                        ; i32 literal
00020bf: 72                                        ; i32.or
00020c0: 1a                                        ; drop
00020c1: 0b                                        ; end
00020b9: 08                                        ; FIXUP func body size
; function body 92
00020c2: 00                                        ; func body size (guess)
00020c3: 00                                        ; local decl count
00020c4: 41                                        ; i32.const
00020c5: 01                                        ; i32 literal
00020c6: 41                                        ; i32.const
00020c7: 02                                        ; i32 literal
00020c8: 73                                        ; i32.xor
00020c9: 1a                                        ; drop
00020ca: 0b                                        ; end
00020c2: 08                                        ; FIXUP func body size
; function body 93
00020cb: 00                                        ; func body size (guess)
00020cc: 00                                        ; local decl count
00020cd: 41                                        ; i32.const
00020ce: 01                                        ; i32 literal
00020cf: 41                                        ; i32.const
00020d0: 02                                        ; i32 literal
00020d1: 74                                        ; i32.shl
00020d2: 1a                                        ; drop
00020d3: 0b                                        ; end
00020cb: 08                                        ; FIXUP func body size
; function body 94
00020d4: 00                                        ; func body size (guess)
00020d5: 00                                        ; local decl count
00020d6: 41                                        ; i32.const
00020d7: 01                                        ; i32 literal
00020d8: 41                                        ; i32.const
00020d9: 02                                        ; i32 literal
00020da: 75                                        ; i32.shr_s
00020db: 1a                                        ; drop
00020dc: 0b                                        ; end
00020d4: 08                                        ; FIXUP func body size
; function body 95
00020dd: 00                                        ; func body size (guess)
00020de: 00                                        ; local decl count
00020df: 41                                        ; i32.const
00020e0: 01                                        ; i32 literal
00020e1: 41                                        ; i32.const
00020e2: 02                                        ; i32 literal
00020e3: 76                                        ; i32.shr_u
00020e4: 1a                                        ; drop
00020e5: 0b                                        ; end
00020dd: 08                                        ; FIXUP func body size
; function body 96
00020e6: 00                                        ; func body size (guess)
00020e7: 00                                        ; local decl count
00020e8: 41                                        ; i32.const
00020e9: 01                                        ; i32 literal
00020ea: 41                                        ; i32.const
00020eb: 02                                        ; i32 literal
00020ec: 77                                        ; i32.rotl
00020ed: 1a                                        ; drop
00020ee: 0b                                        ; end
00020e6: 08                                        ; FIXUP func body size
; function body 97
00020ef: 00                                        ; func body size (guess)
00020f0: 00                                        ; local decl count
00020f1: 41                                        ; i32.const
00020f2: 01                                        ; i32 literal
00020f3: 41                                        ; i32.const
00020f4: 02                                        ; i32 literal
00020f5: 78                                        ; i32.rotr
00020f6: 1a                                        ; drop
00020f7: 0b                                        ; end
00020ef: 08                                        ; FIXUP func body size
; function body 98
00020f8: 00                                        ; func body size (guess)
00020f9: 00                                        ; local decl count
00020fa: 42                                        ; i64.const
00020fb: 01                                        ; i64 literal
00020fc: 79                                        ; i64.clz
00020fd: 1a                                        ; drop
00020fe: 0b                                        ; end
00020f8: 06                                        ; FIXUP func body size
; function body 99
00020ff: 00                                        ; func body size (guess)
0002100: 00                                        ; local decl count
0002101: 42                                        ; i64.const
0002102: 01                                        ; i64 literal
0002103: 7a                                        ; i64.ctz
0002104: 1a                                        ; drop
0002105: 0b                                        ; end
00020ff: 06                                        ; FIXUP func body size
; function body 100
0002106: 00                                        ; func body size (guess)
0002107: 00                                        ; local decl count
0002108: 42                                        ; i64.const
0002109: 01                                        ; i64 literal
000210a: 7b                                        ; i64.popcnt
000210b: 1a                                        ; drop
000210c: 0b                                        ; end
0002106: 06                                        ; FIXUP func body size
; function body 101
000210d: 00                                        ; func body size (guess)
000210e: 00                                        ; local decl count
000210f: 42                                        ; i64.const
0002110: 01                                        ; i64 literal
0002111: 42                                        ; i64.const
0002112: 02                                        ; i64 literal
0002113: 7c                                        ; i64.add
0002114: 1a                                        ; drop
0002115: 0b                                        ; end
000210d: 08                                        ; FIXUP func body size
; function body 102
0002116: 00                                        ; func body size (guess)
0002117: 00                                        ; local decl count
0002118: 42                                        ; i64.const
0002119: 01                                        ; i64 literal
000211a: 42                                        ; i64.const
000211b: 02                                        ; i64 literal
000211c: 7d                                        ; i64.sub
000211d: 1a                                        ; drop
000211e: 0b                                        ; end
0002116: 08                                        ; FIXUP func body size
; function body 103
000211f: 00                                        ; func body size (guess)
0002120: 00                                        ; local decl count
0002121: 42                                        ; i64.const
0002122: 01                                        ; i64 literal
0002123: 42                                        ; i64.const
0002124: 02                                        ; i64 literal
0002125: 7e                                        ; i64.mul
0002126: 1a                                        ; drop
0002127: 0b                                        ; end
000211f: 08                                        ; FIXUP func body size
; function body 104
0002128: 00                                        ; func body size (guess)
0002129: 00                                        ; local decl count
000212a: 42                                        ; i64.const
000212b: 01                                        ; i64 literal
000212c: 42                                        ; i64.const
000212d: 02                                        ; i64 literal
000212e: 7f                                        ; i64.div_s
000212f: 1a                                        ; drop
0002130: 0b                                        ; end
0002128: 08                                        ; FIXUP func body size
; function body 105
0002131: 00                                        ; func body size (guess)
0002132: 00                                        ; local decl count
0002133: 42                                        ; i64.const
0002134: 01                                        ; i64 literal
0002135: 42                                        ; i64.const
0002136: 02                                        ; i64 literal
0002137: 80                                        ; i64.div_u
0002138: 1a                                        ; drop
0002139: 0b                                        ; end
0002131: 08                                        ; FIXUP func body size
; function body 106
000213a: 00                                        ; func body size (guess)
000213b: 00                                        ; local decl count
000213c: 42                                        ; i64.const
000213d: 01                                        ; i64 literal
000213e: 42                                        ; i64.const
000213f: 02                                        ; i64 literal
0002140: 81                                        ; i64.rem_s
0002141: 1a                                        ; drop
0002142: 0b                                        ; end
000213a: 08                                        ; FIXUP func body size
; function body 107
0002143: 00                                        ; func body size (guess)
0002144: 00                                        ; local decl count
0002145: 42                                        ; i64.const
0002146: 01                                        ; i64 literal
0002147: 42                                        ; i64.const
0002148: 02                                        ; i64 literal
0002149: 82                                        ; i64.rem_u
000214a: 1a                                        ; drop
000214b: 0b                                        ; end
0002143: 08                                        ; FIXUP func body size
; function body 108
000214c: 00                                        ; func body size (guess)
000214d: 00                                        ; local decl count
000214e: 42                                        ; i64.const
000214f: 01                                        ; i64 literal
0002150: 42                                        ; i64.const
0002151: 02                                        ; i64 literal
0002152: 83                                        ; i64.and
0002153: 1a                                        ; drop
0002154: 0b                                        ; end
000214c: 08                                        ; FIXUP func body size
; function body 109
0002155: 00                                        ; func body size (guess)
0002156: 00                                        ; local decl count
0002157: 42                                        ; i64.const
0002158: 01                                        ; i64 literal
0002159: 42                                        ; i64.const
000215a: 02                                        ; i64 literal
000215b: 84                                        ; i64.or
000215c: 1a                                        ; drop
000215d: 0b                                        ; end
0002155: 08                                        ; FIXUP func body size
; function body 110
000215e: 00                                        ; func body size (guess)
000215f: 00                                        ; local decl count
0002160: 42                                        ; i64.const
0002161: 01                                        ; i64 literal
0002162: 42                                        ; i64.const
0002163: 02                                        ; i64 literal
0002164: 85                                        ; i64.xor
0002165: 1a                                        ; drop
0002166: 0b                                        ; end
000215e: 08                                        ; FIXUP func body size
; function body 111
0002167: 00                                        ; func body size (guess)
0002168: 00                                        ; local decl count
0002169: 42                                        ; i64.const
000216a: 01                                        ; i64 literal
000216b: 42                                        ; i64.const
000216c: 02                                        ; i64 literal
000216d: 86                                        ; i64.shl
000216e: 1a                                        ; drop
000216f: 0b                                        ; end
0002167: 08                                        ; FIXUP func body size
; function body 112
0002170: 00                                        ; func body size (guess)
0002171: 00                                        ; local decl count
0002172: 42                                        ; i64.const
0002173: 01                                        ; i64 literal
0002174: 42                                        ; i64.const
0002175: 02                                        ; i64 literal
0002176: 87                                        ; i64.shr_s
0002177: 1a                                        ; drop
0002178: 0b                                        ; end
0002170: 08                                        ; FIXUP func body size
; function body 113
0002179: 00                                        ; func body size (guess)
000217a: 00                                        ; local decl count
000217b: 42                                        ; i64.const
000217c: 01                                        ; i64 literal
000217d: 42                                        ; i64.const
000217e: 02                                        ; i64 literal
000217f: 88                                        ; i64.shr_u
0002180: 1a                                        ; drop
0002181: 0b                                        ; end
0002179: 08                                        ; FIXUP func body size
; function body 114
0002182: 00                                        ; func body size (guess)
0002183: 00                                        ; local decl count
0002184: 42                                        ; i64.const
0002185: 01                                        ; i64 literal
0002186: 42                                        ; i64.const
0002187: 02                                        ; i64 literal
0002188: 89                                        ; i64.rotl
0002189: 1a                                        ; drop
000218a: 0b                                        ; end
0002182: 08                                        ; FIXUP func body size
; function body 115
000218b: 00                                        ; func body size (guess)
000218c: 00                                        ; local decl count
000218d: 42                                        ; i64.const
000218e: 01                                        ; i64 literal
000218f: 42                                        ; i64.const
0002190: 02                                        ; i64 literal
0002191: 8a                                        ; i64.rotr
0002192: 1a                                        ; drop
0002193: 0b                                        ; end
000218b: 08                                        ; FIXUP func body size
; function body 116
0002194: 00                                        ; func body size (guess)
0002195: 00                                        ; local decl count
0002196: 43                                        ; f32.const
0002197: 0000 803f                                 ; f32 literal
000219b: 8b                                        ; f32.abs
000219c: 1a                                        ; drop
000219d: 0b                                        ; end
0002194: 09                                        ; FIXUP func body size
; function body 117
000219e: 00                                        ; func body size (guess)
000219f: 00                                        ; local decl count
00021a0: 43                                        ; f32.const
00021a1: 0000 803f                                 ; f32 literal
00021a5: 8c                                        ; f32.neg
00021a6: 1a                                        ; drop
00021a7: 0b                                        ; end
000219e: 09                                        ; FIXUP func body size
; function body 118
00021a8: 00                                        ; func body size (guess)
00021a9: 00                                        ; local decl count
00021aa: 43                                        ; f32.const
00021ab: 0000 803f                                 ; f32 literal
00021af: 8d                                        ; f32.ceil
00021b0: 1a                                        ; drop
00021b1: 0b                                        ; end
00021a8: 09                                        ; FIXUP func body size
; function body 119
00021b2: 00                                        ; func body size (guess)
00021b3: 00                                        ; local decl count
00021b4: 43                                        ; f32.const
00021b5: 0000 803f                                 ; f32 literal
00021b9: 8e                                        ; f32.floor
00021ba: 1a                                        ; drop
00021bb: 0b                                        ; end
00021b2: 09                                        ; FIXUP func body size
; function body 120
00021bc: 00                                        ; func body size (guess)
00021bd: 00                                        ; local decl count
00021be: 43                                        ; f32.const
00021bf: 0000 803f                                 ; f32 literal
00021c3: 8f                                        ; f32.trunc
00021c4: 1a                                        ; drop
00021c5: 0b                                        ; end
00021bc: 09                                        ; FIXUP func body size
; function body 121
00021c6: 00                                        ; func body size (guess)
00021c7: 00                                        ; local decl count
00021c8: 43                                        ; f32.const
00021c9: 0000 803f                                 ; f32 literal
00021cd: 90                                        ; f32.nearest
00021ce: 1a                                        ; drop
00021cf: 0b                                        ; end
00021c6: 09                                        ; FIXUP func body size
; function body 122
00021d0: 00                                        ; func body size (guess)
00021d1: 00                                        ; local decl count
00021d2: 43                                        ; f32.const
00021d3: 0000 803f                                 ; f32 literal
00021d7: 91                                        ; f32.sqrt
00021d8: 1a                                        ; drop
00021d9: 0b                                        ; end
00021d0: 09                                        ; FIXUP func body size
; function body 123
00021da: 00                                        ; func body size (guess)
00021db: 00                                        ; local decl count
00021dc: 43                                        ; f32.const
00021dd: 0000 803f                                 ; f32 literal
00021e1: 43                                        ; f32.const
00021e2: 0000 0040                                 ; f32 literal
00021e6: 92                                        ; f32.add
00021e7: 1a                                        ; drop
00021e8: 0b                                        ; end
00021da: 0e                                        ; FIXUP func body size
; function body 124
00021e9: 00                                        ; func body size (guess)
00021ea: 00                                        ; local decl count
00021eb: 43                                        ; f32.const
00021ec: 0000 803f                                 ; f32 literal
00021f0: 43                                        ; f32.const
00021f1: 0000 0040                                 ; f32 literal
00021f5: 93                                        ; f32.sub
00021f6: 1a                                        ; drop
00021f7: 0b                                        ; end
00021e9: 0e                                        ; FIXUP func body size
; function body 125
00021f8: 00                                        ; func body size (guess)
00021f9: 00                                        ; local decl count
00021fa: 43                                        ; f32.const
00021fb: 0000 803f                                 ; f32 literal
00021ff: 43                                        ; f32.const
0002200: 0000 0040                                 ; f32 literal
0002204: 94                                        ; f32.mul
0002205: 1a                                        ; drop
0002206: 0b                                        ; end
00021f8: 0e                                        ; FIXUP func body size
; function body 126
0002207: 00                                        ; func body size (guess)
0002208: 00                                        ; local decl count
0002209: 43                                        ; f32.const
000220a: 0000 803f                                 ; f32 literal
000220e: 43                                        ; f32.const
000220f: 0000 0040                                 ; f32 literal
0002213: 95                                        ; f32.div
0002214: 1a                                        ; drop
0002215: 0b                                        ; end
0002207: 0e                                        ; FIXUP func body size
; function body 127
0002216: 00                                        ; func body size (guess)
0002217: 00                                        ; local decl count
0002218: 43                                        ; f32.const
0002219: 0000 803f                                 ; f32 literal
000221d: 43                                        ; f32.const
000221e: 0000 0040                                 ; f32 literal
0002222: 96                                        ; f32.min
0002223: 1a                                        ; drop
0002224: 0b                                        ; end
0002216: 0e                                        ; FIXUP func body size
; function body 128
0002225: 00                                        ; func body size (guess)
0002226: 00                                        ; local decl count
0002227: 43                                        ; f32.const
0002228: 0000 803f                                 ; f32 literal
000222c: 43                                        ; f32.const
000222d: 0000 0040                                 ; f32 literal
0002231: 97                                        ; f32.max
0002232: 1a                                        ; drop
0002233: 0b                                        ; end
0002225: 0e                                        ; FIXUP func body size
; function body 129
0002234: 00                                        ; func body size (guess)
0002235: 00                                        ; local decl count
0002236: 43                                        ; f32.const
0002237: 0000 803f                                 ; f32 literal
000223b: 43                                        ; f32.const
000223c: 0000 0040                                 ; f32 literal
0002240: 98                                        ; f32.copysign
0002241: 1a                                        ; drop
0002242: 0b                                        ; end
0002234: 0e                                        ; FIXUP func body size
; function body 130
0002243: 00                                        ; func body size (guess)
0002244: 00                                        ; local decl count
0002245: 44                                        ; f64.const
0002246: 0000 0000 0000 f03f                       ; f64 literal
000224e: 99                                        ; f64.abs
000224f: 1a                                        ; drop
0002250: 0b                                        ; end
0002243: 0d                                        ; FIXUP func body size
; function body 131
0002251: 00                                        ; func body size (guess)
0002252: 00                                        ; local decl count
0002253: 44                                        ; f64.const
0002254: 0000 0000 0000 f03f                       ; f64 literal
000225c: 9a                                        ; f64.neg
000225d: 1a                                        ; drop
000225e: 0b                                        ; end
0002251: 0d                                        ; FIXUP func body size
; function body 132
000225f: 00                                        ; func body size (guess)
0002260: 00                                        ; local decl count
0002261: 44                                        ; f64.const
0002262: 0000 0000 0000 f03f                       ; f64 literal
000226a: 9b                                        ; f64.ceil
000226b: 1a                                        ; drop
000226c: 0b                                        ; end
000225f: 0d                                        ; FIXUP func body size
; function body 133
000226d: 00                                        ; func body size (guess)
000226e: 00                                        ; local decl count
000226f: 44                                        ; f64.const
0002270: 0000 0000 0000 f03f                       ; f64 literal
0002278: 9c                                        ; f64.floor
0002279: 1a                                        ; drop
000227a: 0b                                        ; end
000226d: 0d                                        ; FIXUP func body size
; function body 134
000227b: 00                                        ; func body size (guess)
000227c: 00                                        ; local decl count
000227d: 44                                        ; f64.const
000227e: 0000 0000 0000 f03f                       ; f64 literal
0002286: 9d                                        ; f64.trunc
0002287: 1a                                        ; drop
0002288: 0b                                        ; end
000227b: 0d                                        ; FIXUP func body size
; function body 135
0002289: 00                                        ; func body size (guess)
000228a: 00                                        ; local decl count
000228b: 44                                        ; f64.const
000228c: 0000 0000 0000 f03f                       ; f64 literal
0002294: 9e                                        ; f64.nearest
0002295: 1a                                        ; drop
0002296: 0b                                        ; end
0002289: 0d                                        ; FIXUP func body size
; function body 136
0002297: 00                                        ; func body size (guess)
0002298: 00                                        ; local decl count
0002299: 44                                        ; f64.const
000229a: 0000 0000 0000 f03f                       ; f64 literal
00022a2: 9f                                        ; f64.sqrt
00022a3: 1a                                        ; drop
00022a4: 0b                                        ; end
0002297: 0d                                        ; FIXUP func body size
; function body 137
00022a5: 00                                        ; func body size (guess)
00022a6: 00                                        ; local decl count
00022a7: 44                                        ; f64.const
00022a8: 0000 0000 0000 f03f                       ; f64 literal
00022b0: 44                                        ; f64.const
00022b1: 0000 0000 0000 0040                       ; f64 literal
00022b9: a0                                        ; f64.add
00022ba: 1a                                        ; drop
00022bb: 0b                                        ; end
00022a5: 16                                        ; FIXUP func body size
; function body 138
00022bc: 00                                        ; func body size (guess)
00022bd: 00                                        ; local decl count
00022be: 44                                        ; f64.const
00022bf: 0000 0000 0000 f03f                       ; f64 literal
00022c7: 44                                        ; f64.const
00022c8: 0000 0000 0000 0040                       ; f64 literal
00022d0: a1                                        ; f64.sub
00022d1: 1a                                        ; drop
00022d2: 0b                                        ; end
00022bc: 16                                        ; FIXUP func body size
; function body 139
00022d3: 00                                        ; func body size (guess)
00022d4: 00                                        ; local decl count
00022d5: 44                                        ; f64.const
00022d6: 0000 0000 0000 f03f                       ; f64 literal
00022de: 44                                        ; f64.const
00022df: 0000 0000 0000 0040                       ; f64 literal
00022e7: a2                                        ; f64.mul
00022e8: 1a                                        ; drop
00022e9: 0b                                        ; end
00022d3: 16                                        ; FIXUP func body size
; function body 140
00022ea: 00                                        ; func body size (guess)
00022eb: 00                                        ; local decl count
00022ec: 44                                        ; f64.const
00022ed: 0000 0000 0000 f03f                       ; f64 literal
00022f5: 44                                        ; f64.const
00022f6: 0000 0000 0000 0040                       ; f64 literal
00022fe: a3                                        ; f64.div
00022ff: 1a                                        ; drop
0002300: 0b                                        ; end
00022ea: 16                                        ; FIXUP func body size
; function body 141
0002301: 00                                        ; func body size (guess)
0002302: 00                                        ; local decl count
0002303: 44                                        ; f64.const
0002304: 0000 0000 0000 f03f                       ; f64 literal
000230c: 44                                        ; f64.const
000230d: 0000 0000 0000 0040                       ; f64 literal
0002315: a4                                        ; f64.min
0002316: 1a                                        ; drop
0002317: 0b                                        ; end
0002301: 16                                        ; FIXUP func body size
; function body 142
0002318: 00                                        ; func body size (guess)
0002319: 00                                        ; local decl count
000231a: 44                                        ; f64.const
000231b: 0000 0000 0000 f03f                       ; f64 literal
0002323: 44                                        ; f64.const
0002324: 0000 0000 0000 0040                       ; f64 literal
000232c: a5                                        ; f64.max
000232d: 1a                                        ; drop
000232e: 0b                                        ; end
0002318: 16                                        ; FIXUP func body size
; function body 143
000232f: 00                                        ; func body size (guess)
0002330: 00                                        ; local decl count
0002331: 44                                        ; f64.const
0002332: 0000 0000 0000 f03f                       ; f64 literal
000233a: 44                                        ; f64.const
000233b: 0000 0000 0000 0040                       ; f64 literal
0002343: a6                                        ; f64.copysign
0002344: 1a                                        ; drop
0002345: 0b                                        ; end
000232f: 16                                        ; FIXUP func body size
; function body 144
0002346: 00                                        ; func body size (guess)
0002347: 00                                        ; local decl count
0002348: 42                                        ; i64.const
0002349: 01                                        ; i64 literal
000234a: a7                                        ; i32.wrap_i64
000234b: 1a                                        ; drop
000234c: 0b                                        ; end
0002346: 06                                        ; FIXUP func body size
; function body 145
000234d: 00                                        ; func body size (guess)
000234e: 00                                        ; local decl count
000234f: 43                                        ; f32.const
0002350: 0000 803f                                 ; f32 literal
0002354: a8                                        ; i32.trunc_f32_s
0002355: 1a                                        ; drop
0002356: 0b                                        ; end
000234d: 09                                        ; FIXUP func body size
; function body 146
0002357: 00                                        ; func body size (guess)
0002358: 00                                        ; local decl count
0002359: 43                                        ; f32.const
000235a: 0000 803f                                 ; f32 literal
000235e: a9                                        ; i32.trunc_f32_u
000235f: 1a                                        ; drop
0002360: 0b                                        ; end
0002357: 09                                        ; FIXUP func body size
; function body 147
0002361: 00                                        ; func body size (guess)
0002362: 00                                        ; local decl count
0002363: 44                                        ; f64.const
0002364: 0000 0000 0000 f03f                       ; f64 literal
000236c: aa                                        ; i32.trunc_f64_s
000236d: 1a                                        ; drop
000236e: 0b                                        ; end
0002361: 0d                                        ; FIXUP func body size
; function body 148
000236f: 00                                        ; func body size (guess)
0002370: 00                                        ; local decl count
0002371: 44                                        ; f64.const
0002372: 0000 0000 0000 f03f                       ; f64 literal
000237a: ab                                        ; i32.trunc_f64_u
000237b: 1a                                        ; drop
000237c: 0b                                        ; end
000236f: 0d                                        ; FIXUP func body size
; function body 149
000237d: 00                                        ; func body size (guess)
000237e: 00                                        ; local decl count
000237f: 41                                        ; i32.const
0002380: 01                                        ; i32 literal
0002381: ac                                        ; i64.extend_i32_s
0002382: 1a                                        ; drop
0002383: 0b                                        ; end
000237d: 06                                        ; FIXUP func body size
; function body 150
0002384: 00                                        ; func body size (guess)
0002385: 00                                        ; local decl count
0002386: 41                                        ; i32.const
0002387: 01                                        ; i32 literal
0002388: ad                                        ; i64.extend_i32_u
0002389: 1a                                        ; drop
000238a: 0b                                        ; end
0002384: 06                                        ; FIXUP func body size
; function body 151
000238b: 00                                        ; func body size (guess)
000238c: 00                                        ; local decl count
000238d: 43                                        ; f32.const
000238e: 0000 803f                                 ; f32 literal
0002392: ae                                        ; i64.trunc_f32_s
0002393: 1a                                        ; drop
0002394: 0b                                        ; end
000238b: 09                                        ; FIXUP func body size
; function body 152
0002395: 00                                        ; func body size (guess)
0002396: 00                                        ; local decl count
0002397: 43                                        ; f32.const
0002398: 0000 803f                                 ; f32 literal
000239c: af                                        ; i64.trunc_f32_u
000239d: 1a                                        ; drop
000239e: 0b                                        ; end
0002395: 09                                        ; FIXUP func body size
; function body 153
000239f: 00                                        ; func body size (guess)
00023a0: 00                                        ; local decl count
00023a1: 44                                        ; f64.const
00023a2: 0000 0000 0000 f03f                       ; f64 literal
00023aa: b0                                        ; i64.trunc_f64_s
00023ab: 1a                                        ; drop
00023ac: 0b                                        ; end
000239f: 0d                                        ; FIXUP func body size
; function body 154
00023ad: 00                                        ; func body size (guess)
00023ae: 00                                        ; local decl count
00023af: 44                                        ; f64.const
00023b0: 0000 0000 0000 f03f                       ; f64 literal
00023b8: b1                                        ; i64.trunc_f64_u
00023b9: 1a                                        ; drop
00023ba: 0b                                        ; end
00023ad: 0d                                        ; FIXUP func body size
; function body 155
00023bb: 00                                        ; func body size (guess)
00023bc: 00                                        ; local decl count
00023bd: 41                                        ; i32.const
00023be: 01                                        ; i32 literal
00023bf: b2                                        ; f32.convert_i32_s
00023c0: 1a                                        ; drop
00023c1: 0b                                        ; end
00023bb: 06                                        ; FIXUP func body size
; function body 156
00023c2: 00                                        ; func body size (guess)
00023c3: 00                                        ; local decl count
00023c4: 41                                        ; i32.const
00023c5: 01                                        ; i32 literal
00023c6: b3                                        ; f32.convert_i32_u
00023c7: 1a                                        ; drop
00023c8: 0b                                        ; end
00023c2: 06                                        ; FIXUP func body size
; function body 157
00023c9: 00                                        ; func body size (guess)
00023ca: 00                                        ; local decl count
00023cb: 42                                        ; i64.const
00023cc: 01                                        ; i64 literal
00023cd: b4                                        ; f32.convert_i64_s
00023ce: 1a                                        ; drop
00023cf: 0b                                        ; end
00023c9: 06                                        ; FIXUP func body size
; function body 158
00023d0: 00                                        ; func body size (guess)
00023d1: 00                                        ; local decl count
00023d2: 42                                        ; i64.const
00023d3: 01                                        ; i64 literal
00023d4: b5                                        ; f32.convert_i64_u
00023d5: 1a                                        ; drop
00023d6: 0b                                        ; end
00023d0: 06                                        ; FIXUP func body size
; function body 159
00023d7: 00                                        ; func body size (guess)
00023d8: 00                                        ; local decl count
00023d9: 44                                        ; f64.const
00023da: 0000 0000 0000 f03f                       ; f64 literal
00023e2: b6                                        ; f32.demote_f64
00023e3: 1a                                        ; drop
00023e4: 0b                                        ; end
00023d7: 0d                                        ; FIXUP func body size
; function body 160
00023e5: 00                                        ; func body size (guess)
00023e6: 00                                        ; local decl count
00023e7: 41                                        ; i32.const
00023e8: 01                                        ; i32 literal
00023e9: b7                                        ; f64.convert_i32_s
00023ea: 1a                                        ; drop
00023eb: 0b                                        ; end
00023e5: 06                                        ; FIXUP func body size
; function body 161
00023ec: 00                                        ; func body size (guess)
00023ed: 00                                        ; local decl count
00023ee: 41                                        ; i32.const
00023ef: 01                                        ; i32 literal
00023f0: b8                                        ; f64.convert_i32_u
00023f1: 1a                                        ; drop
00023f2: 0b                                        ; end
00023ec: 06                                        ; FIXUP func body size
; function body 162
00023f3: 00                                        ; func body size (guess)
00023f4: 00                                        ; local decl count
00023f5: 42                                        ; i64.const
00023f6: 01                                        ; i64 literal
00023f7: b9                                        ; f64.convert_i64_s
00023f8: 1a                                        ; drop
00023f9: 0b                                        ; end
00023f3: 06                                        ; FIXUP func body size
; function body 163
00023fa: 00                                        ; func body size (guess)
00023fb: 00                                        ; local decl count
00023fc: 42                                        ; i64.const
00023fd: 01                                        ; i64 literal
00023fe: ba                                        ; f64.convert_i64_u
00023ff: 1a                                        ; drop
0002400: 0b                                        ; end
00023fa: 06                                        ; FIXUP func body size
; function body 164
0002401: 00                                        ; func body size (guess)
0002402: 00                                        ; local decl count
0002403: 43                                        ; f32.const
0002404: 0000 803f                                 ; f32 literal
0002408: bb                                        ; f64.promote_f32
0002409: 1a                                        ; drop
000240a: 0b                                        ; end
0002401: 09                                        ; FIXUP func body size
; function body 165
000240b: 00                                        ; func body size (guess)
000240c: 00                                        ; local decl count
000240d: 41                                        ; i32.const
000240e: 01                                        ; i32 literal
000240f: be                                        ; f32.reinterpret_i32
0002410: 1a                                        ; drop
0002411: 0b                                        ; end
000240b: 06                                        ; FIXUP func body size
; function body 166
0002412: 00                                        ; func body size (guess)
0002413: 00                                        ; local decl count
0002414: 43                                        ; f32.const
0002415: 0000 803f                                 ; f32 literal
0002419: bc                                        ; i32.reinterpret_f32
000241a: 1a                                        ; drop
000241b: 0b                                        ; end
0002412: 09                                        ; FIXUP func body size
; function body 167
000241c: 00                                        ; func body size (guess)
000241d: 00                                        ; local decl count
000241e: 42                                        ; i64.const
000241f: 01                                        ; i64 literal
0002420: bf                                        ; f64.reinterpret_i64
0002421: 1a                                        ; drop
0002422: 0b                                        ; end
000241c: 06                                        ; FIXUP func body size
; function body 168
0002423: 00                                        ; func body size (guess)
0002424: 00                                        ; local decl count
0002425: 44                                        ; f64.const
0002426: 0000 0000 0000 f03f                       ; f64 literal
000242e: bd                                        ; i64.reinterpret_f64
000242f: 1a                                        ; drop
0002430: 0b                                        ; end
0002423: 0d                                        ; FIXUP func body size
; function body 169
0002431: 00                                        ; func body size (guess)
0002432: 00                                        ; local decl count
0002433: 41                                        ; i32.const
0002434: 01                                        ; i32 literal
0002435: c0                                        ; i32.extend8_s
0002436: 1a                                        ; drop
0002437: 0b                                        ; end
0002431: 06                                        ; FIXUP func body size
; function body 170
0002438: 00                                        ; func body size (guess)
0002439: 00                                        ; local decl count
000243a: 41                                        ; i32.const
000243b: 01                                        ; i32 literal
000243c: c1                                        ; i32.extend16_s
000243d: 1a                                        ; drop
000243e: 0b                                        ; end
0002438: 06                                        ; FIXUP func body size
; function body 171
000243f: 00                                        ; func body size (guess)
0002440: 00                                        ; local decl count
0002441: 42                                        ; i64.const
0002442: 01                                        ; i64 literal
0002443: c2                                        ; i64.extend8_s
0002444: 1a                                        ; drop
0002445: 0b                                        ; end
000243f: 06                                        ; FIXUP func body size
; function body 172
0002446: 00                                        ; func body size (guess)
0002447: 00                                        ; local decl count
0002448: 42                                        ; i64.const
0002449: 01                                        ; i64 literal
000244a: c3                                        ; i64.extend16_s
000244b: 1a                                        ; drop
000244c: 0b                                        ; end
0002446: 06                                        ; FIXUP func body size
; function body 173
000244d: 00                                        ; func body size (guess)
000244e: 00                                        ; local decl count
000244f: 42                                        ; i64.const
0002450: 01                                        ; i64 literal
0002451: c4                                        ; i64.extend32_s
0002452: 1a                                        ; drop
0002453: 0b                                        ; end
000244d: 06                                        ; FIXUP func body size
; function body 174
0002454: 00                                        ; func body size (guess)
0002455: 01                                        ; local decl count
0002456: 01                                        ; local type count
0002457: 7f                                        ; i32
0002458: 0b                                        ; end
0002454: 04                                        ; FIXUP func body size
; function body 175
0002459: 00                                        ; func body size (guess)
000245a: 00                                        ; local decl count
000245b: 41                                        ; i32.const
000245c: 01                                        ; i32 literal
000245d: 0d                                        ; br_if
000245e: 00                                        ; break depth
000245f: 0b                                        ; end
0002459: 06                                        ; FIXUP func body size
; function body 176
0002460: 00                                        ; func body size (guess)
0002461: 00                                        ; local decl count
0002462: 41                                        ; i32.const
0002463: 01                                        ; i32 literal
0002464: 10                                        ; call
0002465: 00                                        ; function index
0002466: 0b                                        ; end
0002460: 06                                        ; FIXUP func body size
; function body 177
0002467: 00                                        ; func body size (guess)
0002468: 00                                        ; local decl count
0002469: 41                                        ; i32.const
000246a: 01                                        ; i32 literal
000246b: 0e                                        ; br_table
000246c: 00                                        ; num targets
000246d: 00                                        ; break depth for default
000246e: 0b                                        ; end
0002467: 07                                        ; FIXUP func body size
; function body 178
000246f: 00                                        ; func body size (guess)
0002470: 00                                        ; local decl count
0002471: 02                                        ; block
0002472: 7f                                        ; i32
0002473: 41                                        ; i32.const
0002474: 01                                        ; i32 literal
0002475: 41                                        ; i32.const
0002476: 02                                        ; i32 literal
0002477: 0c                                        ; br
0002478: 00                                        ; break depth
0002479: 0b                                        ; end
000247a: 1a                                        ; drop
000247b: 0b                                        ; end
000246f: 0c                                        ; FIXUP func body size
; function body 179
000247c: 00                                        ; func body size (guess)
000247d: 00                                        ; local decl count
000247e: 43                                        ; f32.const
000247f: 0000 803f                                 ; f32 literal
0002483: fc                                        ; prefix
0002484: 00                                        ; i32.trunc_sat_f32_s
0002485: 1a                                        ; drop
0002486: 0b                                        ; end
000247c: 0a                                        ; FIXUP func body size
; function body 180
0002487: 00                                        ; func body size (guess)
0002488: 00                                        ; local decl count
0002489: 43                                        ; f32.const
000248a: 0000 803f                                 ; f32 literal
000248e: fc                                        ; prefix
000248f: 01                                        ; i32.trunc_sat_f32_u
0002490: 1a                                        ; drop
0002491: 0b                                        ; end
0002487: 0a                                        ; FIXUP func body size
; function body 181
0002492: 00                                        ; func body size (guess)
0002493: 00                                        ; local decl count
0002494: 44                                        ; f64.const
0002495: 0000 0000 0000 f03f                       ; f64 literal
000249d: fc                                        ; prefix
000249e: 02                                        ; i32.trunc_sat_f64_s
000249f: 1a                                        ; drop
00024a0: 0b                                        ; end
0002492: 0e                                        ; FIXUP func body size
; function body 182
00024a1: 00                                        ; func body size (guess)
00024a2: 00                                        ; local decl count
00024a3: 44                                        ; f64.const
00024a4: 0000 0000 0000 f03f                       ; f64 literal
00024ac: fc                                        ; prefix
00024ad: 03                                        ; i32.trunc_sat_f64_u
00024ae: 1a                                        ; drop
00024af: 0b                                        ; end
00024a1: 0e                                        ; FIXUP func body size
; function body 183
00024b0: 00                                        ; func body size (guess)
00024b1: 00                                        ; local decl count
00024b2: 43                                        ; f32.const
00024b3: 0000 803f                                 ; f32 literal
00024b7: fc                                        ; prefix
00024b8: 04                                        ; i64.trunc_sat_f32_s
00024b9: 1a                                        ; drop
00024ba: 0b                                        ; end
00024b0: 0a                                        ; FIXUP func body size
; function body 184
00024bb: 00                                        ; func body size (guess)
00024bc: 00                                        ; local decl count
00024bd: 43                                        ; f32.const
00024be: 0000 803f                                 ; f32 literal
00024c2: fc                                        ; prefix
00024c3: 05                                        ; i64.trunc_sat_f32_u
00024c4: 1a                                        ; drop
00024c5: 0b                                        ; end
00024bb: 0a                                        ; FIXUP func body size
; function body 185
00024c6: 00                                        ; func body size (guess)
00024c7: 00                                        ; local decl count
00024c8: 44                                        ; f64.const
00024c9: 0000 0000 0000 f03f                       ; f64 literal
00024d1: fc                                        ; prefix
00024d2: 06                                        ; i64.trunc_sat_f64_s
00024d3: 1a                                        ; drop
00024d4: 0b                                        ; end
00024c6: 0e                                        ; FIXUP func body size
; function body 186
00024d5: 00                                        ; func body size (guess)
00024d6: 00                                        ; local decl count
00024d7: 44                                        ; f64.const
00024d8: 0000 0000 0000 f03f                       ; f64 literal
00024e0: fc                                        ; prefix
00024e1: 07                                        ; i64.trunc_sat_f64_u
00024e2: 1a                                        ; drop
00024e3: 0b                                        ; end
00024d5: 0e                                        ; FIXUP func body size
; function body 187
00024e4: 00                                        ; func body size (guess)
00024e5: 00                                        ; local decl count
00024e6: 41                                        ; i32.const
00024e7: 01                                        ; i32 literal
00024e8: 41                                        ; i32.const
00024e9: 02                                        ; i32 literal
00024ea: 41                                        ; i32.const
00024eb: 03                                        ; i32 literal
00024ec: fc                                        ; prefix
00024ed: 08                                        ; memory.init
00024ee: 00                                        ; memory.init segment
00024ef: 00                                        ; memory.init reserved
00024f0: 0b                                        ; end
00024e4: 0c                                        ; FIXUP func body size
; function body 188
00024f1: 00                                        ; func body size (guess)
00024f2: 00                                        ; local decl count
00024f3: fc                                        ; prefix
00024f4: 09                                        ; data.drop
00024f5: 00                                        ; data.drop segment
00024f6: 0b                                        ; end
00024f1: 05                                        ; FIXUP func body size
; function body 189
00024f7: 00                                        ; func body size (guess)
00024f8: 00                                        ; local decl count
00024f9: 41                                        ; i32.const
00024fa: 01                                        ; i32 literal
00024fb: 41                                        ; i32.const
00024fc: 02                                        ; i32 literal
00024fd: 41                                        ; i32.const
00024fe: 03                                        ; i32 literal
00024ff: fc                                        ; prefix
0002500: 0a                                        ; memory.copy
0002501: 00                                        ; memory.copy reserved
0002502: 00                                        ; memory.copy reserved
0002503: 0b                                        ; end
00024f7: 0c                                        ; FIXUP func body size
; function body 190
0002504: 00                                        ; func body size (guess)
0002505: 00                                        ; local decl count
0002506: 41                                        ; i32.const
0002507: 01                                        ; i32 literal
0002508: 41                                        ; i32.const
0002509: 02                                        ; i32 literal
000250a: 41                                        ; i32.const
000250b: 03                                        ; i32 literal
000250c: fc                                        ; prefix
000250d: 0b                                        ; memory.fill
000250e: 00                                        ; memory.fill reserved
000250f: 0b                                        ; end
0002504: 0b                                        ; FIXUP func body size
; function body 191
0002510: 00                                        ; func body size (guess)
0002511: 00                                        ; local decl count
0002512: 41                                        ; i32.const
0002513: 01                                        ; i32 literal
0002514: 41                                        ; i32.const
0002515: 02                                        ; i32 literal
0002516: 41                                        ; i32.const
0002517: 03                                        ; i32 literal
0002518: fc                                        ; prefix
0002519: 0c                                        ; table.init
000251a: 00                                        ; table.init segment
000251b: 00                                        ; table.init table
000251c: 0b                                        ; end
0002510: 0c                                        ; FIXUP func body size
; function body 192
000251d: 00                                        ; func body size (guess)
000251e: 00                                        ; local decl count
000251f: fc                                        ; prefix
0002520: 0d                                        ; elem.drop
0002521: 00                                        ; elem.drop segment
0002522: 0b                                        ; end
000251d: 05                                        ; FIXUP func body size
; function body 193
0002523: 00                                        ; func body size (guess)
0002524: 00                                        ; local decl count
0002525: 41                                        ; i32.const
0002526: 01                                        ; i32 literal
0002527: 41                                        ; i32.const
0002528: 02                                        ; i32 literal
0002529: 41                                        ; i32.const
000252a: 03                                        ; i32 literal
000252b: fc                                        ; prefix
000252c: 0e                                        ; table.copy
000252d: 00                                        ; table.copy dst_table
000252e: 00                                        ; table.copy src_table
000252f: 0b                                        ; end
0002523: 0c                                        ; FIXUP func body size
; function body 194
0002530: 00                                        ; func body size (guess)
0002531: 00                                        ; local decl count
0002532: 41                                        ; i32.const
0002533: 01                                        ; i32 literal
0002534: fd                                        ; prefix
0002535: 00                                        ; v128.load
0002536: 04                                        ; alignment
0002537: 03                                        ; load offset
0002538: 1a                                        ; drop
0002539: 0b                                        ; end
0002530: 09                                        ; FIXUP func body size
; function body 195
000253a: 00                                        ; func body size (guess)
000253b: 00                                        ; local decl count
000253c: 41                                        ; i32.const
000253d: 01                                        ; i32 literal
000253e: fd                                        ; prefix
000253f: 02                                        ; v128.const
0002540: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002550: fd                                        ; prefix
0002551: 01                                        ; v128.store
0002552: 04                                        ; alignment
0002553: 03                                        ; store offset
0002554: 0b                                        ; end
000253a: 1a                                        ; FIXUP func body size
; function body 196
0002555: 00                                        ; func body size (guess)
0002556: 00                                        ; local decl count
0002557: fd                                        ; prefix
0002558: 02                                        ; v128.const
0002559: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002569: 1a                                        ; drop
000256a: 0b                                        ; end
0002555: 15                                        ; FIXUP func body size
; function body 197
000256b: 00                                        ; func body size (guess)
000256c: 00                                        ; local decl count
000256d: 41                                        ; i32.const
000256e: 01                                        ; i32 literal
000256f: fd                                        ; prefix
0002570: 04                                        ; i8x16.splat
0002571: 1a                                        ; drop
0002572: 0b                                        ; end
000256b: 07                                        ; FIXUP func body size
; function body 198
0002573: 00                                        ; func body size (guess)
0002574: 00                                        ; local decl count
0002575: fd                                        ; prefix
0002576: 02                                        ; v128.const
0002577: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002587: fd                                        ; prefix
0002588: 05                                        ; i8x16.extract_lane_s
0002589: 0f                                        ; Simd Lane literal
000258a: 1a                                        ; drop
000258b: 0b                                        ; end
0002573: 18                                        ; FIXUP func body size
; function body 199
000258c: 00                                        ; func body size (guess)
000258d: 00                                        ; local decl count
000258e: fd                                        ; prefix
000258f: 02                                        ; v128.const
0002590: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00025a0: fd                                        ; prefix
00025a1: 06                                        ; i8x16.extract_lane_u
00025a2: 0f                                        ; Simd Lane literal
00025a3: 1a                                        ; drop
00025a4: 0b                                        ; end
000258c: 18                                        ; FIXUP func body size
; function body 200
00025a5: 00                                        ; func body size (guess)
00025a6: 00                                        ; local decl count
00025a7: fd                                        ; prefix
00025a8: 02                                        ; v128.const
00025a9: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00025b9: 41                                        ; i32.const
00025ba: 00                                        ; i32 literal
00025bb: fd                                        ; prefix
00025bc: 07                                        ; i8x16.replace_lane
00025bd: 0f                                        ; Simd Lane literal
00025be: 1a                                        ; drop
00025bf: 0b                                        ; end
00025a5: 1a                                        ; FIXUP func body size
; function body 201
00025c0: 00                                        ; func body size (guess)
00025c1: 00                                        ; local decl count
00025c2: 41                                        ; i32.const
00025c3: 01                                        ; i32 literal
00025c4: fd                                        ; prefix
00025c5: 08                                        ; i16x8.splat
00025c6: 1a                                        ; drop
00025c7: 0b                                        ; end
00025c0: 07                                        ; FIXUP func body size
; function body 202
00025c8: 00                                        ; func body size (guess)
00025c9: 00                                        ; local decl count
00025ca: fd                                        ; prefix
00025cb: 02                                        ; v128.const
00025cc: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00025dc: fd                                        ; prefix
00025dd: 09                                        ; i16x8.extract_lane_s
00025de: 07                                        ; Simd Lane literal
00025df: 1a                                        ; drop
00025e0: 0b                                        ; end
00025c8: 18                                        ; FIXUP func body size
; function body 203
00025e1: 00                                        ; func body size (guess)
00025e2: 00                                        ; local decl count
00025e3: fd                                        ; prefix
00025e4: 02                                        ; v128.const
00025e5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00025f5: fd                                        ; prefix
00025f6: 0a                                        ; i16x8.extract_lane_u
00025f7: 07                                        ; Simd Lane literal
00025f8: 1a                                        ; drop
00025f9: 0b                                        ; end
00025e1: 18                                        ; FIXUP func body size
; function body 204
00025fa: 00                                        ; func body size (guess)
00025fb: 00                                        ; local decl count
00025fc: fd                                        ; prefix
00025fd: 02                                        ; v128.const
00025fe: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000260e: 41                                        ; i32.const
000260f: 00                                        ; i32 literal
0002610: fd                                        ; prefix
0002611: 0b                                        ; i16x8.replace_lane
0002612: 07                                        ; Simd Lane literal
0002613: 1a                                        ; drop
0002614: 0b                                        ; end
00025fa: 1a                                        ; FIXUP func body size
; function body 205
0002615: 00                                        ; func body size (guess)
0002616: 00                                        ; local decl count
0002617: 41                                        ; i32.const
0002618: 01                                        ; i32 literal
0002619: fd                                        ; prefix
000261a: 0c                                        ; i32x4.splat
000261b: 1a                                        ; drop
000261c: 0b                                        ; end
0002615: 07                                        ; FIXUP func body size
; function body 206
000261d: 00                                        ; func body size (guess)
000261e: 00                                        ; local decl count
000261f: fd                                        ; prefix
0002620: 02                                        ; v128.const
0002621: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002631: fd                                        ; prefix
0002632: 0d                                        ; i32x4.extract_lane
0002633: 03                                        ; Simd Lane literal
0002634: 1a                                        ; drop
0002635: 0b                                        ; end
000261d: 18                                        ; FIXUP func body size
; function body 207
0002636: 00                                        ; func body size (guess)
0002637: 00                                        ; local decl count
0002638: fd                                        ; prefix
0002639: 02                                        ; v128.const
000263a: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000264a: 41                                        ; i32.const
000264b: 00                                        ; i32 literal
000264c: fd                                        ; prefix
000264d: 0e                                        ; i32x4.replace_lane
000264e: 03                                        ; Simd Lane literal
000264f: 1a                                        ; drop
0002650: 0b                                        ; end
0002636: 1a                                        ; FIXUP func body size
; function body 208
0002651: 00                                        ; func body size (guess)
0002652: 00                                        ; local decl count
0002653: 42                                        ; i64.const
0002654: 01                                        ; i64 literal
0002655: fd                                        ; prefix
0002656: 0f                                        ; i64x2.splat
0002657: 1a                                        ; drop
0002658: 0b                                        ; end
0002651: 07                                        ; FIXUP func body size
; function body 209
0002659: 00                                        ; func body size (guess)
000265a: 00                                        ; local decl count
000265b: fd                                        ; prefix
000265c: 02                                        ; v128.const
000265d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000266d: fd                                        ; prefix
000266e: 10                                        ; i64x2.extract_lane
000266f: 01                                        ; Simd Lane literal
0002670: 1a                                        ; drop
0002671: 0b                                        ; end
0002659: 18                                        ; FIXUP func body size
; function body 210
0002672: 00                                        ; func body size (guess)
0002673: 00                                        ; local decl count
0002674: fd                                        ; prefix
0002675: 02                                        ; v128.const
0002676: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002686: 42                                        ; i64.const
0002687: 00                                        ; i64 literal
0002688: fd                                        ; prefix
0002689: 11                                        ; i64x2.replace_lane
000268a: 01                                        ; Simd Lane literal
000268b: 1a                                        ; drop
000268c: 0b                                        ; end
0002672: 1a                                        ; FIXUP func body size
; function body 211
000268d: 00                                        ; func body size (guess)
000268e: 00                                        ; local decl count
000268f: 43                                        ; f32.const
0002690: 0000 803f                                 ; f32 literal
0002694: fd                                        ; prefix
0002695: 12                                        ; f32x4.splat
0002696: 1a                                        ; drop
0002697: 0b                                        ; end
000268d: 0a                                        ; FIXUP func body size
; function body 212
0002698: 00                                        ; func body size (guess)
0002699: 00                                        ; local decl count
000269a: fd                                        ; prefix
000269b: 02                                        ; v128.const
000269c: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00026ac: fd                                        ; prefix
00026ad: 13                                        ; f32x4.extract_lane
00026ae: 03                                        ; Simd Lane literal
00026af: 1a                                        ; drop
00026b0: 0b                                        ; end
0002698: 18                                        ; FIXUP func body size
; function body 213
00026b1: 00                                        ; func body size (guess)
00026b2: 00                                        ; local decl count
00026b3: fd                                        ; prefix
00026b4: 02                                        ; v128.const
00026b5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00026c5: 43                                        ; f32.const
00026c6: 0000 0000                                 ; f32 literal
00026ca: fd                                        ; prefix
00026cb: 14                                        ; f32x4.replace_lane
00026cc: 03                                        ; Simd Lane literal
00026cd: 1a                                        ; drop
00026ce: 0b                                        ; end
00026b1: 1d                                        ; FIXUP func body size
; function body 214
00026cf: 00                                        ; func body size (guess)
00026d0: 00                                        ; local decl count
00026d1: 44                                        ; f64.const
00026d2: 0000 0000 0000 f03f                       ; f64 literal
00026da: fd                                        ; prefix
00026db: 15                                        ; f64x2.splat
00026dc: 1a                                        ; drop
00026dd: 0b                                        ; end
00026cf: 0e                                        ; FIXUP func body size
; function body 215
00026de: 00                                        ; func body size (guess)
00026df: 00                                        ; local decl count
00026e0: fd                                        ; prefix
00026e1: 02                                        ; v128.const
00026e2: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00026f2: fd                                        ; prefix
00026f3: 16                                        ; f64x2.extract_lane
00026f4: 01                                        ; Simd Lane literal
00026f5: 1a                                        ; drop
00026f6: 0b                                        ; end
00026de: 18                                        ; FIXUP func body size
; function body 216
00026f7: 00                                        ; func body size (guess)
00026f8: 00                                        ; local decl count
00026f9: fd                                        ; prefix
00026fa: 02                                        ; v128.const
00026fb: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000270b: 44                                        ; f64.const
000270c: 0000 0000 0000 0000                       ; f64 literal
0002714: fd                                        ; prefix
0002715: 17                                        ; f64x2.replace_lane
0002716: 01                                        ; Simd Lane literal
0002717: 1a                                        ; drop
0002718: 0b                                        ; end
00026f7: 21                                        ; FIXUP func body size
; function body 217
0002719: 00                                        ; func body size (guess)
000271a: 00                                        ; local decl count
000271b: fd                                        ; prefix
000271c: 02                                        ; v128.const
000271d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000272d: fd                                        ; prefix
000272e: 02                                        ; v128.const
000272f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000273f: fd                                        ; prefix
0002740: 18                                        ; i8x16.eq
0002741: 1a                                        ; drop
0002742: 0b                                        ; end
0002719: 29                                        ; FIXUP func body size
; function body 218
0002743: 00                                        ; func body size (guess)
0002744: 00                                        ; local decl count
0002745: fd                                        ; prefix
0002746: 02                                        ; v128.const
0002747: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002757: fd                                        ; prefix
0002758: 02                                        ; v128.const
0002759: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002769: fd                                        ; prefix
000276a: 19                                        ; i8x16.ne
000276b: 1a                                        ; drop
000276c: 0b                                        ; end
0002743: 29                                        ; FIXUP func body size
; function body 219
000276d: 00                                        ; func body size (guess)
000276e: 00                                        ; local decl count
000276f: fd                                        ; prefix
0002770: 02                                        ; v128.const
0002771: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002781: fd                                        ; prefix
0002782: 02                                        ; v128.const
0002783: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002793: fd                                        ; prefix
0002794: 1a                                        ; i8x16.lt_s
0002795: 1a                                        ; drop
0002796: 0b                                        ; end
000276d: 29                                        ; FIXUP func body size
; function body 220
0002797: 00                                        ; func body size (guess)
0002798: 00                                        ; local decl count
0002799: fd                                        ; prefix
000279a: 02                                        ; v128.const
000279b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00027ab: fd                                        ; prefix
00027ac: 02                                        ; v128.const
00027ad: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00027bd: fd                                        ; prefix
00027be: 1b                                        ; i8x16.lt_u
00027bf: 1a                                        ; drop
00027c0: 0b                                        ; end
0002797: 29                                        ; FIXUP func body size
; function body 221
00027c1: 00                                        ; func body size (guess)
00027c2: 00                                        ; local decl count
00027c3: fd                                        ; prefix
00027c4: 02                                        ; v128.const
00027c5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00027d5: fd                                        ; prefix
00027d6: 02                                        ; v128.const
00027d7: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00027e7: fd                                        ; prefix
00027e8: 1c                                        ; i8x16.gt_s
00027e9: 1a                                        ; drop
00027ea: 0b                                        ; end
00027c1: 29                                        ; FIXUP func body size
; function body 222
00027eb: 00                                        ; func body size (guess)
00027ec: 00                                        ; local decl count
00027ed: fd                                        ; prefix
00027ee: 02                                        ; v128.const
00027ef: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00027ff: fd                                        ; prefix
0002800: 02                                        ; v128.const
0002801: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002811: fd                                        ; prefix
0002812: 1d                                        ; i8x16.gt_u
0002813: 1a                                        ; drop
0002814: 0b                                        ; end
00027eb: 29                                        ; FIXUP func body size
; function body 223
0002815: 00                                        ; func body size (guess)
0002816: 00                                        ; local decl count
0002817: fd                                        ; prefix
0002818: 02                                        ; v128.const
0002819: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002829: fd                                        ; prefix
000282a: 02                                        ; v128.const
000282b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000283b: fd                                        ; prefix
000283c: 1e                                        ; i8x16.le_s
000283d: 1a                                        ; drop
000283e: 0b                                        ; end
0002815: 29                                        ; FIXUP func body size
; function body 224
000283f: 00                                        ; func body size (guess)
0002840: 00                                        ; local decl count
0002841: fd                                        ; prefix
0002842: 02                                        ; v128.const
0002843: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002853: fd                                        ; prefix
0002854: 02                                        ; v128.const
0002855: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002865: fd                                        ; prefix
0002866: 1f                                        ; i8x16.le_u
0002867: 1a                                        ; drop
0002868: 0b                                        ; end
000283f: 29                                        ; FIXUP func body size
; function body 225
0002869: 00                                        ; func body size (guess)
000286a: 00                                        ; local decl count
000286b: fd                                        ; prefix
000286c: 02                                        ; v128.const
000286d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000287d: fd                                        ; prefix
000287e: 02                                        ; v128.const
000287f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000288f: fd                                        ; prefix
0002890: 20                                        ; i8x16.ge_s
0002891: 1a                                        ; drop
0002892: 0b                                        ; end
0002869: 29                                        ; FIXUP func body size
; function body 226
0002893: 00                                        ; func body size (guess)
0002894: 00                                        ; local decl count
0002895: fd                                        ; prefix
0002896: 02                                        ; v128.const
0002897: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00028a7: fd                                        ; prefix
00028a8: 02                                        ; v128.const
00028a9: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00028b9: fd                                        ; prefix
00028ba: 21                                        ; i8x16.ge_u
00028bb: 1a                                        ; drop
00028bc: 0b                                        ; end
0002893: 29                                        ; FIXUP func body size
; function body 227
00028bd: 00                                        ; func body size (guess)
00028be: 00                                        ; local decl count
00028bf: fd                                        ; prefix
00028c0: 02                                        ; v128.const
00028c1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00028d1: fd                                        ; prefix
00028d2: 02                                        ; v128.const
00028d3: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00028e3: fd                                        ; prefix
00028e4: 22                                        ; i16x8.eq
00028e5: 1a                                        ; drop
00028e6: 0b                                        ; end
00028bd: 29                                        ; FIXUP func body size
; function body 228
00028e7: 00                                        ; func body size (guess)
00028e8: 00                                        ; local decl count
00028e9: fd                                        ; prefix
00028ea: 02                                        ; v128.const
00028eb: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00028fb: fd                                        ; prefix
00028fc: 02                                        ; v128.const
00028fd: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000290d: fd                                        ; prefix
000290e: 23                                        ; i16x8.ne
000290f: 1a                                        ; drop
0002910: 0b                                        ; end
00028e7: 29                                        ; FIXUP func body size
; function body 229
0002911: 00                                        ; func body size (guess)
0002912: 00                                        ; local decl count
0002913: fd                                        ; prefix
0002914: 02                                        ; v128.const
0002915: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002925: fd                                        ; prefix
0002926: 02                                        ; v128.const
0002927: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002937: fd                                        ; prefix
0002938: 24                                        ; i16x8.lt_s
0002939: 1a                                        ; drop
000293a: 0b                                        ; end
0002911: 29                                        ; FIXUP func body size
; function body 230
000293b: 00                                        ; func body size (guess)
000293c: 00                                        ; local decl count
000293d: fd                                        ; prefix
000293e: 02                                        ; v128.const
000293f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000294f: fd                                        ; prefix
0002950: 02                                        ; v128.const
0002951: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002961: fd                                        ; prefix
0002962: 25                                        ; i16x8.lt_u
0002963: 1a                                        ; drop
0002964: 0b                                        ; end
000293b: 29                                        ; FIXUP func body size
; function body 231
0002965: 00                                        ; func body size (guess)
0002966: 00                                        ; local decl count
0002967: fd                                        ; prefix
0002968: 02                                        ; v128.const
0002969: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002979: fd                                        ; prefix
000297a: 02                                        ; v128.const
000297b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000298b: fd                                        ; prefix
000298c: 26                                        ; i16x8.gt_s
000298d: 1a                                        ; drop
000298e: 0b                                        ; end
0002965: 29                                        ; FIXUP func body size
; function body 232
000298f: 00                                        ; func body size (guess)
0002990: 00                                        ; local decl count
0002991: fd                                        ; prefix
0002992: 02                                        ; v128.const
0002993: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00029a3: fd                                        ; prefix
00029a4: 02                                        ; v128.const
00029a5: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00029b5: fd                                        ; prefix
00029b6: 27                                        ; i16x8.gt_u
00029b7: 1a                                        ; drop
00029b8: 0b                                        ; end
000298f: 29                                        ; FIXUP func body size
; function body 233
00029b9: 00                                        ; func body size (guess)
00029ba: 00                                        ; local decl count
00029bb: fd                                        ; prefix
00029bc: 02                                        ; v128.const
00029bd: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00029cd: fd                                        ; prefix
00029ce: 02                                        ; v128.const
00029cf: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00029df: fd                                        ; prefix
00029e0: 28                                        ; i16x8.le_s
00029e1: 1a                                        ; drop
00029e2: 0b                                        ; end
00029b9: 29                                        ; FIXUP func body size
; function body 234
00029e3: 00                                        ; func body size (guess)
00029e4: 00                                        ; local decl count
00029e5: fd                                        ; prefix
00029e6: 02                                        ; v128.const
00029e7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00029f7: fd                                        ; prefix
00029f8: 02                                        ; v128.const
00029f9: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002a09: fd                                        ; prefix
0002a0a: 29                                        ; i16x8.le_u
0002a0b: 1a                                        ; drop
0002a0c: 0b                                        ; end
00029e3: 29                                        ; FIXUP func body size
; function body 235
0002a0d: 00                                        ; func body size (guess)
0002a0e: 00                                        ; local decl count
0002a0f: fd                                        ; prefix
0002a10: 02                                        ; v128.const
0002a11: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002a21: fd                                        ; prefix
0002a22: 02                                        ; v128.const
0002a23: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002a33: fd                                        ; prefix
0002a34: 2a                                        ; i16x8.ge_s
0002a35: 1a                                        ; drop
0002a36: 0b                                        ; end
0002a0d: 29                                        ; FIXUP func body size
; function body 236
0002a37: 00                                        ; func body size (guess)
0002a38: 00                                        ; local decl count
0002a39: fd                                        ; prefix
0002a3a: 02                                        ; v128.const
0002a3b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002a4b: fd                                        ; prefix
0002a4c: 02                                        ; v128.const
0002a4d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002a5d: fd                                        ; prefix
0002a5e: 2b                                        ; i16x8.ge_u
0002a5f: 1a                                        ; drop
0002a60: 0b                                        ; end
0002a37: 29                                        ; FIXUP func body size
; function body 237
0002a61: 00                                        ; func body size (guess)
0002a62: 00                                        ; local decl count
0002a63: fd                                        ; prefix
0002a64: 02                                        ; v128.const
0002a65: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002a75: fd                                        ; prefix
0002a76: 02                                        ; v128.const
0002a77: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002a87: fd                                        ; prefix
0002a88: 2c                                        ; i32x4.eq
0002a89: 1a                                        ; drop
0002a8a: 0b                                        ; end
0002a61: 29                                        ; FIXUP func body size
; function body 238
0002a8b: 00                                        ; func body size (guess)
0002a8c: 00                                        ; local decl count
0002a8d: fd                                        ; prefix
0002a8e: 02                                        ; v128.const
0002a8f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002a9f: fd                                        ; prefix
0002aa0: 02                                        ; v128.const
0002aa1: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002ab1: fd                                        ; prefix
0002ab2: 2d                                        ; i32x4.ne
0002ab3: 1a                                        ; drop
0002ab4: 0b                                        ; end
0002a8b: 29                                        ; FIXUP func body size
; function body 239
0002ab5: 00                                        ; func body size (guess)
0002ab6: 00                                        ; local decl count
0002ab7: fd                                        ; prefix
0002ab8: 02                                        ; v128.const
0002ab9: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002ac9: fd                                        ; prefix
0002aca: 02                                        ; v128.const
0002acb: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002adb: fd                                        ; prefix
0002adc: 2e                                        ; i32x4.lt_s
0002add: 1a                                        ; drop
0002ade: 0b                                        ; end
0002ab5: 29                                        ; FIXUP func body size
; function body 240
0002adf: 00                                        ; func body size (guess)
0002ae0: 00                                        ; local decl count
0002ae1: fd                                        ; prefix
0002ae2: 02                                        ; v128.const
0002ae3: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002af3: fd                                        ; prefix
0002af4: 02                                        ; v128.const
0002af5: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002b05: fd                                        ; prefix
0002b06: 2f                                        ; i32x4.lt_u
0002b07: 1a                                        ; drop
0002b08: 0b                                        ; end
0002adf: 29                                        ; FIXUP func body size
; function body 241
0002b09: 00                                        ; func body size (guess)
0002b0a: 00                                        ; local decl count
0002b0b: fd                                        ; prefix
0002b0c: 02                                        ; v128.const
0002b0d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002b1d: fd                                        ; prefix
0002b1e: 02                                        ; v128.const
0002b1f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002b2f: fd                                        ; prefix
0002b30: 30                                        ; i32x4.gt_s
0002b31: 1a                                        ; drop
0002b32: 0b                                        ; end
0002b09: 29                                        ; FIXUP func body size
; function body 242
0002b33: 00                                        ; func body size (guess)
0002b34: 00                                        ; local decl count
0002b35: fd                                        ; prefix
0002b36: 02                                        ; v128.const
0002b37: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002b47: fd                                        ; prefix
0002b48: 02                                        ; v128.const
0002b49: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002b59: fd                                        ; prefix
0002b5a: 31                                        ; i32x4.gt_u
0002b5b: 1a                                        ; drop
0002b5c: 0b                                        ; end
0002b33: 29                                        ; FIXUP func body size
; function body 243
0002b5d: 00                                        ; func body size (guess)
0002b5e: 00                                        ; local decl count
0002b5f: fd                                        ; prefix
0002b60: 02                                        ; v128.const
0002b61: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002b71: fd                                        ; prefix
0002b72: 02                                        ; v128.const
0002b73: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002b83: fd                                        ; prefix
0002b84: 32                                        ; i32x4.le_s
0002b85: 1a                                        ; drop
0002b86: 0b                                        ; end
0002b5d: 29                                        ; FIXUP func body size
; function body 244
0002b87: 00                                        ; func body size (guess)
0002b88: 00                                        ; local decl count
0002b89: fd                                        ; prefix
0002b8a: 02                                        ; v128.const
0002b8b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002b9b: fd                                        ; prefix
0002b9c: 02                                        ; v128.const
0002b9d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002bad: fd                                        ; prefix
0002bae: 33                                        ; i32x4.le_u
0002baf: 1a                                        ; drop
0002bb0: 0b                                        ; end
0002b87: 29                                        ; FIXUP func body size
; function body 245
0002bb1: 00                                        ; func body size (guess)
0002bb2: 00                                        ; local decl count
0002bb3: fd                                        ; prefix
0002bb4: 02                                        ; v128.const
0002bb5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002bc5: fd                                        ; prefix
0002bc6: 02                                        ; v128.const
0002bc7: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002bd7: fd                                        ; prefix
0002bd8: 34                                        ; i32x4.ge_s
0002bd9: 1a                                        ; drop
0002bda: 0b                                        ; end
0002bb1: 29                                        ; FIXUP func body size
; function body 246
0002bdb: 00                                        ; func body size (guess)
0002bdc: 00                                        ; local decl count
0002bdd: fd                                        ; prefix
0002bde: 02                                        ; v128.const
0002bdf: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002bef: fd                                        ; prefix
0002bf0: 02                                        ; v128.const
0002bf1: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002c01: fd                                        ; prefix
0002c02: 35                                        ; i32x4.ge_u
0002c03: 1a                                        ; drop
0002c04: 0b                                        ; end
0002bdb: 29                                        ; FIXUP func body size
; function body 247
0002c05: 00                                        ; func body size (guess)
0002c06: 00                                        ; local decl count
0002c07: fd                                        ; prefix
0002c08: 02                                        ; v128.const
0002c09: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002c19: fd                                        ; prefix
0002c1a: 02                                        ; v128.const
0002c1b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002c2b: fd                                        ; prefix
0002c2c: 40                                        ; f32x4.eq
0002c2d: 1a                                        ; drop
0002c2e: 0b                                        ; end
0002c05: 29                                        ; FIXUP func body size
; function body 248
0002c2f: 00                                        ; func body size (guess)
0002c30: 00                                        ; local decl count
0002c31: fd                                        ; prefix
0002c32: 02                                        ; v128.const
0002c33: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002c43: fd                                        ; prefix
0002c44: 02                                        ; v128.const
0002c45: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002c55: fd                                        ; prefix
0002c56: 41                                        ; f32x4.ne
0002c57: 1a                                        ; drop
0002c58: 0b                                        ; end
0002c2f: 29                                        ; FIXUP func body size
; function body 249
0002c59: 00                                        ; func body size (guess)
0002c5a: 00                                        ; local decl count
0002c5b: fd                                        ; prefix
0002c5c: 02                                        ; v128.const
0002c5d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002c6d: fd                                        ; prefix
0002c6e: 02                                        ; v128.const
0002c6f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002c7f: fd                                        ; prefix
0002c80: 42                                        ; f32x4.lt
0002c81: 1a                                        ; drop
0002c82: 0b                                        ; end
0002c59: 29                                        ; FIXUP func body size
; function body 250
0002c83: 00                                        ; func body size (guess)
0002c84: 00                                        ; local decl count
0002c85: fd                                        ; prefix
0002c86: 02                                        ; v128.const
0002c87: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002c97: fd                                        ; prefix
0002c98: 02                                        ; v128.const
0002c99: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002ca9: fd                                        ; prefix
0002caa: 43                                        ; f32x4.gt
0002cab: 1a                                        ; drop
0002cac: 0b                                        ; end
0002c83: 29                                        ; FIXUP func body size
; function body 251
0002cad: 00                                        ; func body size (guess)
0002cae: 00                                        ; local decl count
0002caf: fd                                        ; prefix
0002cb0: 02                                        ; v128.const
0002cb1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002cc1: fd                                        ; prefix
0002cc2: 02                                        ; v128.const
0002cc3: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002cd3: fd                                        ; prefix
0002cd4: 44                                        ; f32x4.le
0002cd5: 1a                                        ; drop
0002cd6: 0b                                        ; end
0002cad: 29                                        ; FIXUP func body size
; function body 252
0002cd7: 00                                        ; func body size (guess)
0002cd8: 00                                        ; local decl count
0002cd9: fd                                        ; prefix
0002cda: 02                                        ; v128.const
0002cdb: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002ceb: fd                                        ; prefix
0002cec: 02                                        ; v128.const
0002ced: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002cfd: fd                                        ; prefix
0002cfe: 45                                        ; f32x4.ge
0002cff: 1a                                        ; drop
0002d00: 0b                                        ; end
0002cd7: 29                                        ; FIXUP func body size
; function body 253
0002d01: 00                                        ; func body size (guess)
0002d02: 00                                        ; local decl count
0002d03: fd                                        ; prefix
0002d04: 02                                        ; v128.const
0002d05: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002d15: fd                                        ; prefix
0002d16: 02                                        ; v128.const
0002d17: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002d27: fd                                        ; prefix
0002d28: 46                                        ; f64x2.eq
0002d29: 1a                                        ; drop
0002d2a: 0b                                        ; end
0002d01: 29                                        ; FIXUP func body size
; function body 254
0002d2b: 00                                        ; func body size (guess)
0002d2c: 00                                        ; local decl count
0002d2d: fd                                        ; prefix
0002d2e: 02                                        ; v128.const
0002d2f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002d3f: fd                                        ; prefix
0002d40: 02                                        ; v128.const
0002d41: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002d51: fd                                        ; prefix
0002d52: 47                                        ; f64x2.ne
0002d53: 1a                                        ; drop
0002d54: 0b                                        ; end
0002d2b: 29                                        ; FIXUP func body size
; function body 255
0002d55: 00                                        ; func body size (guess)
0002d56: 00                                        ; local decl count
0002d57: fd                                        ; prefix
0002d58: 02                                        ; v128.const
0002d59: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002d69: fd                                        ; prefix
0002d6a: 02                                        ; v128.const
0002d6b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002d7b: fd                                        ; prefix
0002d7c: 48                                        ; f64x2.lt
0002d7d: 1a                                        ; drop
0002d7e: 0b                                        ; end
0002d55: 29                                        ; FIXUP func body size
; function body 256
0002d7f: 00                                        ; func body size (guess)
0002d80: 00                                        ; local decl count
0002d81: fd                                        ; prefix
0002d82: 02                                        ; v128.const
0002d83: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002d93: fd                                        ; prefix
0002d94: 02                                        ; v128.const
0002d95: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002da5: fd                                        ; prefix
0002da6: 49                                        ; f64x2.gt
0002da7: 1a                                        ; drop
0002da8: 0b                                        ; end
0002d7f: 29                                        ; FIXUP func body size
; function body 257
0002da9: 00                                        ; func body size (guess)
0002daa: 00                                        ; local decl count
0002dab: fd                                        ; prefix
0002dac: 02                                        ; v128.const
0002dad: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002dbd: fd                                        ; prefix
0002dbe: 02                                        ; v128.const
0002dbf: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002dcf: fd                                        ; prefix
0002dd0: 4a                                        ; f64x2.le
0002dd1: 1a                                        ; drop
0002dd2: 0b                                        ; end
0002da9: 29                                        ; FIXUP func body size
; function body 258
0002dd3: 00                                        ; func body size (guess)
0002dd4: 00                                        ; local decl count
0002dd5: fd                                        ; prefix
0002dd6: 02                                        ; v128.const
0002dd7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002de7: fd                                        ; prefix
0002de8: 02                                        ; v128.const
0002de9: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002df9: fd                                        ; prefix
0002dfa: 4b                                        ; f64x2.ge
0002dfb: 1a                                        ; drop
0002dfc: 0b                                        ; end
0002dd3: 29                                        ; FIXUP func body size
; function body 259
0002dfd: 00                                        ; func body size (guess)
0002dfe: 00                                        ; local decl count
0002dff: fd                                        ; prefix
0002e00: 02                                        ; v128.const
0002e01: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002e11: fd                                        ; prefix
0002e12: 4c                                        ; v128.not
0002e13: 1a                                        ; drop
0002e14: 0b                                        ; end
0002dfd: 17                                        ; FIXUP func body size
; function body 260
0002e15: 00                                        ; func body size (guess)
0002e16: 00                                        ; local decl count
0002e17: fd                                        ; prefix
0002e18: 02                                        ; v128.const
0002e19: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002e29: fd                                        ; prefix
0002e2a: 02                                        ; v128.const
0002e2b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002e3b: fd                                        ; prefix
0002e3c: 4d                                        ; v128.and
0002e3d: 1a                                        ; drop
0002e3e: 0b                                        ; end
0002e15: 29                                        ; FIXUP func body size
; function body 261
0002e3f: 00                                        ; func body size (guess)
0002e40: 00                                        ; local decl count
0002e41: fd                                        ; prefix
0002e42: 02                                        ; v128.const
0002e43: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002e53: fd                                        ; prefix
0002e54: 02                                        ; v128.const
0002e55: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002e65: fd                                        ; prefix
0002e66: 4e                                        ; v128.or
0002e67: 1a                                        ; drop
0002e68: 0b                                        ; end
0002e3f: 29                                        ; FIXUP func body size
; function body 262
0002e69: 00                                        ; func body size (guess)
0002e6a: 00                                        ; local decl count
0002e6b: fd                                        ; prefix
0002e6c: 02                                        ; v128.const
0002e6d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002e7d: fd                                        ; prefix
0002e7e: 02                                        ; v128.const
0002e7f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002e8f: fd                                        ; prefix
0002e90: 4f                                        ; v128.xor
0002e91: 1a                                        ; drop
0002e92: 0b                                        ; end
0002e69: 29                                        ; FIXUP func body size
; function body 263
0002e93: 00                                        ; func body size (guess)
0002e94: 00                                        ; local decl count
0002e95: fd                                        ; prefix
0002e96: 02                                        ; v128.const
0002e97: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002ea7: fd                                        ; prefix
0002ea8: 02                                        ; v128.const
0002ea9: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002eb9: fd                                        ; prefix
0002eba: 02                                        ; v128.const
0002ebb: 0300 0000 0300 0000 0300 0000 0300 0000   ; v128 literal
0002ecb: fd                                        ; prefix
0002ecc: 50                                        ; v128.bitselect
0002ecd: 1a                                        ; drop
0002ece: 0b                                        ; end
0002e93: 3b                                        ; FIXUP func body size
; function body 264
0002ecf: 00                                        ; func body size (guess)
0002ed0: 00                                        ; local decl count
0002ed1: fd                                        ; prefix
0002ed2: 02                                        ; v128.const
0002ed3: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002ee3: fd                                        ; prefix
0002ee4: 51                                        ; i8x16.neg
0002ee5: 1a                                        ; drop
0002ee6: 0b                                        ; end
0002ecf: 17                                        ; FIXUP func body size
; function body 265
0002ee7: 00                                        ; func body size (guess)
0002ee8: 00                                        ; local decl count
0002ee9: fd                                        ; prefix
0002eea: 02                                        ; v128.const
0002eeb: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002efb: fd                                        ; prefix
0002efc: 52                                        ; i8x16.any_true
0002efd: 1a                                        ; drop
0002efe: 0b                                        ; end
0002ee7: 17                                        ; FIXUP func body size
; function body 266
0002eff: 00                                        ; func body size (guess)
0002f00: 00                                        ; local decl count
0002f01: fd                                        ; prefix
0002f02: 02                                        ; v128.const
0002f03: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002f13: fd                                        ; prefix
0002f14: 53                                        ; i8x16.all_true
0002f15: 1a                                        ; drop
0002f16: 0b                                        ; end
0002eff: 17                                        ; FIXUP func body size
; function body 267
0002f17: 00                                        ; func body size (guess)
0002f18: 00                                        ; local decl count
0002f19: fd                                        ; prefix
0002f1a: 02                                        ; v128.const
0002f1b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002f2b: 41                                        ; i32.const
0002f2c: 00                                        ; i32 literal
0002f2d: fd                                        ; prefix
0002f2e: 54                                        ; i8x16.shl
0002f2f: 1a                                        ; drop
0002f30: 0b                                        ; end
0002f17: 19                                        ; FIXUP func body size
; function body 268
0002f31: 00                                        ; func body size (guess)
0002f32: 00                                        ; local decl count
0002f33: fd                                        ; prefix
0002f34: 02                                        ; v128.const
0002f35: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002f45: 41                                        ; i32.const
0002f46: 00                                        ; i32 literal
0002f47: fd                                        ; prefix
0002f48: 55                                        ; i8x16.shr_s
0002f49: 1a                                        ; drop
0002f4a: 0b                                        ; end
0002f31: 19                                        ; FIXUP func body size
; function body 269
0002f4b: 00                                        ; func body size (guess)
0002f4c: 00                                        ; local decl count
0002f4d: fd                                        ; prefix
0002f4e: 02                                        ; v128.const
0002f4f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002f5f: 41                                        ; i32.const
0002f60: 00                                        ; i32 literal
0002f61: fd                                        ; prefix
0002f62: 56                                        ; i8x16.shr_u
0002f63: 1a                                        ; drop
0002f64: 0b                                        ; end
0002f4b: 19                                        ; FIXUP func body size
; function body 270
0002f65: 00                                        ; func body size (guess)
0002f66: 00                                        ; local decl count
0002f67: fd                                        ; prefix
0002f68: 02                                        ; v128.const
0002f69: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002f79: fd                                        ; prefix
0002f7a: 02                                        ; v128.const
0002f7b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002f8b: fd                                        ; prefix
0002f8c: 57                                        ; i8x16.add
0002f8d: 1a                                        ; drop
0002f8e: 0b                                        ; end
0002f65: 29                                        ; FIXUP func body size
; function body 271
0002f8f: 00                                        ; func body size (guess)
0002f90: 00                                        ; local decl count
0002f91: fd                                        ; prefix
0002f92: 02                                        ; v128.const
0002f93: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002fa3: fd                                        ; prefix
0002fa4: 02                                        ; v128.const
0002fa5: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002fb5: fd                                        ; prefix
0002fb6: 58                                        ; i8x16.add_saturate_s
0002fb7: 1a                                        ; drop
0002fb8: 0b                                        ; end
0002f8f: 29                                        ; FIXUP func body size
; function body 272
0002fb9: 00                                        ; func body size (guess)
0002fba: 00                                        ; local decl count
0002fbb: fd                                        ; prefix
0002fbc: 02                                        ; v128.const
0002fbd: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002fcd: fd                                        ; prefix
0002fce: 02                                        ; v128.const
0002fcf: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0002fdf: fd                                        ; prefix
0002fe0: 59                                        ; i8x16.add_saturate_u
0002fe1: 1a                                        ; drop
0002fe2: 0b                                        ; end
0002fb9: 29                                        ; FIXUP func body size
; function body 273
0002fe3: 00                                        ; func body size (guess)
0002fe4: 00                                        ; local decl count
0002fe5: fd                                        ; prefix
0002fe6: 02                                        ; v128.const
0002fe7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0002ff7: fd                                        ; prefix
0002ff8: 02                                        ; v128.const
0002ff9: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003009: fd                                        ; prefix
000300a: 5a                                        ; i8x16.sub
000300b: 1a                                        ; drop
000300c: 0b                                        ; end
0002fe3: 29                                        ; FIXUP func body size
; function body 274
000300d: 00                                        ; func body size (guess)
000300e: 00                                        ; local decl count
000300f: fd                                        ; prefix
0003010: 02                                        ; v128.const
0003011: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003021: fd                                        ; prefix
0003022: 02                                        ; v128.const
0003023: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003033: fd                                        ; prefix
0003034: 5b                                        ; i8x16.sub_saturate_s
0003035: 1a                                        ; drop
0003036: 0b                                        ; end
000300d: 29                                        ; FIXUP func body size
; function body 275
0003037: 00                                        ; func body size (guess)
0003038: 00                                        ; local decl count
0003039: fd                                        ; prefix
000303a: 02                                        ; v128.const
000303b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000304b: fd                                        ; prefix
000304c: 02                                        ; v128.const
000304d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000305d: fd                                        ; prefix
000305e: 5c                                        ; i8x16.sub_saturate_u
000305f: 1a                                        ; drop
0003060: 0b                                        ; end
0003037: 29                                        ; FIXUP func body size
; function body 276
0003061: 00                                        ; func body size (guess)
0003062: 00                                        ; local decl count
0003063: fd                                        ; prefix
0003064: 02                                        ; v128.const
0003065: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003075: fd                                        ; prefix
0003076: 02                                        ; v128.const
0003077: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003087: fd                                        ; prefix
0003088: 5d                                        ; i8x16.mul
0003089: 1a                                        ; drop
000308a: 0b                                        ; end
0003061: 29                                        ; FIXUP func body size
; function body 277
000308b: 00                                        ; func body size (guess)
000308c: 00                                        ; local decl count
000308d: fd                                        ; prefix
000308e: 02                                        ; v128.const
000308f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000309f: fd                                        ; prefix
00030a0: 62                                        ; i16x8.neg
00030a1: 1a                                        ; drop
00030a2: 0b                                        ; end
000308b: 17                                        ; FIXUP func body size
; function body 278
00030a3: 00                                        ; func body size (guess)
00030a4: 00                                        ; local decl count
00030a5: fd                                        ; prefix
00030a6: 02                                        ; v128.const
00030a7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00030b7: fd                                        ; prefix
00030b8: 63                                        ; i16x8.any_true
00030b9: 1a                                        ; drop
00030ba: 0b                                        ; end
00030a3: 17                                        ; FIXUP func body size
; function body 279
00030bb: 00                                        ; func body size (guess)
00030bc: 00                                        ; local decl count
00030bd: fd                                        ; prefix
00030be: 02                                        ; v128.const
00030bf: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00030cf: fd                                        ; prefix
00030d0: 64                                        ; i16x8.all_true
00030d1: 1a                                        ; drop
00030d2: 0b                                        ; end
00030bb: 17                                        ; FIXUP func body size
; function body 280
00030d3: 00                                        ; func body size (guess)
00030d4: 00                                        ; local decl count
00030d5: fd                                        ; prefix
00030d6: 02                                        ; v128.const
00030d7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00030e7: 41                                        ; i32.const
00030e8: 00                                        ; i32 literal
00030e9: fd                                        ; prefix
00030ea: 65                                        ; i16x8.shl
00030eb: 1a                                        ; drop
00030ec: 0b                                        ; end
00030d3: 19                                        ; FIXUP func body size
; function body 281
00030ed: 00                                        ; func body size (guess)
00030ee: 00                                        ; local decl count
00030ef: fd                                        ; prefix
00030f0: 02                                        ; v128.const
00030f1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003101: 41                                        ; i32.const
0003102: 00                                        ; i32 literal
0003103: fd                                        ; prefix
0003104: 66                                        ; i16x8.shr_s
0003105: 1a                                        ; drop
0003106: 0b                                        ; end
00030ed: 19                                        ; FIXUP func body size
; function body 282
0003107: 00                                        ; func body size (guess)
0003108: 00                                        ; local decl count
0003109: fd                                        ; prefix
000310a: 02                                        ; v128.const
000310b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000311b: 41                                        ; i32.const
000311c: 00                                        ; i32 literal
000311d: fd                                        ; prefix
000311e: 67                                        ; i16x8.shr_u
000311f: 1a                                        ; drop
0003120: 0b                                        ; end
0003107: 19                                        ; FIXUP func body size
; function body 283
0003121: 00                                        ; func body size (guess)
0003122: 00                                        ; local decl count
0003123: fd                                        ; prefix
0003124: 02                                        ; v128.const
0003125: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003135: fd                                        ; prefix
0003136: 02                                        ; v128.const
0003137: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003147: fd                                        ; prefix
0003148: 68                                        ; i16x8.add
0003149: 1a                                        ; drop
000314a: 0b                                        ; end
0003121: 29                                        ; FIXUP func body size
; function body 284
000314b: 00                                        ; func body size (guess)
000314c: 00                                        ; local decl count
000314d: fd                                        ; prefix
000314e: 02                                        ; v128.const
000314f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000315f: fd                                        ; prefix
0003160: 02                                        ; v128.const
0003161: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003171: fd                                        ; prefix
0003172: 69                                        ; i16x8.add_saturate_s
0003173: 1a                                        ; drop
0003174: 0b                                        ; end
000314b: 29                                        ; FIXUP func body size
; function body 285
0003175: 00                                        ; func body size (guess)
0003176: 00                                        ; local decl count
0003177: fd                                        ; prefix
0003178: 02                                        ; v128.const
0003179: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003189: fd                                        ; prefix
000318a: 02                                        ; v128.const
000318b: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000319b: fd                                        ; prefix
000319c: 6a                                        ; i16x8.add_saturate_u
000319d: 1a                                        ; drop
000319e: 0b                                        ; end
0003175: 29                                        ; FIXUP func body size
; function body 286
000319f: 00                                        ; func body size (guess)
00031a0: 00                                        ; local decl count
00031a1: fd                                        ; prefix
00031a2: 02                                        ; v128.const
00031a3: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00031b3: fd                                        ; prefix
00031b4: 02                                        ; v128.const
00031b5: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00031c5: fd                                        ; prefix
00031c6: 6b                                        ; i16x8.sub
00031c7: 1a                                        ; drop
00031c8: 0b                                        ; end
000319f: 29                                        ; FIXUP func body size
; function body 287
00031c9: 00                                        ; func body size (guess)
00031ca: 00                                        ; local decl count
00031cb: fd                                        ; prefix
00031cc: 02                                        ; v128.const
00031cd: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00031dd: fd                                        ; prefix
00031de: 02                                        ; v128.const
00031df: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00031ef: fd                                        ; prefix
00031f0: 6c                                        ; i16x8.sub_saturate_s
00031f1: 1a                                        ; drop
00031f2: 0b                                        ; end
00031c9: 29                                        ; FIXUP func body size
; function body 288
00031f3: 00                                        ; func body size (guess)
00031f4: 00                                        ; local decl count
00031f5: fd                                        ; prefix
00031f6: 02                                        ; v128.const
00031f7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003207: fd                                        ; prefix
0003208: 02                                        ; v128.const
0003209: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003219: fd                                        ; prefix
000321a: 6d                                        ; i16x8.sub_saturate_u
000321b: 1a                                        ; drop
000321c: 0b                                        ; end
00031f3: 29                                        ; FIXUP func body size
; function body 289
000321d: 00                                        ; func body size (guess)
000321e: 00                                        ; local decl count
000321f: fd                                        ; prefix
0003220: 02                                        ; v128.const
0003221: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003231: fd                                        ; prefix
0003232: 02                                        ; v128.const
0003233: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003243: fd                                        ; prefix
0003244: 6e                                        ; i16x8.mul
0003245: 1a                                        ; drop
0003246: 0b                                        ; end
000321d: 29                                        ; FIXUP func body size
; function body 290
0003247: 00                                        ; func body size (guess)
0003248: 00                                        ; local decl count
0003249: fd                                        ; prefix
000324a: 02                                        ; v128.const
000324b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000325b: fd                                        ; prefix
000325c: 73                                        ; i32x4.neg
000325d: 1a                                        ; drop
000325e: 0b                                        ; end
0003247: 17                                        ; FIXUP func body size
; function body 291
000325f: 00                                        ; func body size (guess)
0003260: 00                                        ; local decl count
0003261: fd                                        ; prefix
0003262: 02                                        ; v128.const
0003263: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003273: fd                                        ; prefix
0003274: 74                                        ; i32x4.any_true
0003275: 1a                                        ; drop
0003276: 0b                                        ; end
000325f: 17                                        ; FIXUP func body size
; function body 292
0003277: 00                                        ; func body size (guess)
0003278: 00                                        ; local decl count
0003279: fd                                        ; prefix
000327a: 02                                        ; v128.const
000327b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000328b: fd                                        ; prefix
000328c: 75                                        ; i32x4.all_true
000328d: 1a                                        ; drop
000328e: 0b                                        ; end
0003277: 17                                        ; FIXUP func body size
; function body 293
000328f: 00                                        ; func body size (guess)
0003290: 00                                        ; local decl count
0003291: fd                                        ; prefix
0003292: 02                                        ; v128.const
0003293: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00032a3: 41                                        ; i32.const
00032a4: 00                                        ; i32 literal
00032a5: fd                                        ; prefix
00032a6: 76                                        ; i32x4.shl
00032a7: 1a                                        ; drop
00032a8: 0b                                        ; end
000328f: 19                                        ; FIXUP func body size
; function body 294
00032a9: 00                                        ; func body size (guess)
00032aa: 00                                        ; local decl count
00032ab: fd                                        ; prefix
00032ac: 02                                        ; v128.const
00032ad: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00032bd: 41                                        ; i32.const
00032be: 00                                        ; i32 literal
00032bf: fd                                        ; prefix
00032c0: 77                                        ; i32x4.shr_s
00032c1: 1a                                        ; drop
00032c2: 0b                                        ; end
00032a9: 19                                        ; FIXUP func body size
; function body 295
00032c3: 00                                        ; func body size (guess)
00032c4: 00                                        ; local decl count
00032c5: fd                                        ; prefix
00032c6: 02                                        ; v128.const
00032c7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00032d7: 41                                        ; i32.const
00032d8: 00                                        ; i32 literal
00032d9: fd                                        ; prefix
00032da: 78                                        ; i32x4.shr_u
00032db: 1a                                        ; drop
00032dc: 0b                                        ; end
00032c3: 19                                        ; FIXUP func body size
; function body 296
00032dd: 00                                        ; func body size (guess)
00032de: 00                                        ; local decl count
00032df: fd                                        ; prefix
00032e0: 02                                        ; v128.const
00032e1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00032f1: fd                                        ; prefix
00032f2: 02                                        ; v128.const
00032f3: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003303: fd                                        ; prefix
0003304: 79                                        ; i32x4.add
0003305: 1a                                        ; drop
0003306: 0b                                        ; end
00032dd: 29                                        ; FIXUP func body size
; function body 297
0003307: 00                                        ; func body size (guess)
0003308: 00                                        ; local decl count
0003309: fd                                        ; prefix
000330a: 02                                        ; v128.const
000330b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000331b: fd                                        ; prefix
000331c: 02                                        ; v128.const
000331d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000332d: fd                                        ; prefix
000332e: 7c                                        ; i32x4.sub
000332f: 1a                                        ; drop
0003330: 0b                                        ; end
0003307: 29                                        ; FIXUP func body size
; function body 298
0003331: 00                                        ; func body size (guess)
0003332: 00                                        ; local decl count
0003333: fd                                        ; prefix
0003334: 02                                        ; v128.const
0003335: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003345: fd                                        ; prefix
0003346: 02                                        ; v128.const
0003347: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003357: fd                                        ; prefix
0003358: 7f                                        ; i32x4.mul
0003359: 1a                                        ; drop
000335a: 0b                                        ; end
0003331: 29                                        ; FIXUP func body size
; function body 299
000335b: 00                                        ; func body size (guess)
000335c: 00                                        ; local decl count
000335d: fd                                        ; prefix
000335e: 02                                        ; v128.const
000335f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000336f: fd                                        ; prefix
0003370: 8401                                      ; i64x2.neg
0003372: 1a                                        ; drop
0003373: 0b                                        ; end
000335b: 18                                        ; FIXUP func body size
; function body 300
0003374: 00                                        ; func body size (guess)
0003375: 00                                        ; local decl count
0003376: fd                                        ; prefix
0003377: 02                                        ; v128.const
0003378: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003388: fd                                        ; prefix
0003389: 8501                                      ; i64x2.any_true
000338b: 1a                                        ; drop
000338c: 0b                                        ; end
0003374: 18                                        ; FIXUP func body size
; function body 301
000338d: 00                                        ; func body size (guess)
000338e: 00                                        ; local decl count
000338f: fd                                        ; prefix
0003390: 02                                        ; v128.const
0003391: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00033a1: fd                                        ; prefix
00033a2: 8601                                      ; i64x2.all_true
00033a4: 1a                                        ; drop
00033a5: 0b                                        ; end
000338d: 18                                        ; FIXUP func body size
; function body 302
00033a6: 00                                        ; func body size (guess)
00033a7: 00                                        ; local decl count
00033a8: fd                                        ; prefix
00033a9: 02                                        ; v128.const
00033aa: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00033ba: 41                                        ; i32.const
00033bb: 00                                        ; i32 literal
00033bc: fd                                        ; prefix
00033bd: 8701                                      ; i64x2.shl
00033bf: 1a                                        ; drop
00033c0: 0b                                        ; end
00033a6: 1a                                        ; FIXUP func body size
; function body 303
00033c1: 00                                        ; func body size (guess)
00033c2: 00                                        ; local decl count
00033c3: fd                                        ; prefix
00033c4: 02                                        ; v128.const
00033c5: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00033d5: 41                                        ; i32.const
00033d6: 00                                        ; i32 literal
00033d7: fd                                        ; prefix
00033d8: 8801                                      ; i64x2.shr_s
00033da: 1a                                        ; drop
00033db: 0b                                        ; end
00033c1: 1a                                        ; FIXUP func body size
; function body 304
00033dc: 00                                        ; func body size (guess)
00033dd: 00                                        ; local decl count
00033de: fd                                        ; prefix
00033df: 02                                        ; v128.const
00033e0: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00033f0: 41                                        ; i32.const
00033f1: 00                                        ; i32 literal
00033f2: fd                                        ; prefix
00033f3: 8901                                      ; i64x2.shr_u
00033f5: 1a                                        ; drop
00033f6: 0b                                        ; end
00033dc: 1a                                        ; FIXUP func body size
; function body 305
00033f7: 00                                        ; func body size (guess)
00033f8: 00                                        ; local decl count
00033f9: fd                                        ; prefix
00033fa: 02                                        ; v128.const
00033fb: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000340b: fd                                        ; prefix
000340c: 02                                        ; v128.const
000340d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000341d: fd                                        ; prefix
000341e: 8a01                                      ; i64x2.add
0003420: 1a                                        ; drop
0003421: 0b                                        ; end
00033f7: 2a                                        ; FIXUP func body size
; function body 306
0003422: 00                                        ; func body size (guess)
0003423: 00                                        ; local decl count
0003424: fd                                        ; prefix
0003425: 02                                        ; v128.const
0003426: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003436: fd                                        ; prefix
0003437: 02                                        ; v128.const
0003438: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003448: fd                                        ; prefix
0003449: 8d01                                      ; i64x2.sub
000344b: 1a                                        ; drop
000344c: 0b                                        ; end
0003422: 2a                                        ; FIXUP func body size
; function body 307
000344d: 00                                        ; func body size (guess)
000344e: 00                                        ; local decl count
000344f: fd                                        ; prefix
0003450: 02                                        ; v128.const
0003451: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003461: fd                                        ; prefix
0003462: 9501                                      ; f32x4.abs
0003464: 1a                                        ; drop
0003465: 0b                                        ; end
000344d: 18                                        ; FIXUP func body size
; function body 308
0003466: 00                                        ; func body size (guess)
0003467: 00                                        ; local decl count
0003468: fd                                        ; prefix
0003469: 02                                        ; v128.const
000346a: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000347a: fd                                        ; prefix
000347b: 9601                                      ; f32x4.neg
000347d: 1a                                        ; drop
000347e: 0b                                        ; end
0003466: 18                                        ; FIXUP func body size
; function body 309
000347f: 00                                        ; func body size (guess)
0003480: 00                                        ; local decl count
0003481: fd                                        ; prefix
0003482: 02                                        ; v128.const
0003483: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003493: fd                                        ; prefix
0003494: 9701                                      ; f32x4.sqrt
0003496: 1a                                        ; drop
0003497: 0b                                        ; end
000347f: 18                                        ; FIXUP func body size
; function body 310
0003498: 00                                        ; func body size (guess)
0003499: 00                                        ; local decl count
000349a: fd                                        ; prefix
000349b: 02                                        ; v128.const
000349c: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00034ac: fd                                        ; prefix
00034ad: 02                                        ; v128.const
00034ae: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00034be: fd                                        ; prefix
00034bf: 9a01                                      ; f32x4.add
00034c1: 1a                                        ; drop
00034c2: 0b                                        ; end
0003498: 2a                                        ; FIXUP func body size
; function body 311
00034c3: 00                                        ; func body size (guess)
00034c4: 00                                        ; local decl count
00034c5: fd                                        ; prefix
00034c6: 02                                        ; v128.const
00034c7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00034d7: fd                                        ; prefix
00034d8: 02                                        ; v128.const
00034d9: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00034e9: fd                                        ; prefix
00034ea: 9b01                                      ; f32x4.sub
00034ec: 1a                                        ; drop
00034ed: 0b                                        ; end
00034c3: 2a                                        ; FIXUP func body size
; function body 312
00034ee: 00                                        ; func body size (guess)
00034ef: 00                                        ; local decl count
00034f0: fd                                        ; prefix
00034f1: 02                                        ; v128.const
00034f2: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003502: fd                                        ; prefix
0003503: 02                                        ; v128.const
0003504: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003514: fd                                        ; prefix
0003515: 9c01                                      ; f32x4.mul
0003517: 1a                                        ; drop
0003518: 0b                                        ; end
00034ee: 2a                                        ; FIXUP func body size
; function body 313
0003519: 00                                        ; func body size (guess)
000351a: 00                                        ; local decl count
000351b: fd                                        ; prefix
000351c: 02                                        ; v128.const
000351d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000352d: fd                                        ; prefix
000352e: 02                                        ; v128.const
000352f: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000353f: fd                                        ; prefix
0003540: 9d01                                      ; f32x4.div
0003542: 1a                                        ; drop
0003543: 0b                                        ; end
0003519: 2a                                        ; FIXUP func body size
; function body 314
0003544: 00                                        ; func body size (guess)
0003545: 00                                        ; local decl count
0003546: fd                                        ; prefix
0003547: 02                                        ; v128.const
0003548: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003558: fd                                        ; prefix
0003559: 02                                        ; v128.const
000355a: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000356a: fd                                        ; prefix
000356b: 9e01                                      ; f32x4.min
000356d: 1a                                        ; drop
000356e: 0b                                        ; end
0003544: 2a                                        ; FIXUP func body size
; function body 315
000356f: 00                                        ; func body size (guess)
0003570: 00                                        ; local decl count
0003571: fd                                        ; prefix
0003572: 02                                        ; v128.const
0003573: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003583: fd                                        ; prefix
0003584: 02                                        ; v128.const
0003585: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003595: fd                                        ; prefix
0003596: 9f01                                      ; f32x4.max
0003598: 1a                                        ; drop
0003599: 0b                                        ; end
000356f: 2a                                        ; FIXUP func body size
; function body 316
000359a: 00                                        ; func body size (guess)
000359b: 00                                        ; local decl count
000359c: fd                                        ; prefix
000359d: 02                                        ; v128.const
000359e: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00035ae: fd                                        ; prefix
00035af: a001                                      ; f64x2.abs
00035b1: 1a                                        ; drop
00035b2: 0b                                        ; end
000359a: 18                                        ; FIXUP func body size
; function body 317
00035b3: 00                                        ; func body size (guess)
00035b4: 00                                        ; local decl count
00035b5: fd                                        ; prefix
00035b6: 02                                        ; v128.const
00035b7: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00035c7: fd                                        ; prefix
00035c8: a101                                      ; f64x2.neg
00035ca: 1a                                        ; drop
00035cb: 0b                                        ; end
00035b3: 18                                        ; FIXUP func body size
; function body 318
00035cc: 00                                        ; func body size (guess)
00035cd: 00                                        ; local decl count
00035ce: fd                                        ; prefix
00035cf: 02                                        ; v128.const
00035d0: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00035e0: fd                                        ; prefix
00035e1: a201                                      ; f64x2.sqrt
00035e3: 1a                                        ; drop
00035e4: 0b                                        ; end
00035cc: 18                                        ; FIXUP func body size
; function body 319
00035e5: 00                                        ; func body size (guess)
00035e6: 00                                        ; local decl count
00035e7: fd                                        ; prefix
00035e8: 02                                        ; v128.const
00035e9: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00035f9: fd                                        ; prefix
00035fa: 02                                        ; v128.const
00035fb: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000360b: fd                                        ; prefix
000360c: a501                                      ; f64x2.add
000360e: 1a                                        ; drop
000360f: 0b                                        ; end
00035e5: 2a                                        ; FIXUP func body size
; function body 320
0003610: 00                                        ; func body size (guess)
0003611: 00                                        ; local decl count
0003612: fd                                        ; prefix
0003613: 02                                        ; v128.const
0003614: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003624: fd                                        ; prefix
0003625: 02                                        ; v128.const
0003626: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003636: fd                                        ; prefix
0003637: a601                                      ; f64x2.sub
0003639: 1a                                        ; drop
000363a: 0b                                        ; end
0003610: 2a                                        ; FIXUP func body size
; function body 321
000363b: 00                                        ; func body size (guess)
000363c: 00                                        ; local decl count
000363d: fd                                        ; prefix
000363e: 02                                        ; v128.const
000363f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000364f: fd                                        ; prefix
0003650: 02                                        ; v128.const
0003651: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003661: fd                                        ; prefix
0003662: a701                                      ; f64x2.mul
0003664: 1a                                        ; drop
0003665: 0b                                        ; end
000363b: 2a                                        ; FIXUP func body size
; function body 322
0003666: 00                                        ; func body size (guess)
0003667: 00                                        ; local decl count
0003668: fd                                        ; prefix
0003669: 02                                        ; v128.const
000366a: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000367a: fd                                        ; prefix
000367b: 02                                        ; v128.const
000367c: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
000368c: fd                                        ; prefix
000368d: a801                                      ; f64x2.div
000368f: 1a                                        ; drop
0003690: 0b                                        ; end
0003666: 2a                                        ; FIXUP func body size
; function body 323
0003691: 00                                        ; func body size (guess)
0003692: 00                                        ; local decl count
0003693: fd                                        ; prefix
0003694: 02                                        ; v128.const
0003695: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00036a5: fd                                        ; prefix
00036a6: 02                                        ; v128.const
00036a7: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00036b7: fd                                        ; prefix
00036b8: a901                                      ; f64x2.min
00036ba: 1a                                        ; drop
00036bb: 0b                                        ; end
0003691: 2a                                        ; FIXUP func body size
; function body 324
00036bc: 00                                        ; func body size (guess)
00036bd: 00                                        ; local decl count
00036be: fd                                        ; prefix
00036bf: 02                                        ; v128.const
00036c0: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00036d0: fd                                        ; prefix
00036d1: 02                                        ; v128.const
00036d2: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00036e2: fd                                        ; prefix
00036e3: aa01                                      ; f64x2.max
00036e5: 1a                                        ; drop
00036e6: 0b                                        ; end
00036bc: 2a                                        ; FIXUP func body size
; function body 325
00036e7: 00                                        ; func body size (guess)
00036e8: 00                                        ; local decl count
00036e9: fd                                        ; prefix
00036ea: 02                                        ; v128.const
00036eb: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00036fb: fd                                        ; prefix
00036fc: ab01                                      ; i32x4.trunc_sat_f32x4_s
00036fe: 1a                                        ; drop
00036ff: 0b                                        ; end
00036e7: 18                                        ; FIXUP func body size
; function body 326
0003700: 00                                        ; func body size (guess)
0003701: 00                                        ; local decl count
0003702: fd                                        ; prefix
0003703: 02                                        ; v128.const
0003704: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003714: fd                                        ; prefix
0003715: ac01                                      ; i32x4.trunc_sat_f32x4_u
0003717: 1a                                        ; drop
0003718: 0b                                        ; end
0003700: 18                                        ; FIXUP func body size
; function body 327
0003719: 00                                        ; func body size (guess)
000371a: 00                                        ; local decl count
000371b: fd                                        ; prefix
000371c: 02                                        ; v128.const
000371d: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000372d: fd                                        ; prefix
000372e: ad01                                      ; i64x2.trunc_sat_f64x2_s
0003730: 1a                                        ; drop
0003731: 0b                                        ; end
0003719: 18                                        ; FIXUP func body size
; function body 328
0003732: 00                                        ; func body size (guess)
0003733: 00                                        ; local decl count
0003734: fd                                        ; prefix
0003735: 02                                        ; v128.const
0003736: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003746: fd                                        ; prefix
0003747: ae01                                      ; i64x2.trunc_sat_f64x2_u
0003749: 1a                                        ; drop
000374a: 0b                                        ; end
0003732: 18                                        ; FIXUP func body size
; function body 329
000374b: 00                                        ; func body size (guess)
000374c: 00                                        ; local decl count
000374d: fd                                        ; prefix
000374e: 02                                        ; v128.const
000374f: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000375f: fd                                        ; prefix
0003760: af01                                      ; f32x4.convert_i32x4_s
0003762: 1a                                        ; drop
0003763: 0b                                        ; end
000374b: 18                                        ; FIXUP func body size
; function body 330
0003764: 00                                        ; func body size (guess)
0003765: 00                                        ; local decl count
0003766: fd                                        ; prefix
0003767: 02                                        ; v128.const
0003768: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003778: fd                                        ; prefix
0003779: b001                                      ; f32x4.convert_i32x4_u
000377b: 1a                                        ; drop
000377c: 0b                                        ; end
0003764: 18                                        ; FIXUP func body size
; function body 331
000377d: 00                                        ; func body size (guess)
000377e: 00                                        ; local decl count
000377f: fd                                        ; prefix
0003780: 02                                        ; v128.const
0003781: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003791: fd                                        ; prefix
0003792: b101                                      ; f64x2.convert_i64x2_s
0003794: 1a                                        ; drop
0003795: 0b                                        ; end
000377d: 18                                        ; FIXUP func body size
; function body 332
0003796: 00                                        ; func body size (guess)
0003797: 00                                        ; local decl count
0003798: fd                                        ; prefix
0003799: 02                                        ; v128.const
000379a: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00037aa: fd                                        ; prefix
00037ab: b201                                      ; f64x2.convert_i64x2_u
00037ad: 1a                                        ; drop
00037ae: 0b                                        ; end
0003796: 18                                        ; FIXUP func body size
; function body 333
00037af: 00                                        ; func body size (guess)
00037b0: 00                                        ; local decl count
00037b1: fd                                        ; prefix
00037b2: 02                                        ; v128.const
00037b3: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00037c3: fd                                        ; prefix
00037c4: 02                                        ; v128.const
00037c5: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00037d5: fd                                        ; prefix
00037d6: c001                                      ; v8x16.swizzle
00037d8: 1a                                        ; drop
00037d9: 0b                                        ; end
00037af: 2a                                        ; FIXUP func body size
; function body 334
00037da: 00                                        ; func body size (guess)
00037db: 00                                        ; local decl count
00037dc: fd                                        ; prefix
00037dd: 02                                        ; v128.const
00037de: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00037ee: fd                                        ; prefix
00037ef: 02                                        ; v128.const
00037f0: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003800: fd                                        ; prefix
0003801: c101                                      ; v8x16.shuffle
0003803: 0101 0101 0101 0101 0101 0101 0101 0101   ; Simd Lane[16] literal
0003813: 1a                                        ; drop
0003814: 0b                                        ; end
00037da: 3a                                        ; FIXUP func body size
; function body 335
0003815: 00                                        ; func body size (guess)
0003816: 00                                        ; local decl count
0003817: 41                                        ; i32.const
0003818: 01                                        ; i32 literal
0003819: fd                                        ; prefix
000381a: c201                                      ; i8x16.load_splat
000381c: 00                                        ; alignment
000381d: 00                                        ; load offset
000381e: 1a                                        ; drop
000381f: 0b                                        ; end
0003815: 0a                                        ; FIXUP func body size
; function body 336
0003820: 00                                        ; func body size (guess)
0003821: 00                                        ; local decl count
0003822: 41                                        ; i32.const
0003823: 01                                        ; i32 literal
0003824: fd                                        ; prefix
0003825: c301                                      ; i16x8.load_splat
0003827: 01                                        ; alignment
0003828: 00                                        ; load offset
0003829: 1a                                        ; drop
000382a: 0b                                        ; end
0003820: 0a                                        ; FIXUP func body size
; function body 337
000382b: 00                                        ; func body size (guess)
000382c: 00                                        ; local decl count
000382d: 41                                        ; i32.const
000382e: 01                                        ; i32 literal
000382f: fd                                        ; prefix
0003830: c401                                      ; i32x4.load_splat
0003832: 02                                        ; alignment
0003833: 00                                        ; load offset
0003834: 1a                                        ; drop
0003835: 0b                                        ; end
000382b: 0a                                        ; FIXUP func body size
; function body 338
0003836: 00                                        ; func body size (guess)
0003837: 00                                        ; local decl count
0003838: 41                                        ; i32.const
0003839: 01                                        ; i32 literal
000383a: fd                                        ; prefix
000383b: c501                                      ; i64x2.load_splat
000383d: 03                                        ; alignment
000383e: 00                                        ; load offset
000383f: 1a                                        ; drop
0003840: 0b                                        ; end
0003836: 0a                                        ; FIXUP func body size
; function body 339
0003841: 00                                        ; func body size (guess)
0003842: 00                                        ; local decl count
0003843: fd                                        ; prefix
0003844: 02                                        ; v128.const
0003845: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003855: fd                                        ; prefix
0003856: 02                                        ; v128.const
0003857: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003867: fd                                        ; prefix
0003868: c601                                      ; i8x16.narrow_i16x8_s
000386a: 1a                                        ; drop
000386b: 0b                                        ; end
0003841: 2a                                        ; FIXUP func body size
; function body 340
000386c: 00                                        ; func body size (guess)
000386d: 00                                        ; local decl count
000386e: fd                                        ; prefix
000386f: 02                                        ; v128.const
0003870: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003880: fd                                        ; prefix
0003881: 02                                        ; v128.const
0003882: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003892: fd                                        ; prefix
0003893: c701                                      ; i8x16.narrow_i16x8_u
0003895: 1a                                        ; drop
0003896: 0b                                        ; end
000386c: 2a                                        ; FIXUP func body size
; function body 341
0003897: 00                                        ; func body size (guess)
0003898: 00                                        ; local decl count
0003899: fd                                        ; prefix
000389a: 02                                        ; v128.const
000389b: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00038ab: fd                                        ; prefix
00038ac: 02                                        ; v128.const
00038ad: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00038bd: fd                                        ; prefix
00038be: c801                                      ; i16x8.narrow_i32x4_s
00038c0: 1a                                        ; drop
00038c1: 0b                                        ; end
0003897: 2a                                        ; FIXUP func body size
; function body 342
00038c2: 00                                        ; func body size (guess)
00038c3: 00                                        ; local decl count
00038c4: fd                                        ; prefix
00038c5: 02                                        ; v128.const
00038c6: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00038d6: fd                                        ; prefix
00038d7: 02                                        ; v128.const
00038d8: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
00038e8: fd                                        ; prefix
00038e9: c901                                      ; i16x8.narrow_i32x4_u
00038eb: 1a                                        ; drop
00038ec: 0b                                        ; end
00038c2: 2a                                        ; FIXUP func body size
; function body 343
00038ed: 00                                        ; func body size (guess)
00038ee: 00                                        ; local decl count
00038ef: fd                                        ; prefix
00038f0: 02                                        ; v128.const
00038f1: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003901: fd                                        ; prefix
0003902: ca01                                      ; i16x8.widen_low_i8x16_s
0003904: 1a                                        ; drop
0003905: 0b                                        ; end
00038ed: 18                                        ; FIXUP func body size
; function body 344
0003906: 00                                        ; func body size (guess)
0003907: 00                                        ; local decl count
0003908: fd                                        ; prefix
0003909: 02                                        ; v128.const
000390a: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000391a: fd                                        ; prefix
000391b: cb01                                      ; i16x8.widen_high_i8x16_s
000391d: 1a                                        ; drop
000391e: 0b                                        ; end
0003906: 18                                        ; FIXUP func body size
; function body 345
000391f: 00                                        ; func body size (guess)
0003920: 00                                        ; local decl count
0003921: fd                                        ; prefix
0003922: 02                                        ; v128.const
0003923: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003933: fd                                        ; prefix
0003934: cc01                                      ; i16x8.widen_low_i8x16_u
0003936: 1a                                        ; drop
0003937: 0b                                        ; end
000391f: 18                                        ; FIXUP func body size
; function body 346
0003938: 00                                        ; func body size (guess)
0003939: 00                                        ; local decl count
000393a: fd                                        ; prefix
000393b: 02                                        ; v128.const
000393c: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000394c: fd                                        ; prefix
000394d: cd01                                      ; i16x8.widen_high_i8x16_u
000394f: 1a                                        ; drop
0003950: 0b                                        ; end
0003938: 18                                        ; FIXUP func body size
; function body 347
0003951: 00                                        ; func body size (guess)
0003952: 00                                        ; local decl count
0003953: fd                                        ; prefix
0003954: 02                                        ; v128.const
0003955: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003965: fd                                        ; prefix
0003966: ce01                                      ; i32x4.widen_low_i16x8_s
0003968: 1a                                        ; drop
0003969: 0b                                        ; end
0003951: 18                                        ; FIXUP func body size
; function body 348
000396a: 00                                        ; func body size (guess)
000396b: 00                                        ; local decl count
000396c: fd                                        ; prefix
000396d: 02                                        ; v128.const
000396e: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
000397e: fd                                        ; prefix
000397f: cf01                                      ; i32x4.widen_high_i16x8_s
0003981: 1a                                        ; drop
0003982: 0b                                        ; end
000396a: 18                                        ; FIXUP func body size
; function body 349
0003983: 00                                        ; func body size (guess)
0003984: 00                                        ; local decl count
0003985: fd                                        ; prefix
0003986: 02                                        ; v128.const
0003987: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003997: fd                                        ; prefix
0003998: d001                                      ; i32x4.widen_low_i16x8_u
000399a: 1a                                        ; drop
000399b: 0b                                        ; end
0003983: 18                                        ; FIXUP func body size
; function body 350
000399c: 00                                        ; func body size (guess)
000399d: 00                                        ; local decl count
000399e: fd                                        ; prefix
000399f: 02                                        ; v128.const
00039a0: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
00039b0: fd                                        ; prefix
00039b1: d101                                      ; i32x4.widen_high_i16x8_u
00039b3: 1a                                        ; drop
00039b4: 0b                                        ; end
000399c: 18                                        ; FIXUP func body size
; function body 351
00039b5: 00                                        ; func body size (guess)
00039b6: 00                                        ; local decl count
00039b7: 41                                        ; i32.const
00039b8: 00                                        ; i32 literal
00039b9: fd                                        ; prefix
00039ba: d201                                      ; i16x8.load8x8_s
00039bc: 03                                        ; alignment
00039bd: 00                                        ; load offset
00039be: 1a                                        ; drop
00039bf: 0b                                        ; end
00039b5: 0a                                        ; FIXUP func body size
; function body 352
00039c0: 00                                        ; func body size (guess)
00039c1: 00                                        ; local decl count
00039c2: 41                                        ; i32.const
00039c3: 00                                        ; i32 literal
00039c4: fd                                        ; prefix
00039c5: d301                                      ; i16x8.load8x8_u
00039c7: 03                                        ; alignment
00039c8: 00                                        ; load offset
00039c9: 1a                                        ; drop
00039ca: 0b                                        ; end
00039c0: 0a                                        ; FIXUP func body size
; function body 353
00039cb: 00                                        ; func body size (guess)
00039cc: 00                                        ; local decl count
00039cd: 41                                        ; i32.const
00039ce: 00                                        ; i32 literal
00039cf: fd                                        ; prefix
00039d0: d401                                      ; i32x4.load16x4_s
00039d2: 03                                        ; alignment
00039d3: 00                                        ; load offset
00039d4: 1a                                        ; drop
00039d5: 0b                                        ; end
00039cb: 0a                                        ; FIXUP func body size
; function body 354
00039d6: 00                                        ; func body size (guess)
00039d7: 00                                        ; local decl count
00039d8: 41                                        ; i32.const
00039d9: 00                                        ; i32 literal
00039da: fd                                        ; prefix
00039db: d501                                      ; i32x4.load16x4_u
00039dd: 03                                        ; alignment
00039de: 00                                        ; load offset
00039df: 1a                                        ; drop
00039e0: 0b                                        ; end
00039d6: 0a                                        ; FIXUP func body size
; function body 355
00039e1: 00                                        ; func body size (guess)
00039e2: 00                                        ; local decl count
00039e3: 41                                        ; i32.const
00039e4: 00                                        ; i32 literal
00039e5: fd                                        ; prefix
00039e6: d601                                      ; i64x2.load32x2_s
00039e8: 03                                        ; alignment
00039e9: 00                                        ; load offset
00039ea: 1a                                        ; drop
00039eb: 0b                                        ; end
00039e1: 0a                                        ; FIXUP func body size
; function body 356
00039ec: 00                                        ; func body size (guess)
00039ed: 00                                        ; local decl count
00039ee: 41                                        ; i32.const
00039ef: 00                                        ; i32 literal
00039f0: fd                                        ; prefix
00039f1: d701                                      ; i64x2.load32x2_u
00039f3: 03                                        ; alignment
00039f4: 00                                        ; load offset
00039f5: 1a                                        ; drop
00039f6: 0b                                        ; end
00039ec: 0a                                        ; FIXUP func body size
; function body 357
00039f7: 00                                        ; func body size (guess)
00039f8: 00                                        ; local decl count
00039f9: fd                                        ; prefix
00039fa: 02                                        ; v128.const
00039fb: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003a0b: fd                                        ; prefix
0003a0c: 02                                        ; v128.const
0003a0d: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003a1d: fd                                        ; prefix
0003a1e: d801                                      ; v128.andnot
0003a20: 1a                                        ; drop
0003a21: 0b                                        ; end
00039f7: 2a                                        ; FIXUP func body size
; function body 358
0003a22: 00                                        ; func body size (guess)
0003a23: 00                                        ; local decl count
0003a24: fd                                        ; prefix
0003a25: 02                                        ; v128.const
0003a26: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003a36: fd                                        ; prefix
0003a37: 02                                        ; v128.const
0003a38: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003a48: fd                                        ; prefix
0003a49: d901                                      ; i8x16.avgr_u
0003a4b: 1a                                        ; drop
0003a4c: 0b                                        ; end
0003a22: 2a                                        ; FIXUP func body size
; function body 359
0003a4d: 00                                        ; func body size (guess)
0003a4e: 00                                        ; local decl count
0003a4f: fd                                        ; prefix
0003a50: 02                                        ; v128.const
0003a51: 0100 0000 0100 0000 0100 0000 0100 0000   ; v128 literal
0003a61: fd                                        ; prefix
0003a62: 02                                        ; v128.const
0003a63: 0200 0000 0200 0000 0200 0000 0200 0000   ; v128 literal
0003a73: fd                                        ; prefix
0003a74: da01                                      ; i16x8.avgr_u
0003a76: 1a                                        ; drop
0003a77: 0b                                        ; end
0003a4d: 2a                                        ; FIXUP func body size
; function body 360
0003a78: 00                                        ; func body size (guess)
0003a79: 00                                        ; local decl count
0003a7a: 41                                        ; i32.const
0003a7b: 01                                        ; i32 literal
0003a7c: 41                                        ; i32.const
0003a7d: 02                                        ; i32 literal
0003a7e: fe                                        ; prefix
0003a7f: 00                                        ; atomic.notify
0003a80: 02                                        ; alignment
0003a81: 03                                        ; memory offset
0003a82: 1a                                        ; drop
0003a83: 0b                                        ; end
0003a78: 0b                                        ; FIXUP func body size
; function body 361
0003a84: 00                                        ; func body size (guess)
0003a85: 00                                        ; local decl count
0003a86: 41                                        ; i32.const
0003a87: 01                                        ; i32 literal
0003a88: 41                                        ; i32.const
0003a89: 02                                        ; i32 literal
0003a8a: 42                                        ; i64.const
0003a8b: 03                                        ; i64 literal
0003a8c: fe                                        ; prefix
0003a8d: 01                                        ; i32.atomic.wait
0003a8e: 02                                        ; alignment
0003a8f: 03                                        ; memory offset
0003a90: 1a                                        ; drop
0003a91: 0b                                        ; end
0003a84: 0d                                        ; FIXUP func body size
; function body 362
0003a92: 00                                        ; func body size (guess)
0003a93: 00                                        ; local decl count
0003a94: 41                                        ; i32.const
0003a95: 01                                        ; i32 literal
0003a96: 42                                        ; i64.const
0003a97: 02                                        ; i64 literal
0003a98: 42                                        ; i64.const
0003a99: 03                                        ; i64 literal
0003a9a: fe                                        ; prefix
0003a9b: 02                                        ; i64.atomic.wait
0003a9c: 03                                        ; alignment
0003a9d: 03                                        ; memory offset
0003a9e: 1a                                        ; drop
0003a9f: 0b                                        ; end
0003a92: 0d                                        ; FIXUP func body size
; function body 363
0003aa0: 00                                        ; func body size (guess)
0003aa1: 00                                        ; local decl count
0003aa2: 41                                        ; i32.const
0003aa3: 01                                        ; i32 literal
0003aa4: fe                                        ; prefix
0003aa5: 10                                        ; i32.atomic.load
0003aa6: 02                                        ; alignment
0003aa7: 03                                        ; memory offset
0003aa8: 1a                                        ; drop
0003aa9: 0b                                        ; end
0003aa0: 09                                        ; FIXUP func body size
; function body 364
0003aaa: 00                                        ; func body size (guess)
0003aab: 00                                        ; local decl count
0003aac: 41                                        ; i32.const
0003aad: 01                                        ; i32 literal
0003aae: fe                                        ; prefix
0003aaf: 11                                        ; i64.atomic.load
0003ab0: 03                                        ; alignment
0003ab1: 07                                        ; memory offset
0003ab2: 1a                                        ; drop
0003ab3: 0b                                        ; end
0003aaa: 09                                        ; FIXUP func body size
; function body 365
0003ab4: 00                                        ; func body size (guess)
0003ab5: 00                                        ; local decl count
0003ab6: 41                                        ; i32.const
0003ab7: 01                                        ; i32 literal
0003ab8: fe                                        ; prefix
0003ab9: 12                                        ; i32.atomic.load8_u
0003aba: 00                                        ; alignment
0003abb: 03                                        ; memory offset
0003abc: 1a                                        ; drop
0003abd: 0b                                        ; end
0003ab4: 09                                        ; FIXUP func body size
; function body 366
0003abe: 00                                        ; func body size (guess)
0003abf: 00                                        ; local decl count
0003ac0: 41                                        ; i32.const
0003ac1: 01                                        ; i32 literal
0003ac2: fe                                        ; prefix
0003ac3: 13                                        ; i32.atomic.load16_u
0003ac4: 01                                        ; alignment
0003ac5: 03                                        ; memory offset
0003ac6: 1a                                        ; drop
0003ac7: 0b                                        ; end
0003abe: 09                                        ; FIXUP func body size
; function body 367
0003ac8: 00                                        ; func body size (guess)
0003ac9: 00                                        ; local decl count
0003aca: 41                                        ; i32.const
0003acb: 01                                        ; i32 literal
0003acc: fe                                        ; prefix
0003acd: 14                                        ; i64.atomic.load8_u
0003ace: 00                                        ; alignment
0003acf: 03                                        ; memory offset
0003ad0: 1a                                        ; drop
0003ad1: 0b                                        ; end
0003ac8: 09                                        ; FIXUP func body size
; function body 368
0003ad2: 00                                        ; func body size (guess)
0003ad3: 00                                        ; local decl count
0003ad4: 41                                        ; i32.const
0003ad5: 01                                        ; i32 literal
0003ad6: fe                                        ; prefix
0003ad7: 15                                        ; i64.atomic.load16_u
0003ad8: 01                                        ; alignment
0003ad9: 03                                        ; memory offset
0003ada: 1a                                        ; drop
0003adb: 0b                                        ; end
0003ad2: 09                                        ; FIXUP func body size
; function body 369
0003adc: 00                                        ; func body size (guess)
0003add: 00                                        ; local decl count
0003ade: 41                                        ; i32.const
0003adf: 01                                        ; i32 literal
0003ae0: fe                                        ; prefix
0003ae1: 16                                        ; i64.atomic.load32_u
0003ae2: 02                                        ; alignment
0003ae3: 03                                        ; memory offset
0003ae4: 1a                                        ; drop
0003ae5: 0b                                        ; end
0003adc: 09                                        ; FIXUP func body size
; function body 370
0003ae6: 00                                        ; func body size (guess)
0003ae7: 00                                        ; local decl count
0003ae8: 41                                        ; i32.const
0003ae9: 01                                        ; i32 literal
0003aea: 41                                        ; i32.const
0003aeb: 02                                        ; i32 literal
0003aec: fe                                        ; prefix
0003aed: 17                                        ; i32.atomic.store
0003aee: 02                                        ; alignment
0003aef: 03                                        ; memory offset
0003af0: 0b                                        ; end
0003ae6: 0a                                        ; FIXUP func body size
; function body 371
0003af1: 00                                        ; func body size (guess)
0003af2: 00                                        ; local decl count
0003af3: 41                                        ; i32.const
0003af4: 01                                        ; i32 literal
0003af5: 42                                        ; i64.const
0003af6: 02                                        ; i64 literal
0003af7: fe                                        ; prefix
0003af8: 18                                        ; i64.atomic.store
0003af9: 03                                        ; alignment
0003afa: 07                                        ; memory offset
0003afb: 0b                                        ; end
0003af1: 0a                                        ; FIXUP func body size
; function body 372
0003afc: 00                                        ; func body size (guess)
0003afd: 00                                        ; local decl count
0003afe: 41                                        ; i32.const
0003aff: 01                                        ; i32 literal
0003b00: 41                                        ; i32.const
0003b01: 02                                        ; i32 literal
0003b02: fe                                        ; prefix
0003b03: 19                                        ; i32.atomic.store8
0003b04: 00                                        ; alignment
0003b05: 03                                        ; memory offset
0003b06: 0b                                        ; end
0003afc: 0a                                        ; FIXUP func body size
; function body 373
0003b07: 00                                        ; func body size (guess)
0003b08: 00                                        ; local decl count
0003b09: 41                                        ; i32.const
0003b0a: 01                                        ; i32 literal
0003b0b: 41                                        ; i32.const
0003b0c: 02                                        ; i32 literal
0003b0d: fe                                        ; prefix
0003b0e: 1a                                        ; i32.atomic.store16
0003b0f: 01                                        ; alignment
0003b10: 03                                        ; memory offset
0003b11: 0b                                        ; end
0003b07: 0a                                        ; FIXUP func body size
; function body 374
0003b12: 00                                        ; func body size (guess)
0003b13: 00                                        ; local decl count
0003b14: 41                                        ; i32.const
0003b15: 01                                        ; i32 literal
0003b16: 42                                        ; i64.const
0003b17: 02                                        ; i64 literal
0003b18: fe                                        ; prefix
0003b19: 1b                                        ; i64.atomic.store8
0003b1a: 00                                        ; alignment
0003b1b: 03                                        ; memory offset
0003b1c: 0b                                        ; end
0003b12: 0a                                        ; FIXUP func body size
; function body 375
0003b1d: 00                                        ; func body size (guess)
0003b1e: 00                                        ; local decl count
0003b1f: 41                                        ; i32.const
0003b20: 01                                        ; i32 literal
0003b21: 42                                        ; i64.const
0003b22: 02                                        ; i64 literal
0003b23: fe                                        ; prefix
0003b24: 1c                                        ; i64.atomic.store16
0003b25: 01                                        ; alignment
0003b26: 03                                        ; memory offset
0003b27: 0b                                        ; end
0003b1d: 0a                                        ; FIXUP func body size
; function body 376
0003b28: 00                                        ; func body size (guess)
0003b29: 00                                        ; local decl count
0003b2a: 41                                        ; i32.const
0003b2b: 01                                        ; i32 literal
0003b2c: 42                                        ; i64.const
0003b2d: 02                                        ; i64 literal
0003b2e: fe                                        ; prefix
0003b2f: 1d                                        ; i64.atomic.store32
0003b30: 02                                        ; alignment
0003b31: 03                                        ; memory offset
0003b32: 0b                                        ; end
0003b28: 0a                                        ; FIXUP func body size
; function body 377
0003b33: 00                                        ; func body size (guess)
0003b34: 00                                        ; local decl count
0003b35: 41                                        ; i32.const
0003b36: 01                                        ; i32 literal
0003b37: 41                                        ; i32.const
0003b38: 02                                        ; i32 literal
0003b39: fe                                        ; prefix
0003b3a: 1e                                        ; i32.atomic.rmw.add
0003b3b: 02                                        ; alignment
0003b3c: 03                                        ; memory offset
0003b3d: 1a                                        ; drop
0003b3e: 0b                                        ; end
0003b33: 0b                                        ; FIXUP func body size
; function body 378
0003b3f: 00                                        ; func body size (guess)
0003b40: 00                                        ; local decl count
0003b41: 41                                        ; i32.const
0003b42: 01                                        ; i32 literal
0003b43: 42                                        ; i64.const
0003b44: 02                                        ; i64 literal
0003b45: fe                                        ; prefix
0003b46: 1f                                        ; i64.atomic.rmw.add
0003b47: 03                                        ; alignment
0003b48: 07                                        ; memory offset
0003b49: 1a                                        ; drop
0003b4a: 0b                                        ; end
0003b3f: 0b                                        ; FIXUP func body size
; function body 379
0003b4b: 00                                        ; func body size (guess)
0003b4c: 00                                        ; local decl count
0003b4d: 41                                        ; i32.const
0003b4e: 01                                        ; i32 literal
0003b4f: 41                                        ; i32.const
0003b50: 02                                        ; i32 literal
0003b51: fe                                        ; prefix
0003b52: 20                                        ; i32.atomic.rmw8.add_u
0003b53: 00                                        ; alignment
0003b54: 03                                        ; memory offset
0003b55: 1a                                        ; drop
0003b56: 0b                                        ; end
0003b4b: 0b                                        ; FIXUP func body size
; function body 380
0003b57: 00                                        ; func body size (guess)
0003b58: 00                                        ; local decl count
0003b59: 41                                        ; i32.const
0003b5a: 01                                        ; i32 literal
0003b5b: 41                                        ; i32.const
0003b5c: 02                                        ; i32 literal
0003b5d: fe                                        ; prefix
0003b5e: 21                                        ; i32.atomic.rmw16.add_u
0003b5f: 01                                        ; alignment
0003b60: 03                                        ; memory offset
0003b61: 1a                                        ; drop
0003b62: 0b                                        ; end
0003b57: 0b                                        ; FIXUP func body size
; function body 381
0003b63: 00                                        ; func body size (guess)
0003b64: 00                                        ; local decl count
0003b65: 41                                        ; i32.const
0003b66: 01                                        ; i32 literal
0003b67: 42                                        ; i64.const
0003b68: 02                                        ; i64 literal
0003b69: fe                                        ; prefix
0003b6a: 22                                        ; i64.atomic.rmw8.add_u
0003b6b: 00                                        ; alignment
0003b6c: 03                                        ; memory offset
0003b6d: 1a                                        ; drop
0003b6e: 0b                                        ; end
0003b63: 0b                                        ; FIXUP func body size
; function body 382
0003b6f: 00                                        ; func body size (guess)
0003b70: 00                                        ; local decl count
0003b71: 41                                        ; i32.const
0003b72: 01                                        ; i32 literal
0003b73: 42                                        ; i64.const
0003b74: 02                                        ; i64 literal
0003b75: fe                                        ; prefix
0003b76: 23                                        ; i64.atomic.rmw16.add_u
0003b77: 01                                        ; alignment
0003b78: 03                                        ; memory offset
0003b79: 1a                                        ; drop
0003b7a: 0b                                        ; end
0003b6f: 0b                                        ; FIXUP func body size
; function body 383
0003b7b: 00                                        ; func body size (guess)
0003b7c: 00                                        ; local decl count
0003b7d: 41                                        ; i32.const
0003b7e: 01                                        ; i32 literal
0003b7f: 42                                        ; i64.const
0003b80: 02                                        ; i64 literal
0003b81: fe                                        ; prefix
0003b82: 24                                        ; i64.atomic.rmw32.add_u
0003b83: 02                                        ; alignment
0003b84: 03                                        ; memory offset
0003b85: 1a                                        ; drop
0003b86: 0b                                        ; end
0003b7b: 0b                                        ; FIXUP func body size
; function body 384
0003b87: 00                                        ; func body size (guess)
0003b88: 00                                        ; local decl count
0003b89: 41                                        ; i32.const
0003b8a: 01                                        ; i32 literal
0003b8b: 41                                        ; i32.const
0003b8c: 02                                        ; i32 literal
0003b8d: fe                                        ; prefix
0003b8e: 25                                        ; i32.atomic.rmw.sub
0003b8f: 02                                        ; alignment
0003b90: 03                                        ; memory offset
0003b91: 1a                                        ; drop
0003b92: 0b                                        ; end
0003b87: 0b                                        ; FIXUP func body size
; function body 385
0003b93: 00                                        ; func body size (guess)
0003b94: 00                                        ; local decl count
0003b95: 41                                        ; i32.const
0003b96: 01                                        ; i32 literal
0003b97: 42                                        ; i64.const
0003b98: 02                                        ; i64 literal
0003b99: fe                                        ; prefix
0003b9a: 26                                        ; i64.atomic.rmw.sub
0003b9b: 03                                        ; alignment
0003b9c: 07                                        ; memory offset
0003b9d: 1a                                        ; drop
0003b9e: 0b                                        ; end
0003b93: 0b                                        ; FIXUP func body size
; function body 386
0003b9f: 00                                        ; func body size (guess)
0003ba0: 00                                        ; local decl count
0003ba1: 41                                        ; i32.const
0003ba2: 01                                        ; i32 literal
0003ba3: 41                                        ; i32.const
0003ba4: 02                                        ; i32 literal
0003ba5: fe                                        ; prefix
0003ba6: 27                                        ; i32.atomic.rmw8.sub_u
0003ba7: 00                                        ; alignment
0003ba8: 03                                        ; memory offset
0003ba9: 1a                                        ; drop
0003baa: 0b                                        ; end
0003b9f: 0b                                        ; FIXUP func body size
; function body 387
0003bab: 00                                        ; func body size (guess)
0003bac: 00                                        ; local decl count
0003bad: 41                                        ; i32.const
0003bae: 01                                        ; i32 literal
0003baf: 41                                        ; i32.const
0003bb0: 02                                        ; i32 literal
0003bb1: fe                                        ; prefix
0003bb2: 28                                        ; i32.atomic.rmw16.sub_u
0003bb3: 01                                        ; alignment
0003bb4: 03                                        ; memory offset
0003bb5: 1a                                        ; drop
0003bb6: 0b                                        ; end
0003bab: 0b                                        ; FIXUP func body size
; function body 388
0003bb7: 00                                        ; func body size (guess)
0003bb8: 00                                        ; local decl count
0003bb9: 41                                        ; i32.const
0003bba: 01                                        ; i32 literal
0003bbb: 42                                        ; i64.const
0003bbc: 02                                        ; i64 literal
0003bbd: fe                                        ; prefix
0003bbe: 29                                        ; i64.atomic.rmw8.sub_u
0003bbf: 00                                        ; alignment
0003bc0: 03                                        ; memory offset
0003bc1: 1a                                        ; drop
0003bc2: 0b                                        ; end
0003bb7: 0b                                        ; FIXUP func body size
; function body 389
0003bc3: 00                                        ; func body size (guess)
0003bc4: 00                                        ; local decl count
0003bc5: 41                                        ; i32.const
0003bc6: 01                                        ; i32 literal
0003bc7: 42                                        ; i64.const
0003bc8: 02                                        ; i64 literal
0003bc9: fe                                        ; prefix
0003bca: 2a                                        ; i64.atomic.rmw16.sub_u
0003bcb: 01                                        ; alignment
0003bcc: 03                                        ; memory offset
0003bcd: 1a                                        ; drop
0003bce: 0b                                        ; end
0003bc3: 0b                                        ; FIXUP func body size
; function body 390
0003bcf: 00                                        ; func body size (guess)
0003bd0: 00                                        ; local decl count
0003bd1: 41                                        ; i32.const
0003bd2: 01                                        ; i32 literal
0003bd3: 42                                        ; i64.const
0003bd4: 02                                        ; i64 literal
0003bd5: fe                                        ; prefix
0003bd6: 2b                                        ; i64.atomic.rmw32.sub_u
0003bd7: 02                                        ; alignment
0003bd8: 03                                        ; memory offset
0003bd9: 1a                                        ; drop
0003bda: 0b                                        ; end
0003bcf: 0b                                        ; FIXUP func body size
; function body 391
0003bdb: 00                                        ; func body size (guess)
0003bdc: 00                                        ; local decl count
0003bdd: 41                                        ; i32.const
0003bde: 01                                        ; i32 literal
0003bdf: 41                                        ; i32.const
0003be0: 02                                        ; i32 literal
0003be1: fe                                        ; prefix
0003be2: 2c                                        ; i32.atomic.rmw.and
0003be3: 02                                        ; alignment
0003be4: 03                                        ; memory offset
0003be5: 1a                                        ; drop
0003be6: 0b                                        ; end
0003bdb: 0b                                        ; FIXUP func body size
; function body 392
0003be7: 00                                        ; func body size (guess)
0003be8: 00                                        ; local decl count
0003be9: 41                                        ; i32.const
0003bea: 01                                        ; i32 literal
0003beb: 42                                        ; i64.const
0003bec: 02                                        ; i64 literal
0003bed: fe                                        ; prefix
0003bee: 2d                                        ; i64.atomic.rmw.and
0003bef: 03                                        ; alignment
0003bf0: 07                                        ; memory offset
0003bf1: 1a                                        ; drop
0003bf2: 0b                                        ; end
0003be7: 0b                                        ; FIXUP func body size
; function body 393
0003bf3: 00                                        ; func body size (guess)
0003bf4: 00                                        ; local decl count
0003bf5: 41                                        ; i32.const
0003bf6: 01                                        ; i32 literal
0003bf7: 41                                        ; i32.const
0003bf8: 02                                        ; i32 literal
0003bf9: fe                                        ; prefix
0003bfa: 2e                                        ; i32.atomic.rmw8.and_u
0003bfb: 00                                        ; alignment
0003bfc: 03                                        ; memory offset
0003bfd: 1a                                        ; drop
0003bfe: 0b                                        ; end
0003bf3: 0b                                        ; FIXUP func body size
; function body 394
0003bff: 00                                        ; func body size (guess)
0003c00: 00                                        ; local decl count
0003c01: 41                                        ; i32.const
0003c02: 01                                        ; i32 literal
0003c03: 41                                        ; i32.const
0003c04: 02                                        ; i32 literal
0003c05: fe                                        ; prefix
0003c06: 2f                                        ; i32.atomic.rmw16.and_u
0003c07: 01                                        ; alignment
0003c08: 03                                        ; memory offset
0003c09: 1a                                        ; drop
0003c0a: 0b                                        ; end
0003bff: 0b                                        ; FIXUP func body size
; function body 395
0003c0b: 00                                        ; func body size (guess)
0003c0c: 00                                        ; local decl count
0003c0d: 41                                        ; i32.const
0003c0e: 01                                        ; i32 literal
0003c0f: 42                                        ; i64.const
0003c10: 02                                        ; i64 literal
0003c11: fe                                        ; prefix
0003c12: 30                                        ; i64.atomic.rmw8.and_u
0003c13: 00                                        ; alignment
0003c14: 03                                        ; memory offset
0003c15: 1a                                        ; drop
0003c16: 0b                                        ; end
0003c0b: 0b                                        ; FIXUP func body size
; function body 396
0003c17: 00                                        ; func body size (guess)
0003c18: 00                                        ; local decl count
0003c19: 41                                        ; i32.const
0003c1a: 01                                        ; i32 literal
0003c1b: 42                                        ; i64.const
0003c1c: 02                                        ; i64 literal
0003c1d: fe                                        ; prefix
0003c1e: 31                                        ; i64.atomic.rmw16.and_u
0003c1f: 01                                        ; alignment
0003c20: 03                                        ; memory offset
0003c21: 1a                                        ; drop
0003c22: 0b                                        ; end
0003c17: 0b                                        ; FIXUP func body size
; function body 397
0003c23: 00                                        ; func body size (guess)
0003c24: 00                                        ; local decl count
0003c25: 41                                        ; i32.const
0003c26: 01                                        ; i32 literal
0003c27: 42                                        ; i64.const
0003c28: 02                                        ; i64 literal
0003c29: fe                                        ; prefix
0003c2a: 32                                        ; i64.atomic.rmw32.and_u
0003c2b: 02                                        ; alignment
0003c2c: 03                                        ; memory offset
0003c2d: 1a                                        ; drop
0003c2e: 0b                                        ; end
0003c23: 0b                                        ; FIXUP func body size
; function body 398
0003c2f: 00                                        ; func body size (guess)
0003c30: 00                                        ; local decl count
0003c31: 41                                        ; i32.const
0003c32: 01                                        ; i32 literal
0003c33: 41                                        ; i32.const
0003c34: 02                                        ; i32 literal
0003c35: fe                                        ; prefix
0003c36: 33                                        ; i32.atomic.rmw.or
0003c37: 02                                        ; alignment
0003c38: 03                                        ; memory offset
0003c39: 1a                                        ; drop
0003c3a: 0b                                        ; end
0003c2f: 0b                                        ; FIXUP func body size
; function body 399
0003c3b: 00                                        ; func body size (guess)
0003c3c: 00                                        ; local decl count
0003c3d: 41                                        ; i32.const
0003c3e: 01                                        ; i32 literal
0003c3f: 42                                        ; i64.const
0003c40: 02                                        ; i64 literal
0003c41: fe                                        ; prefix
0003c42: 34                                        ; i64.atomic.rmw.or
0003c43: 03                                        ; alignment
0003c44: 07                                        ; memory offset
0003c45: 1a                                        ; drop
0003c46: 0b                                        ; end
0003c3b: 0b                                        ; FIXUP func body size
; function body 400
0003c47: 00                                        ; func body size (guess)
0003c48: 00                                        ; local decl count
0003c49: 41                                        ; i32.const
0003c4a: 01                                        ; i32 literal
0003c4b: 41                                        ; i32.const
0003c4c: 02                                        ; i32 literal
0003c4d: fe                                        ; prefix
0003c4e: 35                                        ; i32.atomic.rmw8.or_u
0003c4f: 00                                        ; alignment
0003c50: 03                                        ; memory offset
0003c51: 1a                                        ; drop
0003c52: 0b                                        ; end
0003c47: 0b                                        ; FIXUP func body size
; function body 401
0003c53: 00                                        ; func body size (guess)
0003c54: 00                                        ; local decl count
0003c55: 41                                        ; i32.const
0003c56: 01                                        ; i32 literal
0003c57: 41                                        ; i32.const
0003c58: 02                                        ; i32 literal
0003c59: fe                                        ; prefix
0003c5a: 36                                        ; i32.atomic.rmw16.or_u
0003c5b: 01                                        ; alignment
0003c5c: 03                                        ; memory offset
0003c5d: 1a                                        ; drop
0003c5e: 0b                                        ; end
0003c53: 0b                                        ; FIXUP func body size
; function body 402
0003c5f: 00                                        ; func body size (guess)
0003c60: 00                                        ; local decl count
0003c61: 41                                        ; i32.const
0003c62: 01                                        ; i32 literal
0003c63: 42                                        ; i64.const
0003c64: 02                                        ; i64 literal
0003c65: fe                                        ; prefix
0003c66: 37                                        ; i64.atomic.rmw8.or_u
0003c67: 00                                        ; alignment
0003c68: 03                                        ; memory offset
0003c69: 1a                                        ; drop
0003c6a: 0b                                        ; end
0003c5f: 0b                                        ; FIXUP func body size
; function body 403
0003c6b: 00                                        ; func body size (guess)
0003c6c: 00                                        ; local decl count
0003c6d: 41                                        ; i32.const
0003c6e: 01                                        ; i32 literal
0003c6f: 42                                        ; i64.const
0003c70: 02                                        ; i64 literal
0003c71: fe                                        ; prefix
0003c72: 38                                        ; i64.atomic.rmw16.or_u
0003c73: 01                                        ; alignment
0003c74: 03                                        ; memory offset
0003c75: 1a                                        ; drop
0003c76: 0b                                        ; end
0003c6b: 0b                                        ; FIXUP func body size
; function body 404
0003c77: 00                                        ; func body size (guess)
0003c78: 00                                        ; local decl count
0003c79: 41                                        ; i32.const
0003c7a: 01                                        ; i32 literal
0003c7b: 42                                        ; i64.const
0003c7c: 02                                        ; i64 literal
0003c7d: fe                                        ; prefix
0003c7e: 39                                        ; i64.atomic.rmw32.or_u
0003c7f: 02                                        ; alignment
0003c80: 03                                        ; memory offset
0003c81: 1a                                        ; drop
0003c82: 0b                                        ; end
0003c77: 0b                                        ; FIXUP func body size
; function body 405
0003c83: 00                                        ; func body size (guess)
0003c84: 00                                        ; local decl count
0003c85: 41                                        ; i32.const
0003c86: 01                                        ; i32 literal
0003c87: 41                                        ; i32.const
0003c88: 02                                        ; i32 literal
0003c89: fe                                        ; prefix
0003c8a: 3a                                        ; i32.atomic.rmw.xor
0003c8b: 02                                        ; alignment
0003c8c: 03                                        ; memory offset
0003c8d: 1a                                        ; drop
0003c8e: 0b                                        ; end
0003c83: 0b                                        ; FIXUP func body size
; function body 406
0003c8f: 00                                        ; func body size (guess)
0003c90: 00                                        ; local decl count
0003c91: 41                                        ; i32.const
0003c92: 01                                        ; i32 literal
0003c93: 42                                        ; i64.const
0003c94: 02                                        ; i64 literal
0003c95: fe                                        ; prefix
0003c96: 3b                                        ; i64.atomic.rmw.xor
0003c97: 03                                        ; alignment
0003c98: 07                                        ; memory offset
0003c99: 1a                                        ; drop
0003c9a: 0b                                        ; end
0003c8f: 0b                                        ; FIXUP func body size
; function body 407
0003c9b: 00                                        ; func body size (guess)
0003c9c: 00                                        ; local decl count
0003c9d: 41                                        ; i32.const
0003c9e: 01                                        ; i32 literal
0003c9f: 41                                        ; i32.const
0003ca0: 02                                        ; i32 literal
0003ca1: fe                                        ; prefix
0003ca2: 3c                                        ; i32.atomic.rmw8.xor_u
0003ca3: 00                                        ; alignment
0003ca4: 03                                        ; memory offset
0003ca5: 1a                                        ; drop
0003ca6: 0b                                        ; end
0003c9b: 0b                                        ; FIXUP func body size
; function body 408
0003ca7: 00                                        ; func body size (guess)
0003ca8: 00                                        ; local decl count
0003ca9: 41                                        ; i32.const
0003caa: 01                                        ; i32 literal
0003cab: 41                                        ; i32.const
0003cac: 02                                        ; i32 literal
0003cad: fe                                        ; prefix
0003cae: 3d                                        ; i32.atomic.rmw16.xor_u
0003caf: 01                                        ; alignment
0003cb0: 03                                        ; memory offset
0003cb1: 1a                                        ; drop
0003cb2: 0b                                        ; end
0003ca7: 0b                                        ; FIXUP func body size
; function body 409
0003cb3: 00                                        ; func body size (guess)
0003cb4: 00                                        ; local decl count
0003cb5: 41                                        ; i32.const
0003cb6: 01                                        ; i32 literal
0003cb7: 42                                        ; i64.const
0003cb8: 02                                        ; i64 literal
0003cb9: fe                                        ; prefix
0003cba: 3e                                        ; i64.atomic.rmw8.xor_u
0003cbb: 00                                        ; alignment
0003cbc: 03                                        ; memory offset
0003cbd: 1a                                        ; drop
0003cbe: 0b                                        ; end
0003cb3: 0b                                        ; FIXUP func body size
; function body 410
0003cbf: 00                                        ; func body size (guess)
0003cc0: 00                                        ; local decl count
0003cc1: 41                                        ; i32.const
0003cc2: 01                                        ; i32 literal
0003cc3: 42                                        ; i64.const
0003cc4: 02                                        ; i64 literal
0003cc5: fe                                        ; prefix
0003cc6: 3f                                        ; i64.atomic.rmw16.xor_u
0003cc7: 01                                        ; alignment
0003cc8: 03                                        ; memory offset
0003cc9: 1a                                        ; drop
0003cca: 0b                                        ; end
0003cbf: 0b                                        ; FIXUP func body size
; function body 411
0003ccb: 00                                        ; func body size (guess)
0003ccc: 00                                        ; local decl count
0003ccd: 41                                        ; i32.const
0003cce: 01                                        ; i32 literal
0003ccf: 42                                        ; i64.const
0003cd0: 02                                        ; i64 literal
0003cd1: fe                                        ; prefix
0003cd2: 40                                        ; i64.atomic.rmw32.xor_u
0003cd3: 02                                        ; alignment
0003cd4: 03                                        ; memory offset
0003cd5: 1a                                        ; drop
0003cd6: 0b                                        ; end
0003ccb: 0b                                        ; FIXUP func body size
; function body 412
0003cd7: 00                                        ; func body size (guess)
0003cd8: 00                                        ; local decl count
0003cd9: 41                                        ; i32.const
0003cda: 01                                        ; i32 literal
0003cdb: 41                                        ; i32.const
0003cdc: 02                                        ; i32 literal
0003cdd: fe                                        ; prefix
0003cde: 41                                        ; i32.atomic.rmw.xchg
0003cdf: 02                                        ; alignment
0003ce0: 03                                        ; memory offset
0003ce1: 1a                                        ; drop
0003ce2: 0b                                        ; end
0003cd7: 0b                                        ; FIXUP func body size
; function body 413
0003ce3: 00                                        ; func body size (guess)
0003ce4: 00                                        ; local decl count
0003ce5: 41                                        ; i32.const
0003ce6: 01                                        ; i32 literal
0003ce7: 42                                        ; i64.const
0003ce8: 02                                        ; i64 literal
0003ce9: fe                                        ; prefix
0003cea: 42                                        ; i64.atomic.rmw.xchg
0003ceb: 03                                        ; alignment
0003cec: 07                                        ; memory offset
0003ced: 1a                                        ; drop
0003cee: 0b                                        ; end
0003ce3: 0b                                        ; FIXUP func body size
; function body 414
0003cef: 00                                        ; func body size (guess)
0003cf0: 00                                        ; local decl count
0003cf1: 41                                        ; i32.const
0003cf2: 01                                        ; i32 literal
0003cf3: 41                                        ; i32.const
0003cf4: 02                                        ; i32 literal
0003cf5: fe                                        ; prefix
0003cf6: 43                                        ; i32.atomic.rmw8.xchg_u
0003cf7: 00                                        ; alignment
0003cf8: 03                                        ; memory offset
0003cf9: 1a                                        ; drop
0003cfa: 0b                                        ; end
0003cef: 0b                                        ; FIXUP func body size
; function body 415
0003cfb: 00                                        ; func body size (guess)
0003cfc: 00                                        ; local decl count
0003cfd: 41                                        ; i32.const
0003cfe: 01                                        ; i32 literal
0003cff: 41                                        ; i32.const
0003d00: 02                                        ; i32 literal
0003d01: fe                                        ; prefix
0003d02: 44                                        ; i32.atomic.rmw16.xchg_u
0003d03: 01                                        ; alignment
0003d04: 03                                        ; memory offset
0003d05: 1a                                        ; drop
0003d06: 0b                                        ; end
0003cfb: 0b                                        ; FIXUP func body size
; function body 416
0003d07: 00                                        ; func body size (guess)
0003d08: 00                                        ; local decl count
0003d09: 41                                        ; i32.const
0003d0a: 01                                        ; i32 literal
0003d0b: 42                                        ; i64.const
0003d0c: 02                                        ; i64 literal
0003d0d: fe                                        ; prefix
0003d0e: 45                                        ; i64.atomic.rmw8.xchg_u
0003d0f: 00                                        ; alignment
0003d10: 03                                        ; memory offset
0003d11: 1a                                        ; drop
0003d12: 0b                                        ; end
0003d07: 0b                                        ; FIXUP func body size
; function body 417
0003d13: 00                                        ; func body size (guess)
0003d14: 00                                        ; local decl count
0003d15: 41                                        ; i32.const
0003d16: 01                                        ; i32 literal
0003d17: 42                                        ; i64.const
0003d18: 02                                        ; i64 literal
0003d19: fe                                        ; prefix
0003d1a: 46                                        ; i64.atomic.rmw16.xchg_u
0003d1b: 01                                        ; alignment
0003d1c: 03                                        ; memory offset
0003d1d: 1a                                        ; drop
0003d1e: 0b                                        ; end
0003d13: 0b                                        ; FIXUP func body size
; function body 418
0003d1f: 00                                        ; func body size (guess)
0003d20: 00                                        ; local decl count
0003d21: 41                                        ; i32.const
0003d22: 01                                        ; i32 literal
0003d23: 42                                        ; i64.const
0003d24: 02                                        ; i64 literal
0003d25: fe                                        ; prefix
0003d26: 47                                        ; i64.atomic.rmw32.xchg_u
0003d27: 02                                        ; alignment
0003d28: 03                                        ; memory offset
0003d29: 1a                                        ; drop
0003d2a: 0b                                        ; end
0003d1f: 0b                                        ; FIXUP func body size
; function body 419
0003d2b: 00                                        ; func body size (guess)
0003d2c: 00                                        ; local decl count
0003d2d: 41                                        ; i32.const
0003d2e: 01                                        ; i32 literal
0003d2f: 41                                        ; i32.const
0003d30: 02                                        ; i32 literal
0003d31: 41                                        ; i32.const
0003d32: 03                                        ; i32 literal
0003d33: fe                                        ; prefix
0003d34: 48                                        ; i32.atomic.rmw.cmpxchg
0003d35: 02                                        ; alignment
0003d36: 03                                        ; memory offset
0003d37: 1a                                        ; drop
0003d38: 0b                                        ; end
0003d2b: 0d                                        ; FIXUP func body size
; function body 420
0003d39: 00                                        ; func body size (guess)
0003d3a: 00                                        ; local decl count
0003d3b: 41                                        ; i32.const
0003d3c: 01                                        ; i32 literal
0003d3d: 42                                        ; i64.const
0003d3e: 02                                        ; i64 literal
0003d3f: 42                                        ; i64.const
0003d40: 03                                        ; i64 literal
0003d41: fe                                        ; prefix
0003d42: 49                                        ; i64.atomic.rmw.cmpxchg
0003d43: 03                                        ; alignment
0003d44: 07                                        ; memory offset
0003d45: 1a                                        ; drop
0003d46: 0b                                        ; end
0003d39: 0d                                        ; FIXUP func body size
; function body 421
0003d47: 00                                        ; func body size (guess)
0003d48: 00                                        ; local decl count
0003d49: 41                                        ; i32.const
0003d4a: 01                                        ; i32 literal
0003d4b: 41                                        ; i32.const
0003d4c: 02                                        ; i32 literal
0003d4d: 41                                        ; i32.const
0003d4e: 03                                        ; i32 literal
0003d4f: fe                                        ; prefix
0003d50: 4a                                        ; i32.atomic.rmw8.cmpxchg_u
0003d51: 00                                        ; alignment
0003d52: 03                                        ; memory offset
0003d53: 1a                                        ; drop
0003d54: 0b                                        ; end
0003d47: 0d                                        ; FIXUP func body size
; function body 422
0003d55: 00                                        ; func body size (guess)
0003d56: 00                                        ; local decl count
0003d57: 41                                        ; i32.const
0003d58: 01                                        ; i32 literal
0003d59: 41                                        ; i32.const
0003d5a: 02                                        ; i32 literal
0003d5b: 41                                        ; i32.const
0003d5c: 03                                        ; i32 literal
0003d5d: fe                                        ; prefix
0003d5e: 4b                                        ; i32.atomic.rmw16.cmpxchg_u
0003d5f: 01                                        ; alignment
0003d60: 03                                        ; memory offset
0003d61: 1a                                        ; drop
0003d62: 0b                                        ; end
0003d55: 0d                                        ; FIXUP func body size
; function body 423
0003d63: 00                                        ; func body size (guess)
0003d64: 00                                        ; local decl count
0003d65: 41                                        ; i32.const
0003d66: 01                                        ; i32 literal
0003d67: 42                                        ; i64.const
0003d68: 02                                        ; i64 literal
0003d69: 42                                        ; i64.const
0003d6a: 03                                        ; i64 literal
0003d6b: fe                                        ; prefix
0003d6c: 4c                                        ; i64.atomic.rmw8.cmpxchg_u
0003d6d: 00                                        ; alignment
0003d6e: 03                                        ; memory offset
0003d6f: 1a                                        ; drop
0003d70: 0b                                        ; end
0003d63: 0d                                        ; FIXUP func body size
; function body 424
0003d71: 00                                        ; func body size (guess)
0003d72: 00                                        ; local decl count
0003d73: 41                                        ; i32.const
0003d74: 01                                        ; i32 literal
0003d75: 42                                        ; i64.const
0003d76: 02                                        ; i64 literal
0003d77: 42                                        ; i64.const
0003d78: 03                                        ; i64 literal
0003d79: fe                                        ; prefix
0003d7a: 4d                                        ; i64.atomic.rmw16.cmpxchg_u
0003d7b: 01                                        ; alignment
0003d7c: 03                                        ; memory offset
0003d7d: 1a                                        ; drop
0003d7e: 0b                                        ; end
0003d71: 0d                                        ; FIXUP func body size
; function body 425
0003d7f: 00                                        ; func body size (guess)
0003d80: 00                                        ; local decl count
0003d81: 41                                        ; i32.const
0003d82: 01                                        ; i32 literal
0003d83: 42                                        ; i64.const
0003d84: 02                                        ; i64 literal
0003d85: 42                                        ; i64.const
0003d86: 03                                        ; i64 literal
0003d87: fe                                        ; prefix
0003d88: 4e                                        ; i64.atomic.rmw32.cmpxchg_u
0003d89: 02                                        ; alignment
0003d8a: 03                                        ; memory offset
0003d8b: 1a                                        ; drop
0003d8c: 0b                                        ; end
0003d7f: 0d                                        ; FIXUP func body size
; move data: [1d2a, 3d8d) -> [1d2b, 3d8e)
0001d29: e340                                      ; FIXUP section size
; section "Data" (11)
0003d8e: 0b                                        ; section code
0003d8f: 00                                        ; section size (guess)
0003d90: 01                                        ; num data segments
; data segment header 0
0003d91: 01                                        ; segment flags
0003d92: 00                                        ; data segment size
; data segment data 0
0003d8f: 03                                        ; FIXUP section size
BeginModule(version: 1)
  BeginTypeSection(8)
    OnTypeCount(2)
    OnType(index: 0, params: [], results: [])
    OnType(index: 1, params: [i32], results: [])
  EndTypeSection
  BeginImportSection(14)
    OnImportCount(1)
    OnImport(index: 0, kind: func, module: "host", field: "print")
    OnImportFunc(import_index: 0, func_index: 0, sig_index: 1)
  EndImportSection
  BeginFunctionSection(428)
    OnFunctionCount(426)
    OnFunction(index: 1, sig_index: 0)
    OnFunction(index: 2, sig_index: 0)
    OnFunction(index: 3, sig_index: 0)
    OnFunction(index: 4, sig_index: 0)
    OnFunction(index: 5, sig_index: 0)
    OnFunction(index: 6, sig_index: 0)
    OnFunction(index: 7, sig_index: 0)
    OnFunction(index: 8, sig_index: 0)
    OnFunction(index: 9, sig_index: 0)
    OnFunction(index: 10, sig_index: 0)
    OnFunction(index: 11, sig_index: 0)
    OnFunction(index: 12, sig_index: 0)
    OnFunction(index: 13, sig_index: 0)
    OnFunction(index: 14, sig_index: 0)
    OnFunction(index: 15, sig_index: 0)
    OnFunction(index: 16, sig_index: 0)
    OnFunction(index: 17, sig_index: 0)
    OnFunction(index: 18, sig_index: 0)
    OnFunction(index: 19, sig_index: 0)
    OnFunction(index: 20, sig_index: 0)
    OnFunction(index: 21, sig_index: 0)
    OnFunction(index: 22, sig_index: 0)
    OnFunction(index: 23, sig_index: 0)
    OnFunction(index: 24, sig_index: 0)
    OnFunction(index: 25, sig_index: 0)
    OnFunction(index: 26, sig_index: 0)
    OnFunction(index: 27, sig_index: 0)
    OnFunction(index: 28, sig_index: 0)
    OnFunction(index: 29, sig_index: 0)
    OnFunction(index: 30, sig_index: 0)
    OnFunction(index: 31, sig_index: 0)
    OnFunction(index: 32, sig_index: 0)
    OnFunction(index: 33, sig_index: 0)
    OnFunction(index: 34, sig_index: 0)
    OnFunction(index: 35, sig_index: 0)
    OnFunction(index: 36, sig_index: 0)
    OnFunction(index: 37, sig_index: 0)
    OnFunction(index: 38, sig_index: 0)
    OnFunction(index: 39, sig_index: 0)
    OnFunction(index: 40, sig_index: 0)
    OnFunction(index: 41, sig_index: 0)
    OnFunction(index: 42, sig_index: 0)
    OnFunction(index: 43, sig_index: 0)
    OnFunction(index: 44, sig_index: 0)
    OnFunction(index: 45, sig_index: 0)
    OnFunction(index: 46, sig_index: 0)
    OnFunction(index: 47, sig_index: 0)
    OnFunction(index: 48, sig_index: 0)
    OnFunction(index: 49, sig_index: 0)
    OnFunction(index: 50, sig_index: 0)
    OnFunction(index: 51, sig_index: 0)
    OnFunction(index: 52, sig_index: 0)
    OnFunction(index: 53, sig_index: 0)
    OnFunction(index: 54, sig_index: 0)
    OnFunction(index: 55, sig_index: 0)
    OnFunction(index: 56, sig_index: 0)
    OnFunction(index: 57, sig_index: 0)
    OnFunction(index: 58, sig_index: 0)
    OnFunction(index: 59, sig_index: 0)
    OnFunction(index: 60, sig_index: 0)
    OnFunction(index: 61, sig_index: 0)
    OnFunction(index: 62, sig_index: 0)
    OnFunction(index: 63, sig_index: 0)
    OnFunction(index: 64, sig_index: 0)
    OnFunction(index: 65, sig_index: 0)
    OnFunction(index: 66, sig_index: 0)
    OnFunction(index: 67, sig_index: 0)
    OnFunction(index: 68, sig_index: 0)
    OnFunction(index: 69, sig_index: 0)
    OnFunction(index: 70, sig_index: 0)
    OnFunction(index: 71, sig_index: 0)
    OnFunction(index: 72, sig_index: 0)
    OnFunction(index: 73, sig_index: 0)
    OnFunction(index: 74, sig_index: 0)
    OnFunction(index: 75, sig_index: 0)
    OnFunction(index: 76, sig_index: 0)
    OnFunction(index: 77, sig_index: 0)
    OnFunction(index: 78, sig_index: 0)
    OnFunction(index: 79, sig_index: 0)
    OnFunction(index: 80, sig_index: 0)
    OnFunction(index: 81, sig_index: 0)
    OnFunction(index: 82, sig_index: 0)
    OnFunction(index: 83, sig_index: 0)
    OnFunction(index: 84, sig_index: 0)
    OnFunction(index: 85, sig_index: 0)
    OnFunction(index: 86, sig_index: 0)
    OnFunction(index: 87, sig_index: 0)
    OnFunction(index: 88, sig_index: 0)
    OnFunction(index: 89, sig_index: 0)
    OnFunction(index: 90, sig_index: 0)
    OnFunction(index: 91, sig_index: 0)
    OnFunction(index: 92, sig_index: 0)
    OnFunction(index: 93, sig_index: 0)
    OnFunction(index: 94, sig_index: 0)
    OnFunction(index: 95, sig_index: 0)
    OnFunction(index: 96, sig_index: 0)
    OnFunction(index: 97, sig_index: 0)
    OnFunction(index: 98, sig_index: 0)
    OnFunction(index: 99, sig_index: 0)
    OnFunction(index: 100, sig_index: 0)
    OnFunction(index: 101, sig_index: 0)
    OnFunction(index: 102, sig_index: 0)
    OnFunction(index: 103, sig_index: 0)
    OnFunction(index: 104, sig_index: 0)
    OnFunction(index: 105, sig_index: 0)
    OnFunction(index: 106, sig_index: 0)
    OnFunction(index: 107, sig_index: 0)
    OnFunction(index: 108, sig_index: 0)
    OnFunction(index: 109, sig_index: 0)
    OnFunction(index: 110, sig_index: 0)
    OnFunction(index: 111, sig_index: 0)
    OnFunction(index: 112, sig_index: 0)
    OnFunction(index: 113, sig_index: 0)
    OnFunction(index: 114, sig_index: 0)
    OnFunction(index: 115, sig_index: 0)
    OnFunction(index: 116, sig_index: 0)
    OnFunction(index: 117, sig_index: 0)
    OnFunction(index: 118, sig_index: 0)
    OnFunction(index: 119, sig_index: 0)
    OnFunction(index: 120, sig_index: 0)
    OnFunction(index: 121, sig_index: 0)
    OnFunction(index: 122, sig_index: 0)
    OnFunction(index: 123, sig_index: 0)
    OnFunction(index: 124, sig_index: 0)
    OnFunction(index: 125, sig_index: 0)
    OnFunction(index: 126, sig_index: 0)
    OnFunction(index: 127, sig_index: 0)
    OnFunction(index: 128, sig_index: 0)
    OnFunction(index: 129, sig_index: 0)
    OnFunction(index: 130, sig_index: 0)
    OnFunction(index: 131, sig_index: 0)
    OnFunction(index: 132, sig_index: 0)
    OnFunction(index: 133, sig_index: 0)
    OnFunction(index: 134, sig_index: 0)
    OnFunction(index: 135, sig_index: 0)
    OnFunction(index: 136, sig_index: 0)
    OnFunction(index: 137, sig_index: 0)
    OnFunction(index: 138, sig_index: 0)
    OnFunction(index: 139, sig_index: 0)
    OnFunction(index: 140, sig_index: 0)
    OnFunction(index: 141, sig_index: 0)
    OnFunction(index: 142, sig_index: 0)
    OnFunction(index: 143, sig_index: 0)
    OnFunction(index: 144, sig_index: 0)
    OnFunction(index: 145, sig_index: 0)
    OnFunction(index: 146, sig_index: 0)
    OnFunction(index: 147, sig_index: 0)
    OnFunction(index: 148, sig_index: 0)
    OnFunction(index: 149, sig_index: 0)
    OnFunction(index: 150, sig_index: 0)
    OnFunction(index: 151, sig_index: 0)
    OnFunction(index: 152, sig_index: 0)
    OnFunction(index: 153, sig_index: 0)
    OnFunction(index: 154, sig_index: 0)
    OnFunction(index: 155, sig_index: 0)
    OnFunction(index: 156, sig_index: 0)
    OnFunction(index: 157, sig_index: 0)
    OnFunction(index: 158, sig_index: 0)
    OnFunction(index: 159, sig_index: 0)
    OnFunction(index: 160, sig_index: 0)
    OnFunction(index: 161, sig_index: 0)
    OnFunction(index: 162, sig_index: 0)
    OnFunction(index: 163, sig_index: 0)
    OnFunction(index: 164, sig_index: 0)
    OnFunction(index: 165, sig_index: 0)
    OnFunction(index: 166, sig_index: 0)
    OnFunction(index: 167, sig_index: 0)
    OnFunction(index: 168, sig_index: 0)
    OnFunction(index: 169, sig_index: 0)
    OnFunction(index: 170, sig_index: 0)
    OnFunction(index: 171, sig_index: 0)
    OnFunction(index: 172, sig_index: 0)
    OnFunction(index: 173, sig_index: 0)
    OnFunction(index: 174, sig_index: 0)
    OnFunction(index: 175, sig_index: 0)
    OnFunction(index: 176, sig_index: 0)
    OnFunction(index: 177, sig_index: 0)
    OnFunction(index: 178, sig_index: 0)
    OnFunction(index: 179, sig_index: 0)
    OnFunction(index: 180, sig_index: 0)
    OnFunction(index: 181, sig_index: 0)
    OnFunction(index: 182, sig_index: 0)
    OnFunction(index: 183, sig_index: 0)
    OnFunction(index: 184, sig_index: 0)
    OnFunction(index: 185, sig_index: 0)
    OnFunction(index: 186, sig_index: 0)
    OnFunction(index: 187, sig_index: 0)
    OnFunction(index: 188, sig_index: 0)
    OnFunction(index: 189, sig_index: 0)
    OnFunction(index: 190, sig_index: 0)
    OnFunction(index: 191, sig_index: 0)
    OnFunction(index: 192, sig_index: 0)
    OnFunction(index: 193, sig_index: 0)
    OnFunction(index: 194, sig_index: 0)
    OnFunction(index: 195, sig_index: 0)
    OnFunction(index: 196, sig_index: 0)
    OnFunction(index: 197, sig_index: 0)
    OnFunction(index: 198, sig_index: 0)
    OnFunction(index: 199, sig_index: 0)
    OnFunction(index: 200, sig_index: 0)
    OnFunction(index: 201, sig_index: 0)
    OnFunction(index: 202, sig_index: 0)
    OnFunction(index: 203, sig_index: 0)
    OnFunction(index: 204, sig_index: 0)
    OnFunction(index: 205, sig_index: 0)
    OnFunction(index: 206, sig_index: 0)
    OnFunction(index: 207, sig_index: 0)
    OnFunction(index: 208, sig_index: 0)
    OnFunction(index: 209, sig_index: 0)
    OnFunction(index: 210, sig_index: 0)
    OnFunction(index: 211, sig_index: 0)
    OnFunction(index: 212, sig_index: 0)
    OnFunction(index: 213, sig_index: 0)
    OnFunction(index: 214, sig_index: 0)
    OnFunction(index: 215, sig_index: 0)
    OnFunction(index: 216, sig_index: 0)
    OnFunction(index: 217, sig_index: 0)
    OnFunction(index: 218, sig_index: 0)
    OnFunction(index: 219, sig_index: 0)
    OnFunction(index: 220, sig_index: 0)
    OnFunction(index: 221, sig_index: 0)
    OnFunction(index: 222, sig_index: 0)
    OnFunction(index: 223, sig_index: 0)
    OnFunction(index: 224, sig_index: 0)
    OnFunction(index: 225, sig_index: 0)
    OnFunction(index: 226, sig_index: 0)
    OnFunction(index: 227, sig_index: 0)
    OnFunction(index: 228, sig_index: 0)
    OnFunction(index: 229, sig_index: 0)
    OnFunction(index: 230, sig_index: 0)
    OnFunction(index: 231, sig_index: 0)
    OnFunction(index: 232, sig_index: 0)
    OnFunction(index: 233, sig_index: 0)
    OnFunction(index: 234, sig_index: 0)
    OnFunction(index: 235, sig_index: 0)
    OnFunction(index: 236, sig_index: 0)
    OnFunction(index: 237, sig_index: 0)
    OnFunction(index: 238, sig_index: 0)
    OnFunction(index: 239, sig_index: 0)
    OnFunction(index: 240, sig_index: 0)
    OnFunction(index: 241, sig_index: 0)
    OnFunction(index: 242, sig_index: 0)
    OnFunction(index: 243, sig_index: 0)
    OnFunction(index: 244, sig_index: 0)
    OnFunction(index: 245, sig_index: 0)
    OnFunction(index: 246, sig_index: 0)
    OnFunction(index: 247, sig_index: 0)
    OnFunction(index: 248, sig_index: 0)
    OnFunction(index: 249, sig_index: 0)
    OnFunction(index: 250, sig_index: 0)
    OnFunction(index: 251, sig_index: 0)
    OnFunction(index: 252, sig_index: 0)
    OnFunction(index: 253, sig_index: 0)
    OnFunction(index: 254, sig_index: 0)
    OnFunction(index: 255, sig_index: 0)
    OnFunction(index: 256, sig_index: 0)
    OnFunction(index: 257, sig_index: 0)
    OnFunction(index: 258, sig_index: 0)
    OnFunction(index: 259, sig_index: 0)
    OnFunction(index: 260, sig_index: 0)
    OnFunction(index: 261, sig_index: 0)
    OnFunction(index: 262, sig_index: 0)
    OnFunction(index: 263, sig_index: 0)
    OnFunction(index: 264, sig_index: 0)
    OnFunction(index: 265, sig_index: 0)
    OnFunction(index: 266, sig_index: 0)
    OnFunction(index: 267, sig_index: 0)
    OnFunction(index: 268, sig_index: 0)
    OnFunction(index: 269, sig_index: 0)
    OnFunction(index: 270, sig_index: 0)
    OnFunction(index: 271, sig_index: 0)
    OnFunction(index: 272, sig_index: 0)
    OnFunction(index: 273, sig_index: 0)
    OnFunction(index: 274, sig_index: 0)
    OnFunction(index: 275, sig_index: 0)
    OnFunction(index: 276, sig_index: 0)
    OnFunction(index: 277, sig_index: 0)
    OnFunction(index: 278, sig_index: 0)
    OnFunction(index: 279, sig_index: 0)
    OnFunction(index: 280, sig_index: 0)
    OnFunction(index: 281, sig_index: 0)
    OnFunction(index: 282, sig_index: 0)
    OnFunction(index: 283, sig_index: 0)
    OnFunction(index: 284, sig_index: 0)
    OnFunction(index: 285, sig_index: 0)
    OnFunction(index: 286, sig_index: 0)
    OnFunction(index: 287, sig_index: 0)
    OnFunction(index: 288, sig_index: 0)
    OnFunction(index: 289, sig_index: 0)
    OnFunction(index: 290, sig_index: 0)
    OnFunction(index: 291, sig_index: 0)
    OnFunction(index: 292, sig_index: 0)
    OnFunction(index: 293, sig_index: 0)
    OnFunction(index: 294, sig_index: 0)
    OnFunction(index: 295, sig_index: 0)
    OnFunction(index: 296, sig_index: 0)
    OnFunction(index: 297, sig_index: 0)
    OnFunction(index: 298, sig_index: 0)
    OnFunction(index: 299, sig_index: 0)
    OnFunction(index: 300, sig_index: 0)
    OnFunction(index: 301, sig_index: 0)
    OnFunction(index: 302, sig_index: 0)
    OnFunction(index: 303, sig_index: 0)
    OnFunction(index: 304, sig_index: 0)
    OnFunction(index: 305, sig_index: 0)
    OnFunction(index: 306, sig_index: 0)
    OnFunction(index: 307, sig_index: 0)
    OnFunction(index: 308, sig_index: 0)
    OnFunction(index: 309, sig_index: 0)
    OnFunction(index: 310, sig_index: 0)
    OnFunction(index: 311, sig_index: 0)
    OnFunction(index: 312, sig_index: 0)
    OnFunction(index: 313, sig_index: 0)
    OnFunction(index: 314, sig_index: 0)
    OnFunction(index: 315, sig_index: 0)
    OnFunction(index: 316, sig_index: 0)
    OnFunction(index: 317, sig_index: 0)
    OnFunction(index: 318, sig_index: 0)
    OnFunction(index: 319, sig_index: 0)
    OnFunction(index: 320, sig_index: 0)
    OnFunction(index: 321, sig_index: 0)
    OnFunction(index: 322, sig_index: 0)
    OnFunction(index: 323, sig_index: 0)
    OnFunction(index: 324, sig_index: 0)
    OnFunction(index: 325, sig_index: 0)
    OnFunction(index: 326, sig_index: 0)
    OnFunction(index: 327, sig_index: 0)
    OnFunction(index: 328, sig_index: 0)
    OnFunction(index: 329, sig_index: 0)
    OnFunction(index: 330, sig_index: 0)
    OnFunction(index: 331, sig_index: 0)
    OnFunction(index: 332, sig_index: 0)
    OnFunction(index: 333, sig_index: 0)
    OnFunction(index: 334, sig_index: 0)
    OnFunction(index: 335, sig_index: 0)
    OnFunction(index: 336, sig_index: 0)
    OnFunction(index: 337, sig_index: 0)
    OnFunction(index: 338, sig_index: 0)
    OnFunction(index: 339, sig_index: 0)
    OnFunction(index: 340, sig_index: 0)
    OnFunction(index: 341, sig_index: 0)
    OnFunction(index: 342, sig_index: 0)
    OnFunction(index: 343, sig_index: 0)
    OnFunction(index: 344, sig_index: 0)
    OnFunction(index: 345, sig_index: 0)
    OnFunction(index: 346, sig_index: 0)
    OnFunction(index: 347, sig_index: 0)
    OnFunction(index: 348, sig_index: 0)
    OnFunction(index: 349, sig_index: 0)
    OnFunction(index: 350, sig_index: 0)
    OnFunction(index: 351, sig_index: 0)
    OnFunction(index: 352, sig_index: 0)
    OnFunction(index: 353, sig_index: 0)
    OnFunction(index: 354, sig_index: 0)
    OnFunction(index: 355, sig_index: 0)
    OnFunction(index: 356, sig_index: 0)
    OnFunction(index: 357, sig_index: 0)
    OnFunction(index: 358, sig_index: 0)
    OnFunction(index: 359, sig_index: 0)
    OnFunction(index: 360, sig_index: 0)
    OnFunction(index: 361, sig_index: 0)
    OnFunction(index: 362, sig_index: 0)
    OnFunction(index: 363, sig_index: 0)
    OnFunction(index: 364, sig_index: 0)
    OnFunction(index: 365, sig_index: 0)
    OnFunction(index: 366, sig_index: 0)
    OnFunction(index: 367, sig_index: 0)
    OnFunction(index: 368, sig_index: 0)
    OnFunction(index: 369, sig_index: 0)
    OnFunction(index: 370, sig_index: 0)
    OnFunction(index: 371, sig_index: 0)
    OnFunction(index: 372, sig_index: 0)
    OnFunction(index: 373, sig_index: 0)
    OnFunction(index: 374, sig_index: 0)
    OnFunction(index: 375, sig_index: 0)
    OnFunction(index: 376, sig_index: 0)
    OnFunction(index: 377, sig_index: 0)
    OnFunction(index: 378, sig_index: 0)
    OnFunction(index: 379, sig_index: 0)
    OnFunction(index: 380, sig_index: 0)
    OnFunction(index: 381, sig_index: 0)
    OnFunction(index: 382, sig_index: 0)
    OnFunction(index: 383, sig_index: 0)
    OnFunction(index: 384, sig_index: 0)
    OnFunction(index: 385, sig_index: 0)
    OnFunction(index: 386, sig_index: 0)
    OnFunction(index: 387, sig_index: 0)
    OnFunction(index: 388, sig_index: 0)
    OnFunction(index: 389, sig_index: 0)
    OnFunction(index: 390, sig_index: 0)
    OnFunction(index: 391, sig_index: 0)
    OnFunction(index: 392, sig_index: 0)
    OnFunction(index: 393, sig_index: 0)
    OnFunction(index: 394, sig_index: 0)
    OnFunction(index: 395, sig_index: 0)
    OnFunction(index: 396, sig_index: 0)
    OnFunction(index: 397, sig_index: 0)
    OnFunction(index: 398, sig_index: 0)
    OnFunction(index: 399, sig_index: 0)
    OnFunction(index: 400, sig_index: 0)
    OnFunction(index: 401, sig_index: 0)
    OnFunction(index: 402, sig_index: 0)
    OnFunction(index: 403, sig_index: 0)
    OnFunction(index: 404, sig_index: 0)
    OnFunction(index: 405, sig_index: 0)
    OnFunction(index: 406, sig_index: 0)
    OnFunction(index: 407, sig_index: 0)
    OnFunction(index: 408, sig_index: 0)
    OnFunction(index: 409, sig_index: 0)
    OnFunction(index: 410, sig_index: 0)
    OnFunction(index: 411, sig_index: 0)
    OnFunction(index: 412, sig_index: 0)
    OnFunction(index: 413, sig_index: 0)
    OnFunction(index: 414, sig_index: 0)
    OnFunction(index: 415, sig_index: 0)
    OnFunction(index: 416, sig_index: 0)
    OnFunction(index: 417, sig_index: 0)
    OnFunction(index: 418, sig_index: 0)
    OnFunction(index: 419, sig_index: 0)
    OnFunction(index: 420, sig_index: 0)
    OnFunction(index: 421, sig_index: 0)
    OnFunction(index: 422, sig_index: 0)
    OnFunction(index: 423, sig_index: 0)
    OnFunction(index: 424, sig_index: 0)
    OnFunction(index: 425, sig_index: 0)
    OnFunction(index: 426, sig_index: 0)
  EndFunctionSection
  BeginTableSection(5)
    OnTableCount(1)
    OnTable(index: 0, elem_type: funcref, initial: 2, max: 2)
  EndTableSection
  BeginMemorySection(4)
    OnMemoryCount(1)
    OnMemory(index: 0, initial: 1, max: 1)
  EndMemorySection
  BeginGlobalSection(6)
    OnGlobalCount(1)
    BeginGlobal(index: 0, type: i32, mutable: true)
    BeginGlobalInitExpr(0)
    OnInitExprI32ConstExpr(index: 0, value: 0)
    EndGlobalInitExpr(0)
    EndGlobal(0)
  EndGlobalSection
  BeginExportSection(6959)
    OnExportCount(425)
    OnExport(index: 0, kind: func, item_index: 2, name: "unreachable")
    OnExport(index: 1, kind: func, item_index: 3, name: "br")
    OnExport(index: 2, kind: func, item_index: 4, name: "br_table")
    OnExport(index: 3, kind: func, item_index: 5, name: "return")
    OnExport(index: 4, kind: func, item_index: 6, name: "call")
    OnExport(index: 5, kind: func, item_index: 7, name: "call_indirect")
    OnExport(index: 6, kind: func, item_index: 8, name: "return_call")
    OnExport(index: 7, kind: func, item_index: 9, name: "return_call_indirect")
    OnExport(index: 8, kind: func, item_index: 10, name: "drop")
    OnExport(index: 9, kind: func, item_index: 11, name: "select")
    OnExport(index: 10, kind: func, item_index: 12, name: "select_t")
    OnExport(index: 11, kind: func, item_index: 13, name: "get_local")
    OnExport(index: 12, kind: func, item_index: 14, name: "set_local")
    OnExport(index: 13, kind: func, item_index: 15, name: "tee_local")
    OnExport(index: 14, kind: func, item_index: 16, name: "get_global")
    OnExport(index: 15, kind: func, item_index: 17, name: "set_global")
    OnExport(index: 16, kind: func, item_index: 18, name: "i32.load")
    OnExport(index: 17, kind: func, item_index: 19, name: "i64.load")
    OnExport(index: 18, kind: func, item_index: 20, name: "f32.load")
    OnExport(index: 19, kind: func, item_index: 21, name: "f64.load")
    OnExport(index: 20, kind: func, item_index: 22, name: "i32.load8_s")
    OnExport(index: 21, kind: func, item_index: 23, name: "i32.load8_u")
    OnExport(index: 22, kind: func, item_index: 24, name: "i32.load16_s")
    OnExport(index: 23, kind: func, item_index: 25, name: "i32.load16_u")
    OnExport(index: 24, kind: func, item_index: 26, name: "i64.load8_s")
    OnExport(index: 25, kind: func, item_index: 27, name: "i64.load8_u")
    OnExport(index: 26, kind: func, item_index: 28, name: "i64.load16_s")
    OnExport(index: 27, kind: func, item_index: 29, name: "i64.load16_u")
    OnExport(index: 28, kind: func, item_index: 30, name: "i64.load32_s")
    OnExport(index: 29, kind: func, item_index: 31, name: "i64.load32_u")
    OnExport(index: 30, kind: func, item_index: 32, name: "i32.store")
    OnExport(index: 31, kind: func, item_index: 33, name: "i64.store")
    OnExport(index: 32, kind: func, item_index: 34, name: "f32.store")
    OnExport(index: 33, kind: func, item_index: 35, name: "f64.store")
    OnExport(index: 34, kind: func, item_index: 36, name: "i32.store8")
    OnExport(index: 35, kind: func, item_index: 37, name: "i32.store16")
    OnExport(index: 36, kind: func, item_index: 38, name: "i64.store8")
    OnExport(index: 37, kind: func, item_index: 39, name: "i64.store16")
    OnExport(index: 38, kind: func, item_index: 40, name: "i64.store32")
    OnExport(index: 39, kind: func, item_index: 41, name: "current_memory")
    OnExport(index: 40, kind: func, item_index: 42, name: "grow_memory")
    OnExport(index: 41, kind: func, item_index: 43, name: "i32.const")
    OnExport(index: 42, kind: func, item_index: 44, name: "i64.const")
    OnExport(index: 43, kind: func, item_index: 45, name: "f32.const")
    OnExport(index: 44, kind: func, item_index: 46, name: "f64.const")
    OnExport(index: 45, kind: func, item_index: 47, name: "i32.eqz")
    OnExport(index: 46, kind: func, item_index: 48, name: "i32.eq")
    OnExport(index: 47, kind: func, item_index: 49, name: "i32.ne")
    OnExport(index: 48, kind: func, item_index: 50, name: "i32.lt_s")
    OnExport(index: 49, kind: func, item_index: 51, name: "i32.lt_u")
    OnExport(index: 50, kind: func, item_index: 52, name: "i32.gt_s")
    OnExport(index: 51, kind: func, item_index: 53, name: "i32.gt_u")
    OnExport(index: 52, kind: func, item_index: 54, name: "i32.le_s")
    OnExport(index: 53, kind: func, item_index: 55, name: "i32.le_u")
    OnExport(index: 54, kind: func, item_index: 56, name: "i32.ge_s")
    OnExport(index: 55, kind: func, item_index: 57, name: "i32.ge_u")
    OnExport(index: 56, kind: func, item_index: 58, name: "i64.eqz")
    OnExport(index: 57, kind: func, item_index: 59, name: "i64.eq")
    OnExport(index: 58, kind: func, item_index: 60, name: "i64.ne")
    OnExport(index: 59, kind: func, item_index: 61, name: "i64.lt_s")
    OnExport(index: 60, kind: func, item_index: 62, name: "i64.lt_u")
    OnExport(index: 61, kind: func, item_index: 63, name: "i64.gt_s")
    OnExport(index: 62, kind: func, item_index: 64, name: "i64.gt_u")
    OnExport(index: 63, kind: func, item_index: 65, name: "i64.le_s")
    OnExport(index: 64, kind: func, item_index: 66, name: "i64.le_u")
    OnExport(index: 65, kind: func, item_index: 67, name: "i64.ge_s")
    OnExport(index: 66, kind: func, item_index: 68, name: "i64.ge_u")
    OnExport(index: 67, kind: func, item_index: 69, name: "f32.eq")
    OnExport(index: 68, kind: func, item_index: 70, name: "f32.ne")
    OnExport(index: 69, kind: func, item_index: 71, name: "f32.lt")
    OnExport(index: 70, kind: func, item_index: 72, name: "f32.gt")
    OnExport(index: 71, kind: func, item_index: 73, name: "f32.le")
    OnExport(index: 72, kind: func, item_index: 74, name: "f32.ge")
    OnExport(index: 73, kind: func, item_index: 75, name: "f64.eq")
    OnExport(index: 74, kind: func, item_index: 76, name: "f64.ne")
    OnExport(index: 75, kind: func, item_index: 77, name: "f64.lt")
    OnExport(index: 76, kind: func, item_index: 78, name: "f64.gt")
    OnExport(index: 77, kind: func, item_index: 79, name: "f64.le")
    OnExport(index: 78, kind: func, item_index: 80, name: "f64.ge")
    OnExport(index: 79, kind: func, item_index: 81, name: "i32.clz")
    OnExport(index: 80, kind: func, item_index: 82, name: "i32.ctz")
    OnExport(index: 81, kind: func, item_index: 83, name: "i32.popcnt")
    OnExport(index: 82, kind: func, item_index: 84, name: "i32.add")
    OnExport(index: 83, kind: func, item_index: 85, name: "i32.sub")
    OnExport(index: 84, kind: func, item_index: 86, name: "i32.mul")
    OnExport(index: 85, kind: func, item_index: 87, name: "i32.div_s")
    OnExport(index: 86, kind: func, item_index: 88, name: "i32.div_u")
    OnExport(index: 87, kind: func, item_index: 89, name: "i32.rem_s")
    OnExport(index: 88, kind: func, item_index: 90, name: "i32.rem_u")
    OnExport(index: 89, kind: func, item_index: 91, name: "i32.and")
    OnExport(index: 90, kind: func, item_index: 92, name: "i32.or")
    OnExport(index: 91, kind: func, item_index: 93, name: "i32.xor")
    OnExport(index: 92, kind: func, item_index: 94, name: "i32.shl")
    OnExport(index: 93, kind: func, item_index: 95, name: "i32.shr_s")
    OnExport(index: 94, kind: func, item_index: 96, name: "i32.shr_u")
    OnExport(index: 95, kind: func, item_index: 97, name: "i32.rotl")
    OnExport(index: 96, kind: func, item_index: 98, name: "i32.rotr")
    OnExport(index: 97, kind: func, item_index: 99, name: "i64.clz")
    OnExport(index: 98, kind: func, item_index: 100, name: "i64.ctz")
    OnExport(index: 99, kind: func, item_index: 101, name: "i64.popcnt")
    OnExport(index: 100, kind: func, item_index: 102, name: "i64.add")
    OnExport(index: 101, kind: func, item_index: 103, name: "i64.sub")
    OnExport(index: 102, kind: func, item_index: 104, name: "i64.mul")
    OnExport(index: 103, kind: func, item_index: 105, name: "i64.div_s")
    OnExport(index: 104, kind: func, item_index: 106, name: "i64.div_u")
    OnExport(index: 105, kind: func, item_index: 107, name: "i64.rem_s")
    OnExport(index: 106, kind: func, item_index: 108, name: "i64.rem_u")
    OnExport(index: 107, kind: func, item_index: 109, name: "i64.and")
    OnExport(index: 108, kind: func, item_index: 110, name: "i64.or")
    OnExport(index: 109, kind: func, item_index: 111, name: "i64.xor")
    OnExport(index: 110, kind: func, item_index: 112, name: "i64.shl")
    OnExport(index: 111, kind: func, item_index: 113, name: "i64.shr_s")
    OnExport(index: 112, kind: func, item_index: 114, name: "i64.shr_u")
    OnExport(index: 113, kind: func, item_index: 115, name: "i64.rotl")
    OnExport(index: 114, kind: func, item_index: 116, name: "i64.rotr")
    OnExport(index: 115, kind: func, item_index: 117, name: "f32.abs")
    OnExport(index: 116, kind: func, item_index: 118, name: "f32.neg")
    OnExport(index: 117, kind: func, item_index: 119, name: "f32.ceil")
    OnExport(index: 118, kind: func, item_index: 120, name: "f32.floor")
    OnExport(index: 119, kind: func, item_index: 121, name: "f32.trunc")
    OnExport(index: 120, kind: func, item_index: 122, name: "f32.nearest")
    OnExport(index: 121, kind: func, item_index: 123, name: "f32.sqrt")
    OnExport(index: 122, kind: func, item_index: 124, name: "f32.add")
    OnExport(index: 123, kind: func, item_index: 125, name: "f32.sub")
    OnExport(index: 124, kind: func, item_index: 126, name: "f32.mul")
    OnExport(index: 125, kind: func, item_index: 127, name: "f32.div")
    OnExport(index: 126, kind: func, item_index: 128, name: "f32.min")
    OnExport(index: 127, kind: func, item_index: 129, name: "f32.max")
    OnExport(index: 128, kind: func, item_index: 130, name: "f32.copysign")
    OnExport(index: 129, kind: func, item_index: 131, name: "f64.abs")
    OnExport(index: 130, kind: func, item_index: 132, name: "f64.neg")
    OnExport(index: 131, kind: func, item_index: 133, name: "f64.ceil")
    OnExport(index: 132, kind: func, item_index: 134, name: "f64.floor")
    OnExport(index: 133, kind: func, item_index: 135, name: "f64.trunc")
    OnExport(index: 134, kind: func, item_index: 136, name: "f64.nearest")
    OnExport(index: 135, kind: func, item_index: 137, name: "f64.sqrt")
    OnExport(index: 136, kind: func, item_index: 138, name: "f64.add")
    OnExport(index: 137, kind: func, item_index: 139, name: "f64.sub")
    OnExport(index: 138, kind: func, item_index: 140, name: "f64.mul")
    OnExport(index: 139, kind: func, item_index: 141, name: "f64.div")
    OnExport(index: 140, kind: func, item_index: 142, name: "f64.min")
    OnExport(index: 141, kind: func, item_index: 143, name: "f64.max")
    OnExport(index: 142, kind: func, item_index: 144, name: "f64.copysign")
    OnExport(index: 143, kind: func, item_index: 145, name: "i32.wrap/i64")
    OnExport(index: 144, kind: func, item_index: 146, name: "i32.trunc_s/f32")
    OnExport(index: 145, kind: func, item_index: 147, name: "i32.trunc_u/f32")
    OnExport(index: 146, kind: func, item_index: 148, name: "i32.trunc_s/f64")
    OnExport(index: 147, kind: func, item_index: 149, name: "i32.trunc_u/f64")
    OnExport(index: 148, kind: func, item_index: 150, name: "i64.extend_s/i32")
    OnExport(index: 149, kind: func, item_index: 151, name: "i64.extend_u/i32")
    OnExport(index: 150, kind: func, item_index: 152, name: "i64.trunc_s/f32")
    OnExport(index: 151, kind: func, item_index: 153, name: "i64.trunc_u/f32")
    OnExport(index: 152, kind: func, item_index: 154, name: "i64.trunc_s/f64")
    OnExport(index: 153, kind: func, item_index: 155, name: "i64.trunc_u/f64")
    OnExport(index: 154, kind: func, item_index: 156, name: "f32.convert_s/i32")
    OnExport(index: 155, kind: func, item_index: 157, name: "f32.convert_u/i32")
    OnExport(index: 156, kind: func, item_index: 158, name: "f32.convert_s/i64")
    OnExport(index: 157, kind: func, item_index: 159, name: "f32.convert_u/i64")
    OnExport(index: 158, kind: func, item_index: 160, name: "f32.demote/f64")
    OnExport(index: 159, kind: func, item_index: 161, name: "f64.convert_s/i32")
    OnExport(index: 160, kind: func, item_index: 162, name: "f64.convert_u/i32")
    OnExport(index: 161, kind: func, item_index: 163, name: "f64.convert_s/i64")
    OnExport(index: 162, kind: func, item_index: 164, name: "f64.convert_u/i64")
    OnExport(index: 163, kind: func, item_index: 165, name: "f64.promote/f32")
    OnExport(index: 164, kind: func, item_index: 166, name: "i32.reinterpret/f32")
    OnExport(index: 165, kind: func, item_index: 167, name: "f32.reinterpret/i32")
    OnExport(index: 166, kind: func, item_index: 168, name: "i64.reinterpret/f64")
    OnExport(index: 167, kind: func, item_index: 169, name: "f64.reinterpret/i64")
    OnExport(index: 168, kind: func, item_index: 170, name: "i32.extend8_s")
    OnExport(index: 169, kind: func, item_index: 171, name: "i32.extend16_s")
    OnExport(index: 170, kind: func, item_index: 172, name: "i64.extend8_s")
    OnExport(index: 171, kind: func, item_index: 173, name: "i64.extend16_s")
    OnExport(index: 172, kind: func, item_index: 174, name: "i64.extend32_s")
    OnExport(index: 173, kind: func, item_index: 175, name: "alloca")
    OnExport(index: 174, kind: func, item_index: 176, name: "br_unless")
    OnExport(index: 175, kind: func, item_index: 177, name: "call_host")
    OnExport(index: 176, kind: func, item_index: 178, name: "data")
    OnExport(index: 177, kind: func, item_index: 179, name: "drop_keep")
    OnExport(index: 178, kind: func, item_index: 180, name: "i32.trunc_s:sat/f32")
    OnExport(index: 179, kind: func, item_index: 181, name: "i32.trunc_u:sat/f32")
    OnExport(index: 180, kind: func, item_index: 182, name: "i32.trunc_s:sat/f64")
    OnExport(index: 181, kind: func, item_index: 183, name: "i32.trunc_u:sat/f64")
    OnExport(index: 182, kind: func, item_index: 184, name: "i64.trunc_s:sat/f32")
    OnExport(index: 183, kind: func, item_index: 185, name: "i64.trunc_u:sat/f32")
    OnExport(index: 184, kind: func, item_index: 186, name: "i64.trunc_s:sat/f64")
    OnExport(index: 185, kind: func, item_index: 187, name: "i64.trunc_u:sat/f64")
    OnExport(index: 186, kind: func, item_index: 188, name: "memory.init")
    OnExport(index: 187, kind: func, item_index: 189, name: "data.drop")
    OnExport(index: 188, kind: func, item_index: 190, name: "memory.copy")
    OnExport(index: 189, kind: func, item_index: 191, name: "memory.fill")
    OnExport(index: 190, kind: func, item_index: 192, name: "table.init")
    OnExport(index: 191, kind: func, item_index: 193, name: "elem.drop")
    OnExport(index: 192, kind: func, item_index: 194, name: "table.copy")
    OnExport(index: 193, kind: func, item_index: 195, name: "v128.load")
    OnExport(index: 194, kind: func, item_index: 196, name: "v128.store")
    OnExport(index: 195, kind: func, item_index: 197, name: "v128.const")
    OnExport(index: 196, kind: func, item_index: 198, name: "i8x16.splat")
    OnExport(index: 197, kind: func, item_index: 199, name: "i8x16.extract_lane_s")
    OnExport(index: 198, kind: func, item_index: 200, name: "i8x16.extract_lane_u")
    OnExport(index: 199, kind: func, item_index: 201, name: "i8x16.replace_lane")
    OnExport(index: 200, kind: func, item_index: 202, name: "i16x8.splat")
    OnExport(index: 201, kind: func, item_index: 203, name: "i16x8.extract_lane_s")
    OnExport(index: 202, kind: func, item_index: 204, name: "i16x8.extract_lane_u")
    OnExport(index: 203, kind: func, item_index: 205, name: "i16x8.replace_lane")
    OnExport(index: 204, kind: func, item_index: 206, name: "i32x4.splat")
    OnExport(index: 205, kind: func, item_index: 207, name: "i32x4.extract_lane")
    OnExport(index: 206, kind: func, item_index: 208, name: "i32x4.replace_lane")
    OnExport(index: 207, kind: func, item_index: 209, name: "i64x2.splat")
    OnExport(index: 208, kind: func, item_index: 210, name: "i64x2.extract_lane")
    OnExport(index: 209, kind: func, item_index: 211, name: "i64x2.replace_lane")
    OnExport(index: 210, kind: func, item_index: 212, name: "f32x4.splat")
    OnExport(index: 211, kind: func, item_index: 213, name: "f32x4.extract_lane")
    OnExport(index: 212, kind: func, item_index: 214, name: "f32x4.replace_lane")
    OnExport(index: 213, kind: func, item_index: 215, name: "f64x2.splat")
    OnExport(index: 214, kind: func, item_index: 216, name: "f64x2.extract_lane")
    OnExport(index: 215, kind: func, item_index: 217, name: "f64x2.replace_lane")
    OnExport(index: 216, kind: func, item_index: 218, name: "i8x16.eq")
    OnExport(index: 217, kind: func, item_index: 219, name: "i8x16.ne")
    OnExport(index: 218, kind: func, item_index: 220, name: "i8x16.lt_s")
    OnExport(index: 219, kind: func, item_index: 221, name: "i8x16.lt_u")
    OnExport(index: 220, kind: func, item_index: 222, name: "i8x16.gt_s")
    OnExport(index: 221, kind: func, item_index: 223, name: "i8x16.gt_u")
    OnExport(index: 222, kind: func, item_index: 224, name: "i8x16.le_s")
    OnExport(index: 223, kind: func, item_index: 225, name: "i8x16.le_u")
    OnExport(index: 224, kind: func, item_index: 226, name: "i8x16.ge_s")
    OnExport(index: 225, kind: func, item_index: 227, name: "i8x16.ge_u")
    OnExport(index: 226, kind: func, item_index: 228, name: "i16x8.eq")
    OnExport(index: 227, kind: func, item_index: 229, name: "i16x8.ne")
    OnExport(index: 228, kind: func, item_index: 230, name: "i16x8.lt_s")
    OnExport(index: 229, kind: func, item_index: 231, name: "i16x8.lt_u")
    OnExport(index: 230, kind: func, item_index: 232, name: "i16x8.gt_s")
    OnExport(index: 231, kind: func, item_index: 233, name: "i16x8.gt_u")
    OnExport(index: 232, kind: func, item_index: 234, name: "i16x8.le_s")
    OnExport(index: 233, kind: func, item_index: 235, name: "i16x8.le_u")
    OnExport(index: 234, kind: func, item_index: 236, name: "i16x8.ge_s")
    OnExport(index: 235, kind: func, item_index: 237, name: "i16x8.ge_u")
    OnExport(index: 236, kind: func, item_index: 238, name: "i32x4.eq")
    OnExport(index: 237, kind: func, item_index: 239, name: "i32x4.ne")
    OnExport(index: 238, kind: func, item_index: 240, name: "i32x4.lt_s")
    OnExport(index: 239, kind: func, item_index: 241, name: "i32x4.lt_u")
    OnExport(index: 240, kind: func, item_index: 242, name: "i32x4.gt_s")
    OnExport(index: 241, kind: func, item_index: 243, name: "i32x4.gt_u")
    OnExport(index: 242, kind: func, item_index: 244, name: "i32x4.le_s")
    OnExport(index: 243, kind: func, item_index: 245, name: "i32x4.le_u")
    OnExport(index: 244, kind: func, item_index: 246, name: "i32x4.ge_s")
    OnExport(index: 245, kind: func, item_index: 247, name: "i32x4.ge_u")
    OnExport(index: 246, kind: func, item_index: 248, name: "f32x4.eq")
    OnExport(index: 247, kind: func, item_index: 249, name: "f32x4.ne")
    OnExport(index: 248, kind: func, item_index: 250, name: "f32x4.lt")
    OnExport(index: 249, kind: func, item_index: 251, name: "f32x4.gt")
    OnExport(index: 250, kind: func, item_index: 252, name: "f32x4.le")
    OnExport(index: 251, kind: func, item_index: 253, name: "f32x4.ge")
    OnExport(index: 252, kind: func, item_index: 254, name: "f64x2.eq")
    OnExport(index: 253, kind: func, item_index: 255, name: "f64x2.ne")
    OnExport(index: 254, kind: func, item_index: 256, name: "f64x2.lt")
    OnExport(index: 255, kind: func, item_index: 257, name: "f64x2.gt")
    OnExport(index: 256, kind: func, item_index: 258, name: "f64x2.le")
    OnExport(index: 257, kind: func, item_index: 259, name: "f64x2.ge")
    OnExport(index: 258, kind: func, item_index: 260, name: "v128.not")
    OnExport(index: 259, kind: func, item_index: 261, name: "v128.and")
    OnExport(index: 260, kind: func, item_index: 262, name: "v128.or")
    OnExport(index: 261, kind: func, item_index: 263, name: "v128.xor")
    OnExport(index: 262, kind: func, item_index: 264, name: "v128.bitselect")
    OnExport(index: 263, kind: func, item_index: 265, name: "i8x16.neg")
    OnExport(index: 264, kind: func, item_index: 266, name: "i8x16.any_true")
    OnExport(index: 265, kind: func, item_index: 267, name: "i8x16.all_true")
    OnExport(index: 266, kind: func, item_index: 268, name: "i8x16.shl")
    OnExport(index: 267, kind: func, item_index: 269, name: "i8x16.shr_s")
    OnExport(index: 268, kind: func, item_index: 270, name: "i8x16.shr_u")
    OnExport(index: 269, kind: func, item_index: 271, name: "i8x16.add")
    OnExport(index: 270, kind: func, item_index: 272, name: "i8x16.add_saturate_s")
    OnExport(index: 271, kind: func, item_index: 273, name: "i8x16.add_saturate_u")
    OnExport(index: 272, kind: func, item_index: 274, name: "i8x16.sub")
    OnExport(index: 273, kind: func, item_index: 275, name: "i8x16.sub_saturate_s")
    OnExport(index: 274, kind: func, item_index: 276, name: "i8x16.sub_saturate_u")
    OnExport(index: 275, kind: func, item_index: 277, name: "i8x16.mul")
    OnExport(index: 276, kind: func, item_index: 278, name: "i16x8.neg")
    OnExport(index: 277, kind: func, item_index: 279, name: "i16x8.any_true")
    OnExport(index: 278, kind: func, item_index: 280, name: "i16x8.all_true")
    OnExport(index: 279, kind: func, item_index: 281, name: "i16x8.shl")
    OnExport(index: 280, kind: func, item_index: 282, name: "i16x8.shr_s")
    OnExport(index: 281, kind: func, item_index: 283, name: "i16x8.shr_u")
    OnExport(index: 282, kind: func, item_index: 284, name: "i16x8.add")
    OnExport(index: 283, kind: func, item_index: 285, name: "i16x8.add_saturate_s")
    OnExport(index: 284, kind: func, item_index: 286, name: "i16x8.add_saturate_u")
    OnExport(index: 285, kind: func, item_index: 287, name: "i16x8.sub")
    OnExport(index: 286, kind: func, item_index: 288, name: "i16x8.sub_saturate_s")
    OnExport(index: 287, kind: func, item_index: 289, name: "i16x8.sub_saturate_u")
    OnExport(index: 288, kind: func, item_index: 290, name: "i16x8.mul")
    OnExport(index: 289, kind: func, item_index: 291, name: "i32x4.neg")
    OnExport(index: 290, kind: func, item_index: 292, name: "i32x4.any_true")
    OnExport(index: 291, kind: func, item_index: 293, name: "i32x4.all_true")
    OnExport(index: 292, kind: func, item_index: 294, name: "i32x4.shl")
    OnExport(index: 293, kind: func, item_index: 295, name: "i32x4.shr_s")
    OnExport(index: 294, kind: func, item_index: 296, name: "i32x4.shr_u")
    OnExport(index: 295, kind: func, item_index: 297, name: "i32x4.add")
    OnExport(index: 296, kind: func, item_index: 298, name: "i32x4.sub")
    OnExport(index: 297, kind: func, item_index: 299, name: "i32x4.mul")
    OnExport(index: 298, kind: func, item_index: 300, name: "i64x2.neg")
    OnExport(index: 299, kind: func, item_index: 301, name: "i64x2.any_true")
    OnExport(index: 300, kind: func, item_index: 302, name: "i64x2.all_true")
    OnExport(index: 301, kind: func, item_index: 303, name: "i64x2.shl")
    OnExport(index: 302, kind: func, item_index: 304, name: "i64x2.shr_s")
    OnExport(index: 303, kind: func, item_index: 305, name: "i64x2.shr_u")
    OnExport(index: 304, kind: func, item_index: 306, name: "i64x2.add")
    OnExport(index: 305, kind: func, item_index: 307, name: "i64x2.sub")
    OnExport(index: 306, kind: func, item_index: 308, name: "f32x4.abs")
    OnExport(index: 307, kind: func, item_index: 309, name: "f32x4.neg")
    OnExport(index: 308, kind: func, item_index: 310, name: "f32x4.sqrt")
    OnExport(index: 309, kind: func, item_index: 311, name: "f32x4.add")
    OnExport(index: 310, kind: func, item_index: 312, name: "f32x4.sub")
    OnExport(index: 311, kind: func, item_index: 313, name: "f32x4.mul")
    OnExport(index: 312, kind: func, item_index: 314, name: "f32x4.div")
    OnExport(index: 313, kind: func, item_index: 315, name: "f32x4.min")
    OnExport(index: 314, kind: func, item_index: 316, name: "f32x4.max")
    OnExport(index: 315, kind: func, item_index: 317, name: "f64x2.abs")
    OnExport(index: 316, kind: func, item_index: 318, name: "f64x2.neg")
    OnExport(index: 317, kind: func, item_index: 319, name: "f64x2.sqrt")
    OnExport(index: 318, kind: func, item_index: 320, name: "f64x2.add")
    OnExport(index: 319, kind: func, item_index: 321, name: "f64x2.sub")
    OnExport(index: 320, kind: func, item_index: 322, name: "f64x2.mul")
    OnExport(index: 321, kind: func, item_index: 323, name: "f64x2.div")
    OnExport(index: 322, kind: func, item_index: 324, name: "f64x2.min")
    OnExport(index: 323, kind: func, item_index: 325, name: "f64x2.max")
    OnExport(index: 324, kind: func, item_index: 326, name: "i32x4.trunc_sat_f32x4_s")
    OnExport(index: 325, kind: func, item_index: 327, name: "i32x4.trunc_sat_f32x4_u")
    OnExport(index: 326, kind: func, item_index: 328, name: "i64x2.trunc_sat_f64x2_s")
    OnExport(index: 327, kind: func, item_index: 329, name: "i64x2.trunc_sat_f64x2_u")
    OnExport(index: 328, kind: func, item_index: 330, name: "f32x4.convert_i32x4_s")
    OnExport(index: 329, kind: func, item_index: 331, name: "f32x4.convert_i32x4_u")
    OnExport(index: 330, kind: func, item_index: 332, name: "f64x2.convert_i64x2_s")
    OnExport(index: 331, kind: func, item_index: 333, name: "f64x2.convert_i64x2_u")
    OnExport(index: 332, kind: func, item_index: 334, name: "v8x16.swizzle")
    OnExport(index: 333, kind: func, item_index: 335, name: "v8x16.shuffle")
    OnExport(index: 334, kind: func, item_index: 336, name: "i8x16.load_splat")
    OnExport(index: 335, kind: func, item_index: 337, name: "i16x8.load_splat")
    OnExport(index: 336, kind: func, item_index: 338, name: "i32x4.load_splat")
    OnExport(index: 337, kind: func, item_index: 339, name: "i64x2.load_splat")
    OnExport(index: 338, kind: func, item_index: 340, name: "i8x16.narrow_i16x8_s")
    OnExport(index: 339, kind: func, item_index: 341, name: "i8x16.narrow_i16x8_u")
    OnExport(index: 340, kind: func, item_index: 342, name: "i16x8.narrow_i32x4_s")
    OnExport(index: 341, kind: func, item_index: 343, name: "i16x8.narrow_i32x4_u")
    OnExport(index: 342, kind: func, item_index: 344, name: "i16x8.widen_low_i8x16_s")
    OnExport(index: 343, kind: func, item_index: 345, name: "i16x8.widen_high_i8x16_s")
    OnExport(index: 344, kind: func, item_index: 346, name: "i16x8.widen_low_i8x16_u")
    OnExport(index: 345, kind: func, item_index: 347, name: "i16x8.widen_high_i8x16_u")
    OnExport(index: 346, kind: func, item_index: 348, name: "i32x4.widen_low_i16x8_s")
    OnExport(index: 347, kind: func, item_index: 349, name: "i32x4.widen_high_i16x8_s")
    OnExport(index: 348, kind: func, item_index: 350, name: "i32x4.widen_low_i16x8_u")
    OnExport(index: 349, kind: func, item_index: 351, name: "i32x4.widen_high_i16x8_u")
    OnExport(index: 350, kind: func, item_index: 352, name: "i16x8.load8x8_s")
    OnExport(index: 351, kind: func, item_index: 353, name: "i16x8.load8x8_u")
    OnExport(index: 352, kind: func, item_index: 354, name: "i32x4.load16x4_s")
    OnExport(index: 353, kind: func, item_index: 355, name: "i32x4.load16x4_u")
    OnExport(index: 354, kind: func, item_index: 356, name: "i64x2.load32x2_s")
    OnExport(index: 355, kind: func, item_index: 357, name: "i64x2.load32x2_u")
    OnExport(index: 356, kind: func, item_index: 358, name: "v128.andnot")
    OnExport(index: 357, kind: func, item_index: 359, name: "i8x16.avgr_u")
    OnExport(index: 358, kind: func, item_index: 360, name: "i16x8.avgr_u")
    OnExport(index: 359, kind: func, item_index: 361, name: "atomic.notify")
    OnExport(index: 360, kind: func, item_index: 362, name: "i32.atomic.wait")
    OnExport(index: 361, kind: func, item_index: 363, name: "i64.atomic.wait")
    OnExport(index: 362, kind: func, item_index: 364, name: "i32.atomic.load")
    OnExport(index: 363, kind: func, item_index: 365, name: "i64.atomic.load")
    OnExport(index: 364, kind: func, item_index: 366, name: "i32.atomic.load8_u")
    OnExport(index: 365, kind: func, item_index: 367, name: "i32.atomic.load16_u")
    OnExport(index: 366, kind: func, item_index: 368, name: "i64.atomic.load8_u")
    OnExport(index: 367, kind: func, item_index: 369, name: "i64.atomic.load16_u")
    OnExport(index: 368, kind: func, item_index: 370, name: "i64.atomic.load32_u")
    OnExport(index: 369, kind: func, item_index: 371, name: "i32.atomic.store")
    OnExport(index: 370, kind: func, item_index: 372, name: "i64.atomic.store")
    OnExport(index: 371, kind: func, item_index: 373, name: "i32.atomic.store8")
    OnExport(index: 372, kind: func, item_index: 374, name: "i32.atomic.store16")
    OnExport(index: 373, kind: func, item_index: 375, name: "i64.atomic.store8")
    OnExport(index: 374, kind: func, item_index: 376, name: "i64.atomic.store16")
    OnExport(index: 375, kind: func, item_index: 377, name: "i64.atomic.store32")
    OnExport(index: 376, kind: func, item_index: 378, name: "i32.atomic.rmw.add")
    OnExport(index: 377, kind: func, item_index: 379, name: "i64.atomic.rmw.add")
    OnExport(index: 378, kind: func, item_index: 380, name: "i32.atomic.rmw8.add_u")
    OnExport(index: 379, kind: func, item_index: 381, name: "i32.atomic.rmw16.add_u")
    OnExport(index: 380, kind: func, item_index: 382, name: "i64.atomic.rmw8.add_u")
    OnExport(index: 381, kind: func, item_index: 383, name: "i64.atomic.rmw16.add_u")
    OnExport(index: 382, kind: func, item_index: 384, name: "i64.atomic.rmw32.add_u")
    OnExport(index: 383, kind: func, item_index: 385, name: "i32.atomic.rmw.sub")
    OnExport(index: 384, kind: func, item_index: 386, name: "i64.atomic.rmw.sub")
    OnExport(index: 385, kind: func, item_index: 387, name: "i32.atomic.rmw8.sub_u")
    OnExport(index: 386, kind: func, item_index: 388, name: "i32.atomic.rmw16.sub_u")
    OnExport(index: 387, kind: func, item_index: 389, name: "i64.atomic.rmw8.sub_u")
    OnExport(index: 388, kind: func, item_index: 390, name: "i64.atomic.rmw16.sub_u")
    OnExport(index: 389, kind: func, item_index: 391, name: "i64.atomic.rmw32.sub_u")
    OnExport(index: 390, kind: func, item_index: 392, name: "i32.atomic.rmw.and")
    OnExport(index: 391, kind: func, item_index: 393, name: "i64.atomic.rmw.and")
    OnExport(index: 392, kind: func, item_index: 394, name: "i32.atomic.rmw8.and_u")
    OnExport(index: 393, kind: func, item_index: 395, name: "i32.atomic.rmw16.and_u")
    OnExport(index: 394, kind: func, item_index: 396, name: "i64.atomic.rmw8.and_u")
    OnExport(index: 395, kind: func, item_index: 397, name: "i64.atomic.rmw16.and_u")
    OnExport(index: 396, kind: func, item_index: 398, name: "i64.atomic.rmw32.and_u")
    OnExport(index: 397, kind: func, item_index: 399, name: "i32.atomic.rmw.or")
    OnExport(index: 398, kind: func, item_index: 400, name: "i64.atomic.rmw.or")
    OnExport(index: 399, kind: func, item_index: 401, name: "i32.atomic.rmw8.or_u")
    OnExport(index: 400, kind: func, item_index: 402, name: "i32.atomic.rmw16.or_u")
    OnExport(index: 401, kind: func, item_index: 403, name: "i64.atomic.rmw8.or_u")
    OnExport(index: 402, kind: func, item_index: 404, name: "i64.atomic.rmw16.or_u")
    OnExport(index: 403, kind: func, item_index: 405, name: "i64.atomic.rmw32.or_u")
    OnExport(index: 404, kind: func, item_index: 406, name: "i32.atomic.rmw.xor")
    OnExport(index: 405, kind: func, item_index: 407, name: "i64.atomic.rmw.xor")
    OnExport(index: 406, kind: func, item_index: 408, name: "i32.atomic.rmw8.xor_u")
    OnExport(index: 407, kind: func, item_index: 409, name: "i32.atomic.rmw16.xor_u")
    OnExport(index: 408, kind: func, item_index: 410, name: "i64.atomic.rmw8.xor_u")
    OnExport(index: 409, kind: func, item_index: 411, name: "i64.atomic.rmw16.xor_u")
    OnExport(index: 410, kind: func, item_index: 412, name: "i64.atomic.rmw32.xor_u")
    OnExport(index: 411, kind: func, item_index: 413, name: "i32.atomic.rmw.xchg")
    OnExport(index: 412, kind: func, item_index: 414, name: "i64.atomic.rmw.xchg")
    OnExport(index: 413, kind: func, item_index: 415, name: "i32.atomic.rmw8.xchg_u")
    OnExport(index: 414, kind: func, item_index: 416, name: "i32.atomic.rmw16.xchg_u")
    OnExport(index: 415, kind: func, item_index: 417, name: "i64.atomic.rmw8.xchg_u")
    OnExport(index: 416, kind: func, item_index: 418, name: "i64.atomic.rmw16.xchg_u")
    OnExport(index: 417, kind: func, item_index: 419, name: "i64.atomic.rmw32.xchg_u")
    OnExport(index: 418, kind: func, item_index: 420, name: "i32.atomic.rmw.cmpxchg")
    OnExport(index: 419, kind: func, item_index: 421, name: "i64.atomic.rmw.cmpxchg")
    OnExport(index: 420, kind: func, item_index: 422, name: "i32.atomic.rmw8.cmpxchg_u")
    OnExport(index: 421, kind: func, item_index: 423, name: "i32.atomic.rmw16.cmpxchg_u")
    OnExport(index: 422, kind: func, item_index: 424, name: "i64.atomic.rmw8.cmpxchg_u")
    OnExport(index: 423, kind: func, item_index: 425, name: "i64.atomic.rmw16.cmpxchg_u")
    OnExport(index: 424, kind: func, item_index: 426, name: "i64.atomic.rmw32.cmpxchg_u")
  EndExportSection
  BeginElemSection(11)
    OnElemSegmentCount(2)
    BeginElemSegment(index: 0, table_index: 0, flags: 0, elem_type: funcref)
    BeginElemSegmentInitExpr(0)
    OnInitExprI32ConstExpr(index: 0, value: 0)
    EndElemSegmentInitExpr(0)
    OnElemSegmentElemExprCount(index: 0, count: 2)
    OnElemSegmentElemExpr_RefFunc(index: 0, func_index: 1)
    OnElemSegmentElemExpr_RefFunc(index: 0, func_index: 1)
    EndElemSegment(0)
    BeginElemSegment(index: 1, table_index: 0, flags: 1, elem_type: funcref)
    OnElemSegmentElemExprCount(index: 1, count: 0)
    EndElemSegment(1)
  EndElemSection
  BeginDataCountSection(1)
    OnDataCount(1)
  EndDataCountSection
  BeginCodeSection(8291)
    OnFunctionBodyCount(426)
    BeginFunctionBody(1, size:2)
    OnLocalDeclCount(0)
    EndFunctionBody(1)
    BeginFunctionBody(2, size:3)
    OnLocalDeclCount(0)
    OnUnreachableExpr
    EndFunctionBody(2)
    BeginFunctionBody(3, size:4)
    OnLocalDeclCount(0)
    OnBrExpr(depth: 0)
    EndFunctionBody(3)
    BeginFunctionBody(4, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnBrTableExpr(num_targets: 0, depths: [], default: 0)
    EndFunctionBody(4)
    BeginFunctionBody(5, size:3)
    OnLocalDeclCount(0)
    OnReturnExpr
    EndFunctionBody(5)
    BeginFunctionBody(6, size:4)
    OnLocalDeclCount(0)
    OnCallExpr(func_index: 1)
    EndFunctionBody(6)
    BeginFunctionBody(7, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnCallIndirectExpr(sig_index: 0, table_index: 0)
    EndFunctionBody(7)
    BeginFunctionBody(8, size:4)
    OnLocalDeclCount(0)
    OnReturnCallExpr(func_index: 1)
    EndFunctionBody(8)
    BeginFunctionBody(9, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnReturnCallIndirectExpr(sig_index: 0, table_index: 0)
    EndFunctionBody(9)
    BeginFunctionBody(10, size:5)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnDropExpr
    EndFunctionBody(10)
    BeginFunctionBody(11, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnSelectExpr(return_type: any)
    OnDropExpr
    EndFunctionBody(11)
    BeginFunctionBody(12, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnSelectExpr(return_type: i32)
    OnDropExpr
    EndFunctionBody(12)
    BeginFunctionBody(13, size:7)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    OnLocalGetExpr(index: 0)
    OnDropExpr
    EndFunctionBody(13)
    BeginFunctionBody(14, size:8)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    OnI32ConstExpr(1 (0x1))
    OnLocalSetExpr(index: 0)
    EndFunctionBody(14)
    BeginFunctionBody(15, size:9)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    OnI32ConstExpr(1 (0x1))
    OnLocalTeeExpr(index: 0)
    OnDropExpr
    EndFunctionBody(15)
    BeginFunctionBody(16, size:5)
    OnLocalDeclCount(0)
    OnGlobalGetExpr(index: 0)
    OnDropExpr
    EndFunctionBody(16)
    BeginFunctionBody(17, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnGlobalSetExpr(index: 0)
    EndFunctionBody(17)
    BeginFunctionBody(18, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load" (40), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(18)
    BeginFunctionBody(19, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load" (41), align log2: 3, offset: 2)
    OnDropExpr
    EndFunctionBody(19)
    BeginFunctionBody(20, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "f32.load" (42), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(20)
    BeginFunctionBody(21, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "f64.load" (43), align log2: 3, offset: 2)
    OnDropExpr
    EndFunctionBody(21)
    BeginFunctionBody(22, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load8_s" (44), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(22)
    BeginFunctionBody(23, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load8_u" (45), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(23)
    BeginFunctionBody(24, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load16_s" (46), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(24)
    BeginFunctionBody(25, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i32.load16_u" (47), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(25)
    BeginFunctionBody(26, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load8_s" (48), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(26)
    BeginFunctionBody(27, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load8_u" (49), align log2: 0, offset: 2)
    OnDropExpr
    EndFunctionBody(27)
    BeginFunctionBody(28, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load16_s" (50), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(28)
    BeginFunctionBody(29, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load16_u" (51), align log2: 1, offset: 2)
    OnDropExpr
    EndFunctionBody(29)
    BeginFunctionBody(30, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load32_s" (52), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(30)
    BeginFunctionBody(31, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "i64.load32_u" (53), align log2: 2, offset: 2)
    OnDropExpr
    EndFunctionBody(31)
    BeginFunctionBody(32, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i32.store" (54), align log2: 2, offset: 2)
    EndFunctionBody(32)
    BeginFunctionBody(33, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store" (55), align log2: 3, offset: 2)
    EndFunctionBody(33)
    BeginFunctionBody(34, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnF32ConstExpr(2 (0x0440000000))
    OnStoreExpr(opcode: "f32.store" (56), align log2: 2, offset: 2)
    EndFunctionBody(34)
    BeginFunctionBody(35, size:16)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnStoreExpr(opcode: "f64.store" (57), align log2: 3, offset: 2)
    EndFunctionBody(35)
    BeginFunctionBody(36, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i32.store8" (58), align log2: 0, offset: 2)
    EndFunctionBody(36)
    BeginFunctionBody(37, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i32.store16" (59), align log2: 1, offset: 2)
    EndFunctionBody(37)
    BeginFunctionBody(38, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store8" (60), align log2: 0, offset: 2)
    EndFunctionBody(38)
    BeginFunctionBody(39, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store16" (61), align log2: 1, offset: 2)
    EndFunctionBody(39)
    BeginFunctionBody(40, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnStoreExpr(opcode: "i64.store32" (62), align log2: 2, offset: 2)
    EndFunctionBody(40)
    BeginFunctionBody(41, size:5)
    OnLocalDeclCount(0)
    OnMemorySizeExpr
    OnDropExpr
    EndFunctionBody(41)
    BeginFunctionBody(42, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnMemoryGrowExpr
    OnDropExpr
    EndFunctionBody(42)
    BeginFunctionBody(43, size:5)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnDropExpr
    EndFunctionBody(43)
    BeginFunctionBody(44, size:5)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnDropExpr
    EndFunctionBody(44)
    BeginFunctionBody(45, size:8)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnDropExpr
    EndFunctionBody(45)
    BeginFunctionBody(46, size:12)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnDropExpr
    EndFunctionBody(46)
    BeginFunctionBody(47, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("i32.eqz" (69))
    OnDropExpr
    EndFunctionBody(47)
    BeginFunctionBody(48, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.eq" (70))
    OnDropExpr
    EndFunctionBody(48)
    BeginFunctionBody(49, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.ne" (71))
    OnDropExpr
    EndFunctionBody(49)
    BeginFunctionBody(50, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.lt_s" (72))
    OnDropExpr
    EndFunctionBody(50)
    BeginFunctionBody(51, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.lt_u" (73))
    OnDropExpr
    EndFunctionBody(51)
    BeginFunctionBody(52, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.gt_s" (74))
    OnDropExpr
    EndFunctionBody(52)
    BeginFunctionBody(53, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.gt_u" (75))
    OnDropExpr
    EndFunctionBody(53)
    BeginFunctionBody(54, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.le_s" (76))
    OnDropExpr
    EndFunctionBody(54)
    BeginFunctionBody(55, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.le_u" (77))
    OnDropExpr
    EndFunctionBody(55)
    BeginFunctionBody(56, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.ge_s" (78))
    OnDropExpr
    EndFunctionBody(56)
    BeginFunctionBody(57, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnCompareExpr("i32.ge_u" (79))
    OnDropExpr
    EndFunctionBody(57)
    BeginFunctionBody(58, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("i64.eqz" (80))
    OnDropExpr
    EndFunctionBody(58)
    BeginFunctionBody(59, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.eq" (81))
    OnDropExpr
    EndFunctionBody(59)
    BeginFunctionBody(60, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.ne" (82))
    OnDropExpr
    EndFunctionBody(60)
    BeginFunctionBody(61, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.lt_s" (83))
    OnDropExpr
    EndFunctionBody(61)
    BeginFunctionBody(62, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.lt_u" (84))
    OnDropExpr
    EndFunctionBody(62)
    BeginFunctionBody(63, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.gt_s" (85))
    OnDropExpr
    EndFunctionBody(63)
    BeginFunctionBody(64, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.gt_u" (86))
    OnDropExpr
    EndFunctionBody(64)
    BeginFunctionBody(65, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.le_s" (87))
    OnDropExpr
    EndFunctionBody(65)
    BeginFunctionBody(66, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.le_u" (88))
    OnDropExpr
    EndFunctionBody(66)
    BeginFunctionBody(67, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.ge_s" (89))
    OnDropExpr
    EndFunctionBody(67)
    BeginFunctionBody(68, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnCompareExpr("i64.ge_u" (90))
    OnDropExpr
    EndFunctionBody(68)
    BeginFunctionBody(69, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.eq" (91))
    OnDropExpr
    EndFunctionBody(69)
    BeginFunctionBody(70, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.ne" (92))
    OnDropExpr
    EndFunctionBody(70)
    BeginFunctionBody(71, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.lt" (93))
    OnDropExpr
    EndFunctionBody(71)
    BeginFunctionBody(72, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.gt" (94))
    OnDropExpr
    EndFunctionBody(72)
    BeginFunctionBody(73, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.le" (95))
    OnDropExpr
    EndFunctionBody(73)
    BeginFunctionBody(74, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnCompareExpr("f32.ge" (96))
    OnDropExpr
    EndFunctionBody(74)
    BeginFunctionBody(75, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.eq" (97))
    OnDropExpr
    EndFunctionBody(75)
    BeginFunctionBody(76, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.ne" (98))
    OnDropExpr
    EndFunctionBody(76)
    BeginFunctionBody(77, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.lt" (99))
    OnDropExpr
    EndFunctionBody(77)
    BeginFunctionBody(78, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.gt" (100))
    OnDropExpr
    EndFunctionBody(78)
    BeginFunctionBody(79, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.le" (101))
    OnDropExpr
    EndFunctionBody(79)
    BeginFunctionBody(80, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnCompareExpr("f64.ge" (102))
    OnDropExpr
    EndFunctionBody(80)
    BeginFunctionBody(81, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.clz" (103))
    OnDropExpr
    EndFunctionBody(81)
    BeginFunctionBody(82, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.ctz" (104))
    OnDropExpr
    EndFunctionBody(82)
    BeginFunctionBody(83, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.popcnt" (105))
    OnDropExpr
    EndFunctionBody(83)
    BeginFunctionBody(84, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.add" (106))
    OnDropExpr
    EndFunctionBody(84)
    BeginFunctionBody(85, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.sub" (107))
    OnDropExpr
    EndFunctionBody(85)
    BeginFunctionBody(86, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.mul" (108))
    OnDropExpr
    EndFunctionBody(86)
    BeginFunctionBody(87, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.div_s" (109))
    OnDropExpr
    EndFunctionBody(87)
    BeginFunctionBody(88, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.div_u" (110))
    OnDropExpr
    EndFunctionBody(88)
    BeginFunctionBody(89, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rem_s" (111))
    OnDropExpr
    EndFunctionBody(89)
    BeginFunctionBody(90, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rem_u" (112))
    OnDropExpr
    EndFunctionBody(90)
    BeginFunctionBody(91, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.and" (113))
    OnDropExpr
    EndFunctionBody(91)
    BeginFunctionBody(92, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.or" (114))
    OnDropExpr
    EndFunctionBody(92)
    BeginFunctionBody(93, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.xor" (115))
    OnDropExpr
    EndFunctionBody(93)
    BeginFunctionBody(94, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.shl" (116))
    OnDropExpr
    EndFunctionBody(94)
    BeginFunctionBody(95, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.shr_s" (117))
    OnDropExpr
    EndFunctionBody(95)
    BeginFunctionBody(96, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.shr_u" (118))
    OnDropExpr
    EndFunctionBody(96)
    BeginFunctionBody(97, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rotl" (119))
    OnDropExpr
    EndFunctionBody(97)
    BeginFunctionBody(98, size:8)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBinaryExpr("i32.rotr" (120))
    OnDropExpr
    EndFunctionBody(98)
    BeginFunctionBody(99, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.clz" (121))
    OnDropExpr
    EndFunctionBody(99)
    BeginFunctionBody(100, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.ctz" (122))
    OnDropExpr
    EndFunctionBody(100)
    BeginFunctionBody(101, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.popcnt" (123))
    OnDropExpr
    EndFunctionBody(101)
    BeginFunctionBody(102, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.add" (124))
    OnDropExpr
    EndFunctionBody(102)
    BeginFunctionBody(103, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.sub" (125))
    OnDropExpr
    EndFunctionBody(103)
    BeginFunctionBody(104, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.mul" (126))
    OnDropExpr
    EndFunctionBody(104)
    BeginFunctionBody(105, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.div_s" (127))
    OnDropExpr
    EndFunctionBody(105)
    BeginFunctionBody(106, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.div_u" (128))
    OnDropExpr
    EndFunctionBody(106)
    BeginFunctionBody(107, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rem_s" (129))
    OnDropExpr
    EndFunctionBody(107)
    BeginFunctionBody(108, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rem_u" (130))
    OnDropExpr
    EndFunctionBody(108)
    BeginFunctionBody(109, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.and" (131))
    OnDropExpr
    EndFunctionBody(109)
    BeginFunctionBody(110, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.or" (132))
    OnDropExpr
    EndFunctionBody(110)
    BeginFunctionBody(111, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.xor" (133))
    OnDropExpr
    EndFunctionBody(111)
    BeginFunctionBody(112, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.shl" (134))
    OnDropExpr
    EndFunctionBody(112)
    BeginFunctionBody(113, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.shr_s" (135))
    OnDropExpr
    EndFunctionBody(113)
    BeginFunctionBody(114, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.shr_u" (136))
    OnDropExpr
    EndFunctionBody(114)
    BeginFunctionBody(115, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rotl" (137))
    OnDropExpr
    EndFunctionBody(115)
    BeginFunctionBody(116, size:8)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnBinaryExpr("i64.rotr" (138))
    OnDropExpr
    EndFunctionBody(116)
    BeginFunctionBody(117, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.abs" (139))
    OnDropExpr
    EndFunctionBody(117)
    BeginFunctionBody(118, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.neg" (140))
    OnDropExpr
    EndFunctionBody(118)
    BeginFunctionBody(119, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.ceil" (141))
    OnDropExpr
    EndFunctionBody(119)
    BeginFunctionBody(120, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.floor" (142))
    OnDropExpr
    EndFunctionBody(120)
    BeginFunctionBody(121, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.trunc" (143))
    OnDropExpr
    EndFunctionBody(121)
    BeginFunctionBody(122, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.nearest" (144))
    OnDropExpr
    EndFunctionBody(122)
    BeginFunctionBody(123, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32.sqrt" (145))
    OnDropExpr
    EndFunctionBody(123)
    BeginFunctionBody(124, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.add" (146))
    OnDropExpr
    EndFunctionBody(124)
    BeginFunctionBody(125, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.sub" (147))
    OnDropExpr
    EndFunctionBody(125)
    BeginFunctionBody(126, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.mul" (148))
    OnDropExpr
    EndFunctionBody(126)
    BeginFunctionBody(127, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.div" (149))
    OnDropExpr
    EndFunctionBody(127)
    BeginFunctionBody(128, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.min" (150))
    OnDropExpr
    EndFunctionBody(128)
    BeginFunctionBody(129, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.max" (151))
    OnDropExpr
    EndFunctionBody(129)
    BeginFunctionBody(130, size:14)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnF32ConstExpr(2 (0x0440000000))
    OnBinaryExpr("f32.copysign" (152))
    OnDropExpr
    EndFunctionBody(130)
    BeginFunctionBody(131, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.abs" (153))
    OnDropExpr
    EndFunctionBody(131)
    BeginFunctionBody(132, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.neg" (154))
    OnDropExpr
    EndFunctionBody(132)
    BeginFunctionBody(133, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.ceil" (155))
    OnDropExpr
    EndFunctionBody(133)
    BeginFunctionBody(134, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.floor" (156))
    OnDropExpr
    EndFunctionBody(134)
    BeginFunctionBody(135, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.trunc" (157))
    OnDropExpr
    EndFunctionBody(135)
    BeginFunctionBody(136, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.nearest" (158))
    OnDropExpr
    EndFunctionBody(136)
    BeginFunctionBody(137, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64.sqrt" (159))
    OnDropExpr
    EndFunctionBody(137)
    BeginFunctionBody(138, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.add" (160))
    OnDropExpr
    EndFunctionBody(138)
    BeginFunctionBody(139, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.sub" (161))
    OnDropExpr
    EndFunctionBody(139)
    BeginFunctionBody(140, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.mul" (162))
    OnDropExpr
    EndFunctionBody(140)
    BeginFunctionBody(141, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.div" (163))
    OnDropExpr
    EndFunctionBody(141)
    BeginFunctionBody(142, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.min" (164))
    OnDropExpr
    EndFunctionBody(142)
    BeginFunctionBody(143, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.max" (165))
    OnDropExpr
    EndFunctionBody(143)
    BeginFunctionBody(144, size:22)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnF64ConstExpr(2 (0x084000000000000000))
    OnBinaryExpr("f64.copysign" (166))
    OnDropExpr
    EndFunctionBody(144)
    BeginFunctionBody(145, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("i32.wrap_i64" (167))
    OnDropExpr
    EndFunctionBody(145)
    BeginFunctionBody(146, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_f32_s" (168))
    OnDropExpr
    EndFunctionBody(146)
    BeginFunctionBody(147, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_f32_u" (169))
    OnDropExpr
    EndFunctionBody(147)
    BeginFunctionBody(148, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_f64_s" (170))
    OnDropExpr
    EndFunctionBody(148)
    BeginFunctionBody(149, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_f64_u" (171))
    OnDropExpr
    EndFunctionBody(149)
    BeginFunctionBody(150, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("i64.extend_i32_s" (172))
    OnDropExpr
    EndFunctionBody(150)
    BeginFunctionBody(151, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("i64.extend_i32_u" (173))
    OnDropExpr
    EndFunctionBody(151)
    BeginFunctionBody(152, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_f32_s" (174))
    OnDropExpr
    EndFunctionBody(152)
    BeginFunctionBody(153, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_f32_u" (175))
    OnDropExpr
    EndFunctionBody(153)
    BeginFunctionBody(154, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_f64_s" (176))
    OnDropExpr
    EndFunctionBody(154)
    BeginFunctionBody(155, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_f64_u" (177))
    OnDropExpr
    EndFunctionBody(155)
    BeginFunctionBody(156, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_i32_s" (178))
    OnDropExpr
    EndFunctionBody(156)
    BeginFunctionBody(157, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_i32_u" (179))
    OnDropExpr
    EndFunctionBody(157)
    BeginFunctionBody(158, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_i64_s" (180))
    OnDropExpr
    EndFunctionBody(158)
    BeginFunctionBody(159, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f32.convert_i64_u" (181))
    OnDropExpr
    EndFunctionBody(159)
    BeginFunctionBody(160, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("f32.demote_f64" (182))
    OnDropExpr
    EndFunctionBody(160)
    BeginFunctionBody(161, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_i32_s" (183))
    OnDropExpr
    EndFunctionBody(161)
    BeginFunctionBody(162, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_i32_u" (184))
    OnDropExpr
    EndFunctionBody(162)
    BeginFunctionBody(163, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_i64_s" (185))
    OnDropExpr
    EndFunctionBody(163)
    BeginFunctionBody(164, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f64.convert_i64_u" (186))
    OnDropExpr
    EndFunctionBody(164)
    BeginFunctionBody(165, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("f64.promote_f32" (187))
    OnDropExpr
    EndFunctionBody(165)
    BeginFunctionBody(166, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnConvertExpr("f32.reinterpret_i32" (190))
    OnDropExpr
    EndFunctionBody(166)
    BeginFunctionBody(167, size:9)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.reinterpret_f32" (188))
    OnDropExpr
    EndFunctionBody(167)
    BeginFunctionBody(168, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnConvertExpr("f64.reinterpret_i64" (191))
    OnDropExpr
    EndFunctionBody(168)
    BeginFunctionBody(169, size:13)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.reinterpret_f64" (189))
    OnDropExpr
    EndFunctionBody(169)
    BeginFunctionBody(170, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.extend8_s" (192))
    OnDropExpr
    EndFunctionBody(170)
    BeginFunctionBody(171, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32.extend16_s" (193))
    OnDropExpr
    EndFunctionBody(171)
    BeginFunctionBody(172, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.extend8_s" (194))
    OnDropExpr
    EndFunctionBody(172)
    BeginFunctionBody(173, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.extend16_s" (195))
    OnDropExpr
    EndFunctionBody(173)
    BeginFunctionBody(174, size:6)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64.extend32_s" (196))
    OnDropExpr
    EndFunctionBody(174)
    BeginFunctionBody(175, size:4)
    OnLocalDeclCount(1)
    OnLocalDecl(index: 0, count: 1, type: i32)
    EndFunctionBody(175)
    BeginFunctionBody(176, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnBrIfExpr(depth: 0)
    EndFunctionBody(176)
    BeginFunctionBody(177, size:6)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnCallExpr(func_index: 0)
    EndFunctionBody(177)
    BeginFunctionBody(178, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnBrTableExpr(num_targets: 0, depths: [], default: 0)
    EndFunctionBody(178)
    BeginFunctionBody(179, size:12)
    OnLocalDeclCount(0)
    OnBlockExpr(sig: i32)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnBrExpr(depth: 0)
    OnEndExpr
    OnDropExpr
    EndFunctionBody(179)
    BeginFunctionBody(180, size:10)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_sat_f32_s" (0))
    OnDropExpr
    EndFunctionBody(180)
    BeginFunctionBody(181, size:10)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i32.trunc_sat_f32_u" (1))
    OnDropExpr
    EndFunctionBody(181)
    BeginFunctionBody(182, size:14)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_sat_f64_s" (2))
    OnDropExpr
    EndFunctionBody(182)
    BeginFunctionBody(183, size:14)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i32.trunc_sat_f64_u" (3))
    OnDropExpr
    EndFunctionBody(183)
    BeginFunctionBody(184, size:10)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_sat_f32_s" (4))
    OnDropExpr
    EndFunctionBody(184)
    BeginFunctionBody(185, size:10)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnConvertExpr("i64.trunc_sat_f32_u" (5))
    OnDropExpr
    EndFunctionBody(185)
    BeginFunctionBody(186, size:14)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_sat_f64_s" (6))
    OnDropExpr
    EndFunctionBody(186)
    BeginFunctionBody(187, size:14)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnConvertExpr("i64.trunc_sat_f64_u" (7))
    OnDropExpr
    EndFunctionBody(187)
    BeginFunctionBody(188, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnMemoryInitExpr(0)
    EndFunctionBody(188)
    BeginFunctionBody(189, size:5)
    OnLocalDeclCount(0)
    OnDataDropExpr(0)
    EndFunctionBody(189)
    BeginFunctionBody(190, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnMemoryCopyExpr
    EndFunctionBody(190)
    BeginFunctionBody(191, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnMemoryFillExpr
    EndFunctionBody(191)
    BeginFunctionBody(192, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnTableInitExpr(segment_index: 0, table_index: 0)
    EndFunctionBody(192)
    BeginFunctionBody(193, size:5)
    OnLocalDeclCount(0)
    OnElemDropExpr(0)
    EndFunctionBody(193)
    BeginFunctionBody(194, size:12)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnTableCopyExpr(dst_index: 0, src_index: 0)
    EndFunctionBody(194)
    BeginFunctionBody(195, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadExpr(opcode: "v128.load" (0), align log2: 4, offset: 3)
    OnDropExpr
    EndFunctionBody(195)
    BeginFunctionBody(196, size:26)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnStoreExpr(opcode: "v128.store" (1), align log2: 4, offset: 3)
    EndFunctionBody(196)
    BeginFunctionBody(197, size:21)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnDropExpr
    EndFunctionBody(197)
    BeginFunctionBody(198, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i8x16.splat" (4))
    OnDropExpr
    EndFunctionBody(198)
    BeginFunctionBody(199, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 15)
    OnDropExpr
    EndFunctionBody(199)
    BeginFunctionBody(200, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 15)
    OnDropExpr
    EndFunctionBody(200)
    BeginFunctionBody(201, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnSimdLaneOpExpr (lane: 15)
    OnDropExpr
    EndFunctionBody(201)
    BeginFunctionBody(202, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i16x8.splat" (8))
    OnDropExpr
    EndFunctionBody(202)
    BeginFunctionBody(203, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 7)
    OnDropExpr
    EndFunctionBody(203)
    BeginFunctionBody(204, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 7)
    OnDropExpr
    EndFunctionBody(204)
    BeginFunctionBody(205, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnSimdLaneOpExpr (lane: 7)
    OnDropExpr
    EndFunctionBody(205)
    BeginFunctionBody(206, size:7)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnUnaryExpr("i32x4.splat" (12))
    OnDropExpr
    EndFunctionBody(206)
    BeginFunctionBody(207, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 3)
    OnDropExpr
    EndFunctionBody(207)
    BeginFunctionBody(208, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnSimdLaneOpExpr (lane: 3)
    OnDropExpr
    EndFunctionBody(208)
    BeginFunctionBody(209, size:7)
    OnLocalDeclCount(0)
    OnI64ConstExpr(1 (0x1))
    OnUnaryExpr("i64x2.splat" (15))
    OnDropExpr
    EndFunctionBody(209)
    BeginFunctionBody(210, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 1)
    OnDropExpr
    EndFunctionBody(210)
    BeginFunctionBody(211, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI64ConstExpr(0 (0x0))
    OnSimdLaneOpExpr (lane: 1)
    OnDropExpr
    EndFunctionBody(211)
    BeginFunctionBody(212, size:10)
    OnLocalDeclCount(0)
    OnF32ConstExpr(1 (0x043f800000))
    OnUnaryExpr("f32x4.splat" (18))
    OnDropExpr
    EndFunctionBody(212)
    BeginFunctionBody(213, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 3)
    OnDropExpr
    EndFunctionBody(213)
    BeginFunctionBody(214, size:29)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnF32ConstExpr(0 (0x040))
    OnSimdLaneOpExpr (lane: 3)
    OnDropExpr
    EndFunctionBody(214)
    BeginFunctionBody(215, size:14)
    OnLocalDeclCount(0)
    OnF64ConstExpr(1 (0x083ff0000000000000))
    OnUnaryExpr("f64x2.splat" (21))
    OnDropExpr
    EndFunctionBody(215)
    BeginFunctionBody(216, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnSimdLaneOpExpr (lane: 1)
    OnDropExpr
    EndFunctionBody(216)
    BeginFunctionBody(217, size:33)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnF64ConstExpr(0 (0x080))
    OnSimdLaneOpExpr (lane: 1)
    OnDropExpr
    EndFunctionBody(217)
    BeginFunctionBody(218, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.eq" (24))
    OnDropExpr
    EndFunctionBody(218)
    BeginFunctionBody(219, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.ne" (25))
    OnDropExpr
    EndFunctionBody(219)
    BeginFunctionBody(220, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.lt_s" (26))
    OnDropExpr
    EndFunctionBody(220)
    BeginFunctionBody(221, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.lt_u" (27))
    OnDropExpr
    EndFunctionBody(221)
    BeginFunctionBody(222, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.gt_s" (28))
    OnDropExpr
    EndFunctionBody(222)
    BeginFunctionBody(223, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.gt_u" (29))
    OnDropExpr
    EndFunctionBody(223)
    BeginFunctionBody(224, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.le_s" (30))
    OnDropExpr
    EndFunctionBody(224)
    BeginFunctionBody(225, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.le_u" (31))
    OnDropExpr
    EndFunctionBody(225)
    BeginFunctionBody(226, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.ge_s" (32))
    OnDropExpr
    EndFunctionBody(226)
    BeginFunctionBody(227, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i8x16.ge_u" (33))
    OnDropExpr
    EndFunctionBody(227)
    BeginFunctionBody(228, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.eq" (34))
    OnDropExpr
    EndFunctionBody(228)
    BeginFunctionBody(229, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.ne" (35))
    OnDropExpr
    EndFunctionBody(229)
    BeginFunctionBody(230, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.lt_s" (36))
    OnDropExpr
    EndFunctionBody(230)
    BeginFunctionBody(231, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.lt_u" (37))
    OnDropExpr
    EndFunctionBody(231)
    BeginFunctionBody(232, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.gt_s" (38))
    OnDropExpr
    EndFunctionBody(232)
    BeginFunctionBody(233, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.gt_u" (39))
    OnDropExpr
    EndFunctionBody(233)
    BeginFunctionBody(234, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.le_s" (40))
    OnDropExpr
    EndFunctionBody(234)
    BeginFunctionBody(235, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.le_u" (41))
    OnDropExpr
    EndFunctionBody(235)
    BeginFunctionBody(236, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.ge_s" (42))
    OnDropExpr
    EndFunctionBody(236)
    BeginFunctionBody(237, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i16x8.ge_u" (43))
    OnDropExpr
    EndFunctionBody(237)
    BeginFunctionBody(238, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.eq" (44))
    OnDropExpr
    EndFunctionBody(238)
    BeginFunctionBody(239, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.ne" (45))
    OnDropExpr
    EndFunctionBody(239)
    BeginFunctionBody(240, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.lt_s" (46))
    OnDropExpr
    EndFunctionBody(240)
    BeginFunctionBody(241, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.lt_u" (47))
    OnDropExpr
    EndFunctionBody(241)
    BeginFunctionBody(242, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.gt_s" (48))
    OnDropExpr
    EndFunctionBody(242)
    BeginFunctionBody(243, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.gt_u" (49))
    OnDropExpr
    EndFunctionBody(243)
    BeginFunctionBody(244, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.le_s" (50))
    OnDropExpr
    EndFunctionBody(244)
    BeginFunctionBody(245, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.le_u" (51))
    OnDropExpr
    EndFunctionBody(245)
    BeginFunctionBody(246, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.ge_s" (52))
    OnDropExpr
    EndFunctionBody(246)
    BeginFunctionBody(247, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("i32x4.ge_u" (53))
    OnDropExpr
    EndFunctionBody(247)
    BeginFunctionBody(248, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.eq" (64))
    OnDropExpr
    EndFunctionBody(248)
    BeginFunctionBody(249, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.ne" (65))
    OnDropExpr
    EndFunctionBody(249)
    BeginFunctionBody(250, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.lt" (66))
    OnDropExpr
    EndFunctionBody(250)
    BeginFunctionBody(251, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.gt" (67))
    OnDropExpr
    EndFunctionBody(251)
    BeginFunctionBody(252, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.le" (68))
    OnDropExpr
    EndFunctionBody(252)
    BeginFunctionBody(253, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f32x4.ge" (69))
    OnDropExpr
    EndFunctionBody(253)
    BeginFunctionBody(254, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.eq" (70))
    OnDropExpr
    EndFunctionBody(254)
    BeginFunctionBody(255, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.ne" (71))
    OnDropExpr
    EndFunctionBody(255)
    BeginFunctionBody(256, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.lt" (72))
    OnDropExpr
    EndFunctionBody(256)
    BeginFunctionBody(257, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.gt" (73))
    OnDropExpr
    EndFunctionBody(257)
    BeginFunctionBody(258, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.le" (74))
    OnDropExpr
    EndFunctionBody(258)
    BeginFunctionBody(259, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnCompareExpr("f64x2.ge" (75))
    OnDropExpr
    EndFunctionBody(259)
    BeginFunctionBody(260, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("v128.not" (76))
    OnDropExpr
    EndFunctionBody(260)
    BeginFunctionBody(261, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("v128.and" (77))
    OnDropExpr
    EndFunctionBody(261)
    BeginFunctionBody(262, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("v128.or" (78))
    OnDropExpr
    EndFunctionBody(262)
    BeginFunctionBody(263, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("v128.xor" (79))
    OnDropExpr
    EndFunctionBody(263)
    BeginFunctionBody(264, size:59)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnV128ConstExpr(0x00000003 0x00000003 0x00000003 0x00000003)
    OnTernaryExpr("v128.bitselect" (80))
    OnDropExpr
    EndFunctionBody(264)
    BeginFunctionBody(265, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i8x16.neg" (81))
    OnDropExpr
    EndFunctionBody(265)
    BeginFunctionBody(266, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i8x16.any_true" (82))
    OnDropExpr
    EndFunctionBody(266)
    BeginFunctionBody(267, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i8x16.all_true" (83))
    OnDropExpr
    EndFunctionBody(267)
    BeginFunctionBody(268, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i8x16.shl" (84))
    OnDropExpr
    EndFunctionBody(268)
    BeginFunctionBody(269, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i8x16.shr_s" (85))
    OnDropExpr
    EndFunctionBody(269)
    BeginFunctionBody(270, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i8x16.shr_u" (86))
    OnDropExpr
    EndFunctionBody(270)
    BeginFunctionBody(271, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.add" (87))
    OnDropExpr
    EndFunctionBody(271)
    BeginFunctionBody(272, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.add_saturate_s" (88))
    OnDropExpr
    EndFunctionBody(272)
    BeginFunctionBody(273, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.add_saturate_u" (89))
    OnDropExpr
    EndFunctionBody(273)
    BeginFunctionBody(274, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.sub" (90))
    OnDropExpr
    EndFunctionBody(274)
    BeginFunctionBody(275, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.sub_saturate_s" (91))
    OnDropExpr
    EndFunctionBody(275)
    BeginFunctionBody(276, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.sub_saturate_u" (92))
    OnDropExpr
    EndFunctionBody(276)
    BeginFunctionBody(277, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.mul" (93))
    OnDropExpr
    EndFunctionBody(277)
    BeginFunctionBody(278, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.neg" (98))
    OnDropExpr
    EndFunctionBody(278)
    BeginFunctionBody(279, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.any_true" (99))
    OnDropExpr
    EndFunctionBody(279)
    BeginFunctionBody(280, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.all_true" (100))
    OnDropExpr
    EndFunctionBody(280)
    BeginFunctionBody(281, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i16x8.shl" (101))
    OnDropExpr
    EndFunctionBody(281)
    BeginFunctionBody(282, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i16x8.shr_s" (102))
    OnDropExpr
    EndFunctionBody(282)
    BeginFunctionBody(283, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i16x8.shr_u" (103))
    OnDropExpr
    EndFunctionBody(283)
    BeginFunctionBody(284, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.add" (104))
    OnDropExpr
    EndFunctionBody(284)
    BeginFunctionBody(285, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.add_saturate_s" (105))
    OnDropExpr
    EndFunctionBody(285)
    BeginFunctionBody(286, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.add_saturate_u" (106))
    OnDropExpr
    EndFunctionBody(286)
    BeginFunctionBody(287, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.sub" (107))
    OnDropExpr
    EndFunctionBody(287)
    BeginFunctionBody(288, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.sub_saturate_s" (108))
    OnDropExpr
    EndFunctionBody(288)
    BeginFunctionBody(289, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.sub_saturate_u" (109))
    OnDropExpr
    EndFunctionBody(289)
    BeginFunctionBody(290, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.mul" (110))
    OnDropExpr
    EndFunctionBody(290)
    BeginFunctionBody(291, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i32x4.neg" (115))
    OnDropExpr
    EndFunctionBody(291)
    BeginFunctionBody(292, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i32x4.any_true" (116))
    OnDropExpr
    EndFunctionBody(292)
    BeginFunctionBody(293, size:23)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i32x4.all_true" (117))
    OnDropExpr
    EndFunctionBody(293)
    BeginFunctionBody(294, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i32x4.shl" (118))
    OnDropExpr
    EndFunctionBody(294)
    BeginFunctionBody(295, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i32x4.shr_s" (119))
    OnDropExpr
    EndFunctionBody(295)
    BeginFunctionBody(296, size:25)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i32x4.shr_u" (120))
    OnDropExpr
    EndFunctionBody(296)
    BeginFunctionBody(297, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i32x4.add" (121))
    OnDropExpr
    EndFunctionBody(297)
    BeginFunctionBody(298, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i32x4.sub" (124))
    OnDropExpr
    EndFunctionBody(298)
    BeginFunctionBody(299, size:41)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i32x4.mul" (127))
    OnDropExpr
    EndFunctionBody(299)
    BeginFunctionBody(300, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i64x2.neg" (132))
    OnDropExpr
    EndFunctionBody(300)
    BeginFunctionBody(301, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i64x2.any_true" (133))
    OnDropExpr
    EndFunctionBody(301)
    BeginFunctionBody(302, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i64x2.all_true" (134))
    OnDropExpr
    EndFunctionBody(302)
    BeginFunctionBody(303, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i64x2.shl" (135))
    OnDropExpr
    EndFunctionBody(303)
    BeginFunctionBody(304, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i64x2.shr_s" (136))
    OnDropExpr
    EndFunctionBody(304)
    BeginFunctionBody(305, size:26)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnI32ConstExpr(0 (0x0))
    OnBinaryExpr("i64x2.shr_u" (137))
    OnDropExpr
    EndFunctionBody(305)
    BeginFunctionBody(306, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i64x2.add" (138))
    OnDropExpr
    EndFunctionBody(306)
    BeginFunctionBody(307, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i64x2.sub" (141))
    OnDropExpr
    EndFunctionBody(307)
    BeginFunctionBody(308, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f32x4.abs" (149))
    OnDropExpr
    EndFunctionBody(308)
    BeginFunctionBody(309, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f32x4.neg" (150))
    OnDropExpr
    EndFunctionBody(309)
    BeginFunctionBody(310, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f32x4.sqrt" (151))
    OnDropExpr
    EndFunctionBody(310)
    BeginFunctionBody(311, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.add" (154))
    OnDropExpr
    EndFunctionBody(311)
    BeginFunctionBody(312, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.sub" (155))
    OnDropExpr
    EndFunctionBody(312)
    BeginFunctionBody(313, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.mul" (156))
    OnDropExpr
    EndFunctionBody(313)
    BeginFunctionBody(314, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.div" (157))
    OnDropExpr
    EndFunctionBody(314)
    BeginFunctionBody(315, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.min" (158))
    OnDropExpr
    EndFunctionBody(315)
    BeginFunctionBody(316, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f32x4.max" (159))
    OnDropExpr
    EndFunctionBody(316)
    BeginFunctionBody(317, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f64x2.abs" (160))
    OnDropExpr
    EndFunctionBody(317)
    BeginFunctionBody(318, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f64x2.neg" (161))
    OnDropExpr
    EndFunctionBody(318)
    BeginFunctionBody(319, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("f64x2.sqrt" (162))
    OnDropExpr
    EndFunctionBody(319)
    BeginFunctionBody(320, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.add" (165))
    OnDropExpr
    EndFunctionBody(320)
    BeginFunctionBody(321, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.sub" (166))
    OnDropExpr
    EndFunctionBody(321)
    BeginFunctionBody(322, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.mul" (167))
    OnDropExpr
    EndFunctionBody(322)
    BeginFunctionBody(323, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.div" (168))
    OnDropExpr
    EndFunctionBody(323)
    BeginFunctionBody(324, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.min" (169))
    OnDropExpr
    EndFunctionBody(324)
    BeginFunctionBody(325, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("f64x2.max" (170))
    OnDropExpr
    EndFunctionBody(325)
    BeginFunctionBody(326, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("i32x4.trunc_sat_f32x4_s" (171))
    OnDropExpr
    EndFunctionBody(326)
    BeginFunctionBody(327, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("i32x4.trunc_sat_f32x4_u" (172))
    OnDropExpr
    EndFunctionBody(327)
    BeginFunctionBody(328, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("i64x2.trunc_sat_f64x2_s" (173))
    OnDropExpr
    EndFunctionBody(328)
    BeginFunctionBody(329, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("i64x2.trunc_sat_f64x2_u" (174))
    OnDropExpr
    EndFunctionBody(329)
    BeginFunctionBody(330, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("f32x4.convert_i32x4_s" (175))
    OnDropExpr
    EndFunctionBody(330)
    BeginFunctionBody(331, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("f32x4.convert_i32x4_u" (176))
    OnDropExpr
    EndFunctionBody(331)
    BeginFunctionBody(332, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("f64x2.convert_i64x2_s" (177))
    OnDropExpr
    EndFunctionBody(332)
    BeginFunctionBody(333, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnConvertExpr("f64x2.convert_i64x2_u" (178))
    OnDropExpr
    EndFunctionBody(333)
    BeginFunctionBody(334, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("v8x16.swizzle" (192))
    OnDropExpr
    EndFunctionBody(334)
    BeginFunctionBody(335, size:58)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnSimdShuffleOpExpr (lane: 0x01010101 01010101 01010101 01010101)
    OnDropExpr
    EndFunctionBody(335)
    BeginFunctionBody(336, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadSplatExpr(opcode: "i8x16.load_splat" (194), align log2: 0, offset: 0)
    OnDropExpr
    EndFunctionBody(336)
    BeginFunctionBody(337, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadSplatExpr(opcode: "i16x8.load_splat" (195), align log2: 1, offset: 0)
    OnDropExpr
    EndFunctionBody(337)
    BeginFunctionBody(338, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadSplatExpr(opcode: "i32x4.load_splat" (196), align log2: 2, offset: 0)
    OnDropExpr
    EndFunctionBody(338)
    BeginFunctionBody(339, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnLoadSplatExpr(opcode: "i64x2.load_splat" (197), align log2: 3, offset: 0)
    OnDropExpr
    EndFunctionBody(339)
    BeginFunctionBody(340, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.narrow_i16x8_s" (198))
    OnDropExpr
    EndFunctionBody(340)
    BeginFunctionBody(341, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.narrow_i16x8_u" (199))
    OnDropExpr
    EndFunctionBody(341)
    BeginFunctionBody(342, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.narrow_i32x4_s" (200))
    OnDropExpr
    EndFunctionBody(342)
    BeginFunctionBody(343, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.narrow_i32x4_u" (201))
    OnDropExpr
    EndFunctionBody(343)
    BeginFunctionBody(344, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.widen_low_i8x16_s" (202))
    OnDropExpr
    EndFunctionBody(344)
    BeginFunctionBody(345, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.widen_high_i8x16_s" (203))
    OnDropExpr
    EndFunctionBody(345)
    BeginFunctionBody(346, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.widen_low_i8x16_u" (204))
    OnDropExpr
    EndFunctionBody(346)
    BeginFunctionBody(347, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i16x8.widen_high_i8x16_u" (205))
    OnDropExpr
    EndFunctionBody(347)
    BeginFunctionBody(348, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i32x4.widen_low_i16x8_s" (206))
    OnDropExpr
    EndFunctionBody(348)
    BeginFunctionBody(349, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i32x4.widen_high_i16x8_s" (207))
    OnDropExpr
    EndFunctionBody(349)
    BeginFunctionBody(350, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i32x4.widen_low_i16x8_u" (208))
    OnDropExpr
    EndFunctionBody(350)
    BeginFunctionBody(351, size:24)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnUnaryExpr("i32x4.widen_high_i16x8_u" (209))
    OnDropExpr
    EndFunctionBody(351)
    BeginFunctionBody(352, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(0 (0x0))
    OnLoadExpr(opcode: "i16x8.load8x8_s" (210), align log2: 3, offset: 0)
    OnDropExpr
    EndFunctionBody(352)
    BeginFunctionBody(353, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(0 (0x0))
    OnLoadExpr(opcode: "i16x8.load8x8_u" (211), align log2: 3, offset: 0)
    OnDropExpr
    EndFunctionBody(353)
    BeginFunctionBody(354, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(0 (0x0))
    OnLoadExpr(opcode: "i32x4.load16x4_s" (212), align log2: 3, offset: 0)
    OnDropExpr
    EndFunctionBody(354)
    BeginFunctionBody(355, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(0 (0x0))
    OnLoadExpr(opcode: "i32x4.load16x4_u" (213), align log2: 3, offset: 0)
    OnDropExpr
    EndFunctionBody(355)
    BeginFunctionBody(356, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(0 (0x0))
    OnLoadExpr(opcode: "i64x2.load32x2_s" (214), align log2: 3, offset: 0)
    OnDropExpr
    EndFunctionBody(356)
    BeginFunctionBody(357, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(0 (0x0))
    OnLoadExpr(opcode: "i64x2.load32x2_u" (215), align log2: 3, offset: 0)
    OnDropExpr
    EndFunctionBody(357)
    BeginFunctionBody(358, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("v128.andnot" (216))
    OnDropExpr
    EndFunctionBody(358)
    BeginFunctionBody(359, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i8x16.avgr_u" (217))
    OnDropExpr
    EndFunctionBody(359)
    BeginFunctionBody(360, size:42)
    OnLocalDeclCount(0)
    OnV128ConstExpr(0x00000001 0x00000001 0x00000001 0x00000001)
    OnV128ConstExpr(0x00000002 0x00000002 0x00000002 0x00000002)
    OnBinaryExpr("i16x8.avgr_u" (218))
    OnDropExpr
    EndFunctionBody(360)
    BeginFunctionBody(361, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicNotifyExpr(opcode: "atomic.notify" (0), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(361)
    BeginFunctionBody(362, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicWaitExpr(opcode: "i32.atomic.wait" (1), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(362)
    BeginFunctionBody(363, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicWaitExpr(opcode: "i64.atomic.wait" (2), align log2: 3, offset: 3)
    OnDropExpr
    EndFunctionBody(363)
    BeginFunctionBody(364, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i32.atomic.load" (16), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(364)
    BeginFunctionBody(365, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load" (17), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(365)
    BeginFunctionBody(366, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i32.atomic.load8_u" (18), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(366)
    BeginFunctionBody(367, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i32.atomic.load16_u" (19), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(367)
    BeginFunctionBody(368, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load8_u" (20), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(368)
    BeginFunctionBody(369, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load16_u" (21), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(369)
    BeginFunctionBody(370, size:9)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnAtomicLoadExpr(opcode: "i64.atomic.load32_u" (22), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(370)
    BeginFunctionBody(371, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i32.atomic.store" (23), align log2: 2, offset: 3)
    EndFunctionBody(371)
    BeginFunctionBody(372, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store" (24), align log2: 3, offset: 7)
    EndFunctionBody(372)
    BeginFunctionBody(373, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i32.atomic.store8" (25), align log2: 0, offset: 3)
    EndFunctionBody(373)
    BeginFunctionBody(374, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i32.atomic.store16" (26), align log2: 1, offset: 3)
    EndFunctionBody(374)
    BeginFunctionBody(375, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store8" (27), align log2: 0, offset: 3)
    EndFunctionBody(375)
    BeginFunctionBody(376, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store16" (28), align log2: 1, offset: 3)
    EndFunctionBody(376)
    BeginFunctionBody(377, size:10)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicStoreExpr(opcode: "i64.atomic.store32" (29), align log2: 2, offset: 3)
    EndFunctionBody(377)
    BeginFunctionBody(378, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.add" (30), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(378)
    BeginFunctionBody(379, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.add" (31), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(379)
    BeginFunctionBody(380, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.add_u" (32), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(380)
    BeginFunctionBody(381, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.add_u" (33), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(381)
    BeginFunctionBody(382, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.add_u" (34), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(382)
    BeginFunctionBody(383, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.add_u" (35), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(383)
    BeginFunctionBody(384, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.add_u" (36), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(384)
    BeginFunctionBody(385, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.sub" (37), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(385)
    BeginFunctionBody(386, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.sub" (38), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(386)
    BeginFunctionBody(387, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.sub_u" (39), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(387)
    BeginFunctionBody(388, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.sub_u" (40), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(388)
    BeginFunctionBody(389, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.sub_u" (41), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(389)
    BeginFunctionBody(390, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.sub_u" (42), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(390)
    BeginFunctionBody(391, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.sub_u" (43), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(391)
    BeginFunctionBody(392, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.and" (44), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(392)
    BeginFunctionBody(393, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.and" (45), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(393)
    BeginFunctionBody(394, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.and_u" (46), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(394)
    BeginFunctionBody(395, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.and_u" (47), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(395)
    BeginFunctionBody(396, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.and_u" (48), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(396)
    BeginFunctionBody(397, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.and_u" (49), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(397)
    BeginFunctionBody(398, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.and_u" (50), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(398)
    BeginFunctionBody(399, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.or" (51), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(399)
    BeginFunctionBody(400, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.or" (52), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(400)
    BeginFunctionBody(401, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.or_u" (53), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(401)
    BeginFunctionBody(402, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.or_u" (54), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(402)
    BeginFunctionBody(403, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.or_u" (55), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(403)
    BeginFunctionBody(404, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.or_u" (56), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(404)
    BeginFunctionBody(405, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.or_u" (57), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(405)
    BeginFunctionBody(406, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.xor" (58), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(406)
    BeginFunctionBody(407, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.xor" (59), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(407)
    BeginFunctionBody(408, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.xor_u" (60), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(408)
    BeginFunctionBody(409, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.xor_u" (61), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(409)
    BeginFunctionBody(410, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.xor_u" (62), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(410)
    BeginFunctionBody(411, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.xor_u" (63), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(411)
    BeginFunctionBody(412, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.xor_u" (64), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(412)
    BeginFunctionBody(413, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw.xchg" (65), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(413)
    BeginFunctionBody(414, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw.xchg" (66), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(414)
    BeginFunctionBody(415, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw8.xchg_u" (67), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(415)
    BeginFunctionBody(416, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i32.atomic.rmw16.xchg_u" (68), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(416)
    BeginFunctionBody(417, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw8.xchg_u" (69), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(417)
    BeginFunctionBody(418, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw16.xchg_u" (70), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(418)
    BeginFunctionBody(419, size:11)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnAtomicRmwExpr(opcode: "i64.atomic.rmw32.xchg_u" (71), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(419)
    BeginFunctionBody(420, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i32.atomic.rmw.cmpxchg" (72), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(420)
    BeginFunctionBody(421, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw.cmpxchg" (73), align log2: 3, offset: 7)
    OnDropExpr
    EndFunctionBody(421)
    BeginFunctionBody(422, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i32.atomic.rmw8.cmpxchg_u" (74), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(422)
    BeginFunctionBody(423, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI32ConstExpr(2 (0x2))
    OnI32ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i32.atomic.rmw16.cmpxchg_u" (75), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(423)
    BeginFunctionBody(424, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw8.cmpxchg_u" (76), align log2: 0, offset: 3)
    OnDropExpr
    EndFunctionBody(424)
    BeginFunctionBody(425, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw16.cmpxchg_u" (77), align log2: 1, offset: 3)
    OnDropExpr
    EndFunctionBody(425)
    BeginFunctionBody(426, size:13)
    OnLocalDeclCount(0)
    OnI32ConstExpr(1 (0x1))
    OnI64ConstExpr(2 (0x2))
    OnI64ConstExpr(3 (0x3))
    OnAtomicRmwCmpxchgExpr(opcode: "i64.atomic.rmw32.cmpxchg_u" (78), align log2: 2, offset: 3)
    OnDropExpr
    EndFunctionBody(426)
  EndCodeSection
  BeginDataSection(3)
    OnDataSegmentCount(1)
    BeginDataSegment(index: 0, memory_index: 0, flags: 1)
    OnDataSegmentData(index:0, size:0)
    EndDataSegment(0)
  EndDataSection
EndModule
   0| return
   4| unreachable
   8| return
  12| br @20
  20| return
  24| i32.const 1
  32| br_table %[-1], $#0, table:$52
  44| data $12
  52|   entry 0: offset: 64 drop: 0 keep: 0
  64| return
  68| return
  72| return
  76| call @0
  84| return
  88| i32.const 1
  96| call_indirect $0:0, %[-1]
 108| return
 112| return_call @0
 120| return
 124| i32.const 1
 132| return_call_indirect $0:0, %[-1]
 144| return
 148| i32.const 1
 156| drop
 160| return
 164| i32.const 1
 172| i32.const 2
 180| i32.const 3
 188| select %[-3], %[-2], %[-1]
 192| drop
 196| return
 200| i32.const 1
 208| i32.const 2
 216| i32.const 3
 224| select %[-3], %[-2], %[-1]
 228| drop
 232| return
 236| alloca $1
 244| local.get $1
 252| drop
 256| drop
 260| return
 264| alloca $1
 272| i32.const 1
 280| local.set $1, %[-1]
 288| drop
 292| return
 296| alloca $1
 304| i32.const 1
 312| local.tee $2, %[-1]
 320| drop
 324| drop
 328| return
 332| global.get $0
 340| drop
 344| return
 348| i32.const 1
 356| global.set $0, %[-1]
 364| return
 368| i32.const 1
 376| i32.load $0:%[-1]+$2
 388| drop
 392| return
 396| i32.const 1
 404| i64.load $0:%[-1]+$2
 416| drop
 420| return
 424| i32.const 1
 432| f32.load $0:%[-1]+$2
 444| drop
 448| return
 452| i32.const 1
 460| f64.load $0:%[-1]+$2
 472| drop
 476| return
 480| i32.const 1
 488| i32.load8_s $0:%[-1]+$2
 500| drop
 504| return
 508| i32.const 1
 516| i32.load8_u $0:%[-1]+$2
 528| drop
 532| return
 536| i32.const 1
 544| i32.load16_s $0:%[-1]+$2
 556| drop
 560| return
 564| i32.const 1
 572| i32.load16_u $0:%[-1]+$2
 584| drop
 588| return
 592| i32.const 1
 600| i64.load8_s $0:%[-1]+$2
 612| drop
 616| return
 620| i32.const 1
 628| i64.load8_u $0:%[-1]+$2
 640| drop
 644| return
 648| i32.const 1
 656| i64.load16_s $0:%[-1]+$2
 668| drop
 672| return
 676| i32.const 1
 684| i64.load16_u $0:%[-1]+$2
 696| drop
 700| return
 704| i32.const 1
 712| i64.load32_s $0:%[-1]+$2
 724| drop
 728| return
 732| i32.const 1
 740| i64.load32_u $0:%[-1]+$2
 752| drop
 756| return
 760| i32.const 1
 768| i32.const 2
 776| i32.store $0:%[-2]+$2, %[-1]
 788| return
 792| i32.const 1
 800| i64.const 2
 812| i64.store $0:%[-2]+$2, %[-1]
 824| return
 828| i32.const 1
 836| f32.const 2
 844| f32.store $0:%[-2]+$2, %[-1]
 856| return
 860| i32.const 1
 868| f64.const 2
 880| f64.store $0:%[-2]+$2, %[-1]
 892| return
 896| i32.const 1
 904| i32.const 2
 912| i32.store8 $0:%[-2]+$2, %[-1]
 924| return
 928| i32.const 1
 936| i32.const 2
 944| i32.store16 $0:%[-2]+$2, %[-1]
 956| return
 960| i32.const 1
 968| i64.const 2
 980| i64.store8 $0:%[-2]+$2, %[-1]
 992| return
 996| i32.const 1
1004| i64.const 2
1016| i64.store16 $0:%[-2]+$2, %[-1]
1028| return
1032| i32.const 1
1040| i64.const 2
1052| i64.store32 $0:%[-2]+$2, %[-1]
1064| return
1068| memory.size $0
1076| drop
1080| return
1084| i32.const 1
1092| memory.grow $0:%[-1]
1100| drop
1104| return
1108| i32.const 1
1116| drop
1120| return
1124| i64.const 1
1136| drop
1140| return
1144| f32.const 1
1152| drop
1156| return
1160| f64.const 1
1172| drop
1176| return
1180| i32.const 1
1188| i32.eqz %[-1]
1192| drop
1196| return
1200| i32.const 1
1208| i32.const 2
1216| i32.eq %[-2], %[-1]
1220| drop
1224| return
1228| i32.const 1
1236| i32.const 2
1244| i32.ne %[-2], %[-1]
1248| drop
1252| return
1256| i32.const 1
1264| i32.const 2
1272| i32.lt_s %[-2], %[-1]
1276| drop
1280| return
1284| i32.const 1
1292| i32.const 2
1300| i32.lt_u %[-2], %[-1]
1304| drop
1308| return
1312| i32.const 1
1320| i32.const 2
1328| i32.gt_s %[-2], %[-1]
1332| drop
1336| return
1340| i32.const 1
1348| i32.const 2
1356| i32.gt_u %[-2], %[-1]
1360| drop
1364| return
1368| i32.const 1
1376| i32.const 2
1384| i32.le_s %[-2], %[-1]
1388| drop
1392| return
1396| i32.const 1
1404| i32.const 2
1412| i32.le_u %[-2], %[-1]
1416| drop
1420| return
1424| i32.const 1
1432| i32.const 2
1440| i32.ge_s %[-2], %[-1]
1444| drop
1448| return
1452| i32.const 1
1460| i32.const 2
1468| i32.ge_u %[-2], %[-1]
1472| drop
1476| return
1480| i64.const 1
1492| i64.eqz %[-1]
1496| drop
1500| return
1504| i64.const 1
1516| i64.const 2
1528| i64.eq %[-2], %[-1]
1532| drop
1536| return
1540| i64.const 1
1552| i64.const 2
1564| i64.ne %[-2], %[-1]
1568| drop
1572| return
1576| i64.const 1
1588| i64.const 2
1600| i64.lt_s %[-2], %[-1]
1604| drop
1608| return
1612| i64.const 1
1624| i64.const 2
1636| i64.lt_u %[-2], %[-1]
1640| drop
1644| return
1648| i64.const 1
1660| i64.const 2
1672| i64.gt_s %[-2], %[-1]
1676| drop
1680| return
1684| i64.const 1
1696| i64.const 2
1708| i64.gt_u %[-2], %[-1]
1712| drop
1716| return
1720| i64.const 1
1732| i64.const 2
1744| i64.le_s %[-2], %[-1]
1748| drop
1752| return
1756| i64.const 1
1768| i64.const 2
1780| i64.le_u %[-2], %[-1]
1784| drop
1788| return
1792| i64.const 1
1804| i64.const 2
1816| i64.ge_s %[-2], %[-1]
1820| drop
1824| return
1828| i64.const 1
1840| i64.const 2
1852| i64.ge_u %[-2], %[-1]
1856| drop
1860| return
1864| f32.const 1
1872| f32.const 2
1880| f32.eq %[-2], %[-1]
1884| drop
1888| return
1892| f32.const 1
1900| f32.const 2
1908| f32.ne %[-2], %[-1]
1912| drop
1916| return
1920| f32.const 1
1928| f32.const 2
1936| f32.lt %[-2], %[-1]
1940| drop
1944| return
1948| f32.const 1
1956| f32.const 2
1964| f32.gt %[-2], %[-1]
1968| drop
1972| return
1976| f32.const 1
1984| f32.const 2
1992| f32.le %[-2], %[-1]
1996| drop
2000| return
2004| f32.const 1
2012| f32.const 2
2020| f32.ge %[-2], %[-1]
2024| drop
2028| return
2032| f64.const 1
2044| f64.const 2
2056| f64.eq %[-2], %[-1]
2060| drop
2064| return
2068| f64.const 1
2080| f64.const 2
2092| f64.ne %[-2], %[-1]
2096| drop
2100| return
2104| f64.const 1
2116| f64.const 2
2128| f64.lt %[-2], %[-1]
2132| drop
2136| return
2140| f64.const 1
2152| f64.const 2
2164| f64.gt %[-2], %[-1]
2168| drop
2172| return
2176| f64.const 1
2188| f64.const 2
2200| f64.le %[-2], %[-1]
2204| drop
2208| return
2212| f64.const 1
2224| f64.const 2
2236| f64.ge %[-2], %[-1]
2240| drop
2244| return
2248| i32.const 1
2256| i32.clz %[-1]
2260| drop
2264| return
2268| i32.const 1
2276| i32.ctz %[-1]
2280| drop
2284| return
2288| i32.const 1
2296| i32.popcnt %[-1]
2300| drop
2304| return
2308| i32.const 1
2316| i32.const 2
2324| i32.add %[-2], %[-1]
2328| drop
2332| return
2336| i32.const 1
2344| i32.const 2
2352| i32.sub %[-2], %[-1]
2356| drop
2360| return
2364| i32.const 1
2372| i32.const 2
2380| i32.mul %[-2], %[-1]
2384| drop
2388| return
2392| i32.const 1
2400| i32.const 2
2408| i32.div_s %[-2], %[-1]
2412| drop
2416| return
2420| i32.const 1
2428| i32.const 2
2436| i32.div_u %[-2], %[-1]
2440| drop
2444| return
2448| i32.const 1
2456| i32.const 2
2464| i32.rem_s %[-2], %[-1]
2468| drop
2472| return
2476| i32.const 1
2484| i32.const 2
2492| i32.rem_u %[-2], %[-1]
2496| drop
2500| return
2504| i32.const 1
2512| i32.const 2
2520| i32.and %[-2], %[-1]
2524| drop
2528| return
2532| i32.const 1
2540| i32.const 2
2548| i32.or %[-2], %[-1]
2552| drop
2556| return
2560| i32.const 1
2568| i32.const 2
2576| i32.xor %[-2], %[-1]
2580| drop
2584| return
2588| i32.const 1
2596| i32.const 2
2604| i32.shl %[-2], %[-1]
2608| drop
2612| return
2616| i32.const 1
2624| i32.const 2
2632| i32.shr_s %[-2], %[-1]
2636| drop
2640| return
2644| i32.const 1
2652| i32.const 2
2660| i32.shr_u %[-2], %[-1]
2664| drop
2668| return
2672| i32.const 1
2680| i32.const 2
2688| i32.rotl %[-2], %[-1]
2692| drop
2696| return
2700| i32.const 1
2708| i32.const 2
2716| i32.rotr %[-2], %[-1]
2720| drop
2724| return
2728| i64.const 1
2740| i64.clz %[-1]
2744| drop
2748| return
2752| i64.const 1
2764| i64.ctz %[-1]
2768| drop
2772| return
2776| i64.const 1
2788| i64.popcnt %[-1]
2792| drop
2796| return
2800| i64.const 1
2812| i64.const 2
2824| i64.add %[-2], %[-1]
2828| drop
2832| return
2836| i64.const 1
2848| i64.const 2
2860| i64.sub %[-2], %[-1]
2864| drop
2868| return
2872| i64.const 1
2884| i64.const 2
2896| i64.mul %[-2], %[-1]
2900| drop
2904| return
2908| i64.const 1
2920| i64.const 2
2932| i64.div_s %[-2], %[-1]
2936| drop
2940| return
2944| i64.const 1
2956| i64.const 2
2968| i64.div_u %[-2], %[-1]
2972| drop
2976| return
2980| i64.const 1
2992| i64.const 2
3004| i64.rem_s %[-2], %[-1]
3008| drop
3012| return
3016| i64.const 1
3028| i64.const 2
3040| i64.rem_u %[-2], %[-1]
3044| drop
3048| return
3052| i64.const 1
3064| i64.const 2
3076| i64.and %[-2], %[-1]
3080| drop
3084| return
3088| i64.const 1
3100| i64.const 2
3112| i64.or %[-2], %[-1]
3116| drop
3120| return
3124| i64.const 1
3136| i64.const 2
3148| i64.xor %[-2], %[-1]
3152| drop
3156| return
3160| i64.const 1
3172| i64.const 2
3184| i64.shl %[-2], %[-1]
3188| drop
3192| return
3196| i64.const 1
3208| i64.const 2
3220| i64.shr_s %[-2], %[-1]
3224| drop
3228| return
3232| i64.const 1
3244| i64.const 2
3256| i64.shr_u %[-2], %[-1]
3260| drop
3264| return
3268| i64.const 1
3280| i64.const 2
3292| i64.rotl %[-2], %[-1]
3296| drop
3300| return
3304| i64.const 1
3316| i64.const 2
3328| i64.rotr %[-2], %[-1]
3332| drop
3336| return
3340| f32.const 1
3348| f32.abs %[-1]
3352| drop
3356| return
3360| f32.const 1
3368| f32.neg %[-1]
3372| drop
3376| return
3380| f32.const 1
3388| f32.ceil %[-1]
3392| drop
3396| return
3400| f32.const 1
3408| f32.floor %[-1]
3412| drop
3416| return
3420| f32.const 1
3428| f32.trunc %[-1]
3432| drop
3436| return
3440| f32.const 1
3448| f32.nearest %[-1]
3452| drop
3456| return
3460| f32.const 1
3468| f32.sqrt %[-1]
3472| drop
3476| return
3480| f32.const 1
3488| f32.const 2
3496| f32.add %[-2], %[-1]
3500| drop
3504| return
3508| f32.const 1
3516| f32.const 2
3524| f32.sub %[-2], %[-1]
3528| drop
3532| return
3536| f32.const 1
3544| f32.const 2
3552| f32.mul %[-2], %[-1]
3556| drop
3560| return
3564| f32.const 1
3572| f32.const 2
3580| f32.div %[-2], %[-1]
3584| drop
3588| return
3592| f32.const 1
3600| f32.const 2
3608| f32.min %[-2], %[-1]
3612| drop
3616| return
3620| f32.const 1
3628| f32.const 2
3636| f32.max %[-2], %[-1]
3640| drop
3644| return
3648| f32.const 1
3656| f32.const 2
3664| f32.copysign %[-2], %[-1]
3668| drop
3672| return
3676| f64.const 1
3688| f64.abs %[-1]
3692| drop
3696| return
3700| f64.const 1
3712| f64.neg %[-1]
3716| drop
3720| return
3724| f64.const 1
3736| f64.ceil %[-1]
3740| drop
3744| return
3748| f64.const 1
3760| f64.floor %[-1]
3764| drop
3768| return
3772| f64.const 1
3784| f64.trunc %[-1]
3788| drop
3792| return
3796| f64.const 1
3808| f64.nearest %[-1]
3812| drop
3816| return
3820| f64.const 1
3832| f64.sqrt %[-1]
3836| drop
3840| return
3844| f64.const 1
3856| f64.const 2
3868| f64.add %[-2], %[-1]
3872| drop
3876| return
3880| f64.const 1
3892| f64.const 2
3904| f64.sub %[-2], %[-1]
3908| drop
3912| return
3916| f64.const 1
3928| f64.const 2
3940| f64.mul %[-2], %[-1]
3944| drop
3948| return
3952| f64.const 1
3964| f64.const 2
3976| f64.div %[-2], %[-1]
3980| drop
3984| return
3988| f64.const 1
4000| f64.const 2
4012| f64.min %[-2], %[-1]
4016| drop
4020| return
4024| f64.const 1
4036| f64.const 2
4048| f64.max %[-2], %[-1]
4052| drop
4056| return
4060| f64.const 1
4072| f64.const 2
4084| f64.copysign %[-2], %[-1]
4088| drop
4092| return
4096| i64.const 1
4108| i32.wrap_i64 %[-1]
4112| drop
4116| return
4120| f32.const 1
4128| i32.trunc_f32_s %[-1]
4132| drop
4136| return
4140| f32.const 1
4148| i32.trunc_f32_u %[-1]
4152| drop
4156| return
4160| f64.const 1
4172| i32.trunc_f64_s %[-1]
4176| drop
4180| return
4184| f64.const 1
4196| i32.trunc_f64_u %[-1]
4200| drop
4204| return
4208| i32.const 1
4216| i64.extend_i32_s %[-1]
4220| drop
4224| return
4228| i32.const 1
4236| i64.extend_i32_u %[-1]
4240| drop
4244| return
4248| f32.const 1
4256| i64.trunc_f32_s %[-1]
4260| drop
4264| return
4268| f32.const 1
4276| i64.trunc_f32_u %[-1]
4280| drop
4284| return
4288| f64.const 1
4300| i64.trunc_f64_s %[-1]
4304| drop
4308| return
4312| f64.const 1
4324| i64.trunc_f64_u %[-1]
4328| drop
4332| return
4336| i32.const 1
4344| f32.convert_i32_s %[-1]
4348| drop
4352| return
4356| i32.const 1
4364| f32.convert_i32_u %[-1]
4368| drop
4372| return
4376| i64.const 1
4388| f32.convert_i64_s %[-1]
4392| drop
4396| return
4400| i64.const 1
4412| f32.convert_i64_u %[-1]
4416| drop
4420| return
4424| f64.const 1
4436| f32.demote_f64 %[-1]
4440| drop
4444| return
4448| i32.const 1
4456| f64.convert_i32_s %[-1]
4460| drop
4464| return
4468| i32.const 1
4476| f64.convert_i32_u %[-1]
4480| drop
4484| return
4488| i64.const 1
4500| f64.convert_i64_s %[-1]
4504| drop
4508| return
4512| i64.const 1
4524| f64.convert_i64_u %[-1]
4528| drop
4532| return
4536| f32.const 1
4544| f64.promote_f32 %[-1]
4548| drop
4552| return
4556| i32.const 1
4564| f32.reinterpret_i32 %[-1]
4568| drop
4572| return
4576| f32.const 1
4584| i32.reinterpret_f32 %[-1]
4588| drop
4592| return
4596| i64.const 1
4608| f64.reinterpret_i64 %[-1]
4612| drop
4616| return
4620| f64.const 1
4632| i64.reinterpret_f64 %[-1]
4636| drop
4640| return
4644| i32.const 1
4652| i32.extend8_s %[-1]
4656| drop
4660| return
4664| i32.const 1
4672| i32.extend16_s %[-1]
4676| drop
4680| return
4684| i64.const 1
4696| i64.extend8_s %[-1]
4700| drop
4704| return
4708| i64.const 1
4720| i64.extend16_s %[-1]
4724| drop
4728| return
4732| i64.const 1
4744| i64.extend32_s %[-1]
4748| drop
4752| return
4756| alloca $1
4764| drop
4768| return
4772| i32.const 1
4780| br_unless @4796, %[-1]
4788| br @4796
4796| return
4800| i32.const 1
4808| call_host $0
4816| return
4820| i32.const 1
4828| br_table %[-1], $#0, table:$4848
4840| data $12
4848|   entry 0: offset: 4860 drop: 0 keep: 0
4860| return
4864| i32.const 1
4872| i32.const 2
4880| drop_keep $1 $1
4892| br @4900
4900| drop
4904| return
4908| f32.const 1
4916| i32.trunc_sat_f32_s %[-1]
4920| drop
4924| return
4928| f32.const 1
4936| i32.trunc_sat_f32_u %[-1]
4940| drop
4944| return
4948| f64.const 1
4960| i32.trunc_sat_f64_s %[-1]
4964| drop
4968| return
4972| f64.const 1
4984| i32.trunc_sat_f64_u %[-1]
4988| drop
4992| return
4996| f32.const 1
5004| i64.trunc_sat_f32_s %[-1]
5008| drop
5012| return
5016| f32.const 1
5024| i64.trunc_sat_f32_u %[-1]
5028| drop
5032| return
5036| f64.const 1
5048| i64.trunc_sat_f64_s %[-1]
5052| drop
5056| return
5060| f64.const 1
5072| i64.trunc_sat_f64_u %[-1]
5076| drop
5080| return
5084| i32.const 1
5092| i32.const 2
5100| i32.const 3
5108| memory.init $0, $0, %[-3], %[-2], %[-1]
5120| return
5124| data.drop $0
5132| return
5136| i32.const 1
5144| i32.const 2
5152| i32.const 3
5160| memory.copy $0, %[-3], %[-2], %[-1]
5168| return
5172| i32.const 1
5180| i32.const 2
5188| i32.const 3
5196| memory.fill $0, %[-3], %[-2], %[-1]
5204| return
5208| i32.const 1
5216| i32.const 2
5224| i32.const 3
5232| table.init $0, $0, %[-3], %[-2], %[-1]
5244| return
5248| elem.drop $0
5256| return
5260| i32.const 1
5268| i32.const 2
5276| i32.const 3
5284| table.copy $0, $0, %[-3], %[-2], %[-1]
5296| return
5300| i32.const 1
5308| v128.load $0:%[-1]+$3
5320| drop
5324| return
5328| i32.const 1
5336| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5356| v128.store $0:%[-2]+$3, %[-1]
5368| return
5372| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5392| drop
5396| return
5400| i32.const 1
5408| i8x16.splat %[-1]
5412| drop
5416| return
5420| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5440| i8x16.extract_lane_s %[-1] : (Lane imm: 15)
5445| drop
5449| return
5453| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5473| i8x16.extract_lane_u %[-1] : (Lane imm: 15)
5478| drop
5482| return
5486| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5506| i32.const 0
5514| i8x16.replace_lane %[-1], %[-2] : (Lane imm: 15)
5519| drop
5523| return
5527| i32.const 1
5535| i16x8.splat %[-1]
5539| drop
5543| return
5547| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5567| i16x8.extract_lane_s %[-1] : (Lane imm: 7)
5572| drop
5576| return
5580| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5600| i16x8.extract_lane_u %[-1] : (Lane imm: 7)
5605| drop
5609| return
5613| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5633| i32.const 0
5641| i16x8.replace_lane %[-1], %[-2] : (Lane imm: 7)
5646| drop
5650| return
5654| i32.const 1
5662| i32x4.splat %[-1]
5666| drop
5670| return
5674| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5694| i32x4.extract_lane %[-1] : (Lane imm: 3)
5699| drop
5703| return
5707| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5727| i32.const 0
5735| i32x4.replace_lane %[-1], %[-2] : (Lane imm: 3)
5740| drop
5744| return
5748| i64.const 1
5760| i64x2.splat %[-1]
5764| drop
5768| return
5772| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5792| i64x2.extract_lane %[-1] : (Lane imm: 1)
5797| drop
5801| return
5805| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5825| i64.const 0
5837| i64x2.replace_lane %[-1], %[-2] : (Lane imm: 1)
5842| drop
5846| return
5850| f32.const 1
5858| f32x4.splat %[-1]
5862| drop
5866| return
5870| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5890| f32x4.extract_lane %[-1] : (Lane imm: 3)
5895| drop
5899| return
5903| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5923| f32.const 0
5931| f32x4.replace_lane %[-1], %[-2] : (Lane imm: 3)
5936| drop
5940| return
5944| f64.const 1
5956| f64x2.splat %[-1]
5960| drop
5964| return
5968| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
5988| f64x2.extract_lane %[-1] : (Lane imm: 1)
5993| drop
5997| return
6001| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6021| f64.const 0
6033| f64x2.replace_lane %[-1], %[-2] : (Lane imm: 1)
6038| drop
6042| return
6046| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6066| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6086| i8x16.eq %[-2], %[-1]
6090| drop
6094| return
6098| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6118| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6138| i8x16.ne %[-2], %[-1]
6142| drop
6146| return
6150| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6170| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6190| i8x16.lt_s %[-2], %[-1]
6194| drop
6198| return
6202| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6222| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6242| i8x16.lt_u %[-2], %[-1]
6246| drop
6250| return
6254| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6274| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6294| i8x16.gt_s %[-2], %[-1]
6298| drop
6302| return
6306| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6326| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6346| i8x16.gt_u %[-2], %[-1]
6350| drop
6354| return
6358| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6378| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6398| i8x16.le_s %[-2], %[-1]
6402| drop
6406| return
6410| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6430| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6450| i8x16.le_u %[-2], %[-1]
6454| drop
6458| return
6462| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6482| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6502| i8x16.ge_s %[-2], %[-1]
6506| drop
6510| return
6514| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6534| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6554| i8x16.ge_u %[-2], %[-1]
6558| drop
6562| return
6566| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6586| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6606| i16x8.eq %[-2], %[-1]
6610| drop
6614| return
6618| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6638| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6658| i16x8.ne %[-2], %[-1]
6662| drop
6666| return
6670| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6690| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6710| i16x8.lt_s %[-2], %[-1]
6714| drop
6718| return
6722| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6742| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6762| i16x8.lt_u %[-2], %[-1]
6766| drop
6770| return
6774| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6794| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6814| i16x8.gt_s %[-2], %[-1]
6818| drop
6822| return
6826| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6846| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6866| i16x8.gt_u %[-2], %[-1]
6870| drop
6874| return
6878| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6898| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6918| i16x8.le_s %[-2], %[-1]
6922| drop
6926| return
6930| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
6950| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
6970| i16x8.le_u %[-2], %[-1]
6974| drop
6978| return
6982| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7002| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7022| i16x8.ge_s %[-2], %[-1]
7026| drop
7030| return
7034| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7054| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7074| i16x8.ge_u %[-2], %[-1]
7078| drop
7082| return
7086| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7106| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7126| i32x4.eq %[-2], %[-1]
7130| drop
7134| return
7138| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7158| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7178| i32x4.ne %[-2], %[-1]
7182| drop
7186| return
7190| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7210| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7230| i32x4.lt_s %[-2], %[-1]
7234| drop
7238| return
7242| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7262| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7282| i32x4.lt_u %[-2], %[-1]
7286| drop
7290| return
7294| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7314| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7334| i32x4.gt_s %[-2], %[-1]
7338| drop
7342| return
7346| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7366| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7386| i32x4.gt_u %[-2], %[-1]
7390| drop
7394| return
7398| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7418| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7438| i32x4.le_s %[-2], %[-1]
7442| drop
7446| return
7450| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7470| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7490| i32x4.le_u %[-2], %[-1]
7494| drop
7498| return
7502| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7522| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7542| i32x4.ge_s %[-2], %[-1]
7546| drop
7550| return
7554| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7574| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7594| i32x4.ge_u %[-2], %[-1]
7598| drop
7602| return
7606| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7626| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7646| f32x4.eq %[-2], %[-1]
7650| drop
7654| return
7658| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7678| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7698| f32x4.ne %[-2], %[-1]
7702| drop
7706| return
7710| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7730| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7750| f32x4.lt %[-2], %[-1]
7754| drop
7758| return
7762| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7782| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7802| f32x4.gt %[-2], %[-1]
7806| drop
7810| return
7814| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7834| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7854| f32x4.le %[-2], %[-1]
7858| drop
7862| return
7866| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7886| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7906| f32x4.ge %[-2], %[-1]
7910| drop
7914| return
7918| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7938| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
7958| f64x2.eq %[-2], %[-1]
7962| drop
7966| return
7970| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
7990| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8010| f64x2.ne %[-2], %[-1]
8014| drop
8018| return
8022| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8042| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8062| f64x2.lt %[-2], %[-1]
8066| drop
8070| return
8074| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8094| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8114| f64x2.gt %[-2], %[-1]
8118| drop
8122| return
8126| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8146| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8166| f64x2.le %[-2], %[-1]
8170| drop
8174| return
8178| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8198| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8218| f64x2.ge %[-2], %[-1]
8222| drop
8226| return
8230| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8250| v128.not %[-1]
8254| drop
8258| return
8262| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8282| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8302| v128.and %[-2], %[-1]
8306| drop
8310| return
8314| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8334| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8354| v128.or %[-2], %[-1]
8358| drop
8362| return
8366| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8386| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8406| v128.xor %[-2], %[-1]
8410| drop
8414| return
8418| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8438| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8458| v128.const i32x4 0x00000003 0x00000003 0x00000003 0x00000003
8478| v128.bitselect %[-3], %[-2], %[-1]
8482| drop
8486| return
8490| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8510| i8x16.neg %[-1]
8514| drop
8518| return
8522| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8542| i8x16.any_true %[-1]
8546| drop
8550| return
8554| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8574| i8x16.all_true %[-1]
8578| drop
8582| return
8586| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8606| i32.const 0
8614| i8x16.shl %[-2], %[-1]
8618| drop
8622| return
8626| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8646| i32.const 0
8654| i8x16.shr_s %[-2], %[-1]
8658| drop
8662| return
8666| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8686| i32.const 0
8694| i8x16.shr_u %[-2], %[-1]
8698| drop
8702| return
8706| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8726| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8746| i8x16.add %[-2], %[-1]
8750| drop
8754| return
8758| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8778| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8798| i8x16.add_saturate_s %[-2], %[-1]
8802| drop
8806| return
8810| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8830| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8850| i8x16.add_saturate_u %[-2], %[-1]
8854| drop
8858| return
8862| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8882| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8902| i8x16.sub %[-2], %[-1]
8906| drop
8910| return
8914| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8934| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
8954| i8x16.sub_saturate_s %[-2], %[-1]
8958| drop
8962| return
8966| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
8986| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9006| i8x16.sub_saturate_u %[-2], %[-1]
9010| drop
9014| return
9018| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9038| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9058| i8x16.mul %[-2], %[-1]
9062| drop
9066| return
9070| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9090| i16x8.neg %[-1]
9094| drop
9098| return
9102| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9122| i16x8.any_true %[-1]
9126| drop
9130| return
9134| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9154| i16x8.all_true %[-1]
9158| drop
9162| return
9166| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9186| i32.const 0
9194| i16x8.shl %[-2], %[-1]
9198| drop
9202| return
9206| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9226| i32.const 0
9234| i16x8.shr_s %[-2], %[-1]
9238| drop
9242| return
9246| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9266| i32.const 0
9274| i16x8.shr_u %[-2], %[-1]
9278| drop
9282| return
9286| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9306| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9326| i16x8.add %[-2], %[-1]
9330| drop
9334| return
9338| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9358| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9378| i16x8.add_saturate_s %[-2], %[-1]
9382| drop
9386| return
9390| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9410| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9430| i16x8.add_saturate_u %[-2], %[-1]
9434| drop
9438| return
9442| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9462| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9482| i16x8.sub %[-2], %[-1]
9486| drop
9490| return
9494| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9514| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9534| i16x8.sub_saturate_s %[-2], %[-1]
9538| drop
9542| return
9546| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9566| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9586| i16x8.sub_saturate_u %[-2], %[-1]
9590| drop
9594| return
9598| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9618| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9638| i16x8.mul %[-2], %[-1]
9642| drop
9646| return
9650| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9670| i32x4.neg %[-1]
9674| drop
9678| return
9682| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9702| i32x4.any_true %[-1]
9706| drop
9710| return
9714| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9734| i32x4.all_true %[-1]
9738| drop
9742| return
9746| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9766| i32.const 0
9774| i32x4.shl %[-2], %[-1]
9778| drop
9782| return
9786| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9806| i32.const 0
9814| i32x4.shr_s %[-2], %[-1]
9818| drop
9822| return
9826| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9846| i32.const 0
9854| i32x4.shr_u %[-2], %[-1]
9858| drop
9862| return
9866| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9886| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9906| i32x4.add %[-2], %[-1]
9910| drop
9914| return
9918| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9938| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
9958| i32x4.sub %[-2], %[-1]
9962| drop
9966| return
9970| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
9990| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10010| i32x4.mul %[-2], %[-1]
10014| drop
10018| return
10022| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10042| i64x2.neg %[-1]
10046| drop
10050| return
10054| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10074| i64x2.any_true %[-1]
10078| drop
10082| return
10086| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10106| i64x2.all_true %[-1]
10110| drop
10114| return
10118| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10138| i32.const 0
10146| i64x2.shl %[-2], %[-1]
10150| drop
10154| return
10158| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10178| i32.const 0
10186| i64x2.shr_s %[-2], %[-1]
10190| drop
10194| return
10198| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10218| i32.const 0
10226| i64x2.shr_u %[-2], %[-1]
10230| drop
10234| return
10238| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10258| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10278| i64x2.add %[-2], %[-1]
10282| drop
10286| return
10290| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10310| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10330| i64x2.sub %[-2], %[-1]
10334| drop
10338| return
10342| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10362| f32x4.abs %[-1]
10366| drop
10370| return
10374| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10394| f32x4.neg %[-1]
10398| drop
10402| return
10406| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10426| f32x4.sqrt %[-1]
10430| drop
10434| return
10438| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10458| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10478| f32x4.add %[-2], %[-1]
10482| drop
10486| return
10490| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10510| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10530| f32x4.sub %[-2], %[-1]
10534| drop
10538| return
10542| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10562| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10582| f32x4.mul %[-2], %[-1]
10586| drop
10590| return
10594| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10614| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10634| f32x4.div %[-2], %[-1]
10638| drop
10642| return
10646| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10666| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10686| f32x4.min %[-2], %[-1]
10690| drop
10694| return
10698| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10718| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10738| f32x4.max %[-2], %[-1]
10742| drop
10746| return
10750| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10770| f64x2.abs %[-1]
10774| drop
10778| return
10782| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10802| f64x2.neg %[-1]
10806| drop
10810| return
10814| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10834| f64x2.sqrt %[-1]
10838| drop
10842| return
10846| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10866| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10886| f64x2.add %[-2], %[-1]
10890| drop
10894| return
10898| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10918| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10938| f64x2.sub %[-2], %[-1]
10942| drop
10946| return
10950| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
10970| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
10990| f64x2.mul %[-2], %[-1]
10994| drop
10998| return
11002| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11022| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11042| f64x2.div %[-2], %[-1]
11046| drop
11050| return
11054| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11074| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11094| f64x2.min %[-2], %[-1]
11098| drop
11102| return
11106| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11126| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11146| f64x2.max %[-2], %[-1]
11150| drop
11154| return
11158| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11178| i32x4.trunc_sat_f32x4_s %[-1]
11182| drop
11186| return
11190| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11210| i32x4.trunc_sat_f32x4_u %[-1]
11214| drop
11218| return
11222| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11242| i64x2.trunc_sat_f64x2_s %[-1]
11246| drop
11250| return
11254| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11274| i64x2.trunc_sat_f64x2_u %[-1]
11278| drop
11282| return
11286| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11306| f32x4.convert_i32x4_s %[-1]
11310| drop
11314| return
11318| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11338| f32x4.convert_i32x4_u %[-1]
11342| drop
11346| return
11350| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11370| f64x2.convert_i64x2_s %[-1]
11374| drop
11378| return
11382| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11402| f64x2.convert_i64x2_u %[-1]
11406| drop
11410| return
11414| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11434| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11454| v8x16.swizzle %[-2], %[-1]
11458| drop
11462| return
11466| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11486| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11506| v8x16.shuffle %[-2], %[-1] : (Lane imm: $0x01010101 0x01010101 0x01010101 0x01010101 )
11526| drop
11530| return
11534| i32.const 1
11542| i8x16.load_splat $0:%[-1]+$0
11554| drop
11558| return
11562| i32.const 1
11570| i16x8.load_splat $0:%[-1]+$0
11582| drop
11586| return
11590| i32.const 1
11598| i32x4.load_splat $0:%[-1]+$0
11610| drop
11614| return
11618| i32.const 1
11626| i64x2.load_splat $0:%[-1]+$0
11638| drop
11642| return
11646| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11666| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11686| i8x16.narrow_i16x8_s %[-2], %[-1]
11690| drop
11694| return
11698| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11718| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11738| i8x16.narrow_i16x8_u %[-2], %[-1]
11742| drop
11746| return
11750| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11770| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11790| i16x8.narrow_i32x4_s %[-2], %[-1]
11794| drop
11798| return
11802| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11822| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
11842| i16x8.narrow_i32x4_u %[-2], %[-1]
11846| drop
11850| return
11854| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11874| i16x8.widen_low_i8x16_s %[-1]
11878| drop
11882| return
11886| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11906| i16x8.widen_high_i8x16_s %[-1]
11910| drop
11914| return
11918| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11938| i16x8.widen_low_i8x16_u %[-1]
11942| drop
11946| return
11950| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
11970| i16x8.widen_high_i8x16_u %[-1]
11974| drop
11978| return
11982| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12002| i32x4.widen_low_i16x8_s %[-1]
12006| drop
12010| return
12014| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12034| i32x4.widen_high_i16x8_s %[-1]
12038| drop
12042| return
12046| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12066| i32x4.widen_low_i16x8_u %[-1]
12070| drop
12074| return
12078| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12098| i32x4.widen_high_i16x8_u %[-1]
12102| drop
12106| return
12110| i32.const 0
12118| i16x8.load8x8_s $0:%[-1]+$0
12130| drop
12134| return
12138| i32.const 0
12146| i16x8.load8x8_u $0:%[-1]+$0
12158| drop
12162| return
12166| i32.const 0
12174| i32x4.load16x4_s $0:%[-1]+$0
12186| drop
12190| return
12194| i32.const 0
12202| i32x4.load16x4_u $0:%[-1]+$0
12214| drop
12218| return
12222| i32.const 0
12230| i64x2.load32x2_s $0:%[-1]+$0
12242| drop
12246| return
12250| i32.const 0
12258| i64x2.load32x2_u $0:%[-1]+$0
12270| drop
12274| return
12278| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12298| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
12318| v128.andnot %[-2], %[-1]
12322| drop
12326| return
12330| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12350| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
12370| i8x16.avgr_u %[-2], %[-1]
12374| drop
12378| return
12382| v128.const i32x4 0x00000001 0x00000001 0x00000001 0x00000001
12402| v128.const i32x4 0x00000002 0x00000002 0x00000002 0x00000002
12422| i16x8.avgr_u %[-2], %[-1]
12426| drop
12430| return
12434| i32.const 1
12442| i32.const 2
12450| atomic.notify $0:%[-2]+$3, %[-1]
12462| drop
12466| return
12470| i32.const 1
12478| i32.const 2
12486| i64.const 3
12498| i32.atomic.wait $0:%[-3]+$3, %[-2], %[-1]
12510| drop
12514| return
12518| i32.const 1
12526| i64.const 2
12538| i64.const 3
12550| i64.atomic.wait $0:%[-3]+$3, %[-2], %[-1]
12562| drop
12566| return
12570| i32.const 1
12578| i32.atomic.load $0:%[-1]+$3
12590| drop
12594| return
12598| i32.const 1
12606| i64.atomic.load $0:%[-1]+$7
12618| drop
12622| return
12626| i32.const 1
12634| i32.atomic.load8_u $0:%[-1]+$3
12646| drop
12650| return
12654| i32.const 1
12662| i32.atomic.load16_u $0:%[-1]+$3
12674| drop
12678| return
12682| i32.const 1
12690| i64.atomic.load8_u $0:%[-1]+$3
12702| drop
12706| return
12710| i32.const 1
12718| i64.atomic.load16_u $0:%[-1]+$3
12730| drop
12734| return
12738| i32.const 1
12746| i64.atomic.load32_u $0:%[-1]+$3
12758| drop
12762| return
12766| i32.const 1
12774| i32.const 2
12782| i32.atomic.store $0:%[-2]+$3, %[-1]
12794| return
12798| i32.const 1
12806| i64.const 2
12818| i64.atomic.store $0:%[-2]+$7, %[-1]
12830| return
12834| i32.const 1
12842| i32.const 2
12850| i32.atomic.store8 $0:%[-2]+$3, %[-1]
12862| return
12866| i32.const 1
12874| i32.const 2
12882| i32.atomic.store16 $0:%[-2]+$3, %[-1]
12894| return
12898| i32.const 1
12906| i64.const 2
12918| i64.atomic.store8 $0:%[-2]+$3, %[-1]
12930| return
12934| i32.const 1
12942| i64.const 2
12954| i64.atomic.store16 $0:%[-2]+$3, %[-1]
12966| return
12970| i32.const 1
12978| i64.const 2
12990| i64.atomic.store32 $0:%[-2]+$3, %[-1]
13002| return
13006| i32.const 1
13014| i32.const 2
13022| i32.atomic.rmw.add $0:%[-2]+$3, %[-1]
13034| drop
13038| return
13042| i32.const 1
13050| i64.const 2
13062| i64.atomic.rmw.add $0:%[-2]+$7, %[-1]
13074| drop
13078| return
13082| i32.const 1
13090| i32.const 2
13098| i32.atomic.rmw8.add_u $0:%[-2]+$3, %[-1]
13110| drop
13114| return
13118| i32.const 1
13126| i32.const 2
13134| i32.atomic.rmw16.add_u $0:%[-2]+$3, %[-1]
13146| drop
13150| return
13154| i32.const 1
13162| i64.const 2
13174| i64.atomic.rmw8.add_u $0:%[-2]+$3, %[-1]
13186| drop
13190| return
13194| i32.const 1
13202| i64.const 2
13214| i64.atomic.rmw16.add_u $0:%[-2]+$3, %[-1]
13226| drop
13230| return
13234| i32.const 1
13242| i64.const 2
13254| i64.atomic.rmw32.add_u $0:%[-2]+$3, %[-1]
13266| drop
13270| return
13274| i32.const 1
13282| i32.const 2
13290| i32.atomic.rmw.sub $0:%[-2]+$3, %[-1]
13302| drop
13306| return
13310| i32.const 1
13318| i64.const 2
13330| i64.atomic.rmw.sub $0:%[-2]+$7, %[-1]
13342| drop
13346| return
13350| i32.const 1
13358| i32.const 2
13366| i32.atomic.rmw8.sub_u $0:%[-2]+$3, %[-1]
13378| drop
13382| return
13386| i32.const 1
13394| i32.const 2
13402| i32.atomic.rmw16.sub_u $0:%[-2]+$3, %[-1]
13414| drop
13418| return
13422| i32.const 1
13430| i64.const 2
13442| i64.atomic.rmw8.sub_u $0:%[-2]+$3, %[-1]
13454| drop
13458| return
13462| i32.const 1
13470| i64.const 2
13482| i64.atomic.rmw16.sub_u $0:%[-2]+$3, %[-1]
13494| drop
13498| return
13502| i32.const 1
13510| i64.const 2
13522| i64.atomic.rmw32.sub_u $0:%[-2]+$3, %[-1]
13534| drop
13538| return
13542| i32.const 1
13550| i32.const 2
13558| i32.atomic.rmw.and $0:%[-2]+$3, %[-1]
13570| drop
13574| return
13578| i32.const 1
13586| i64.const 2
13598| i64.atomic.rmw.and $0:%[-2]+$7, %[-1]
13610| drop
13614| return
13618| i32.const 1
13626| i32.const 2
13634| i32.atomic.rmw8.and_u $0:%[-2]+$3, %[-1]
13646| drop
13650| return
13654| i32.const 1
13662| i32.const 2
13670| i32.atomic.rmw16.and_u $0:%[-2]+$3, %[-1]
13682| drop
13686| return
13690| i32.const 1
13698| i64.const 2
13710| i64.atomic.rmw8.and_u $0:%[-2]+$3, %[-1]
13722| drop
13726| return
13730| i32.const 1
13738| i64.const 2
13750| i64.atomic.rmw16.and_u $0:%[-2]+$3, %[-1]
13762| drop
13766| return
13770| i32.const 1
13778| i64.const 2
13790| i64.atomic.rmw32.and_u $0:%[-2]+$3, %[-1]
13802| drop
13806| return
13810| i32.const 1
13818| i32.const 2
13826| i32.atomic.rmw.or $0:%[-2]+$3, %[-1]
13838| drop
13842| return
13846| i32.const 1
13854| i64.const 2
13866| i64.atomic.rmw.or $0:%[-2]+$7, %[-1]
13878| drop
13882| return
13886| i32.const 1
13894| i32.const 2
13902| i32.atomic.rmw8.or_u $0:%[-2]+$3, %[-1]
13914| drop
13918| return
13922| i32.const 1
13930| i32.const 2
13938| i32.atomic.rmw16.or_u $0:%[-2]+$3, %[-1]
13950| drop
13954| return
13958| i32.const 1
13966| i64.const 2
13978| i64.atomic.rmw8.or_u $0:%[-2]+$3, %[-1]
13990| drop
13994| return
13998| i32.const 1
14006| i64.const 2
14018| i64.atomic.rmw16.or_u $0:%[-2]+$3, %[-1]
14030| drop
14034| return
14038| i32.const 1
14046| i64.const 2
14058| i64.atomic.rmw32.or_u $0:%[-2]+$3, %[-1]
14070| drop
14074| return
14078| i32.const 1
14086| i32.const 2
14094| i32.atomic.rmw.xor $0:%[-2]+$3, %[-1]
14106| drop
14110| return
14114| i32.const 1
14122| i64.const 2
14134| i64.atomic.rmw.xor $0:%[-2]+$7, %[-1]
14146| drop
14150| return
14154| i32.const 1
14162| i32.const 2
14170| i32.atomic.rmw8.xor_u $0:%[-2]+$3, %[-1]
14182| drop
14186| return
14190| i32.const 1
14198| i32.const 2
14206| i32.atomic.rmw16.xor_u $0:%[-2]+$3, %[-1]
14218| drop
14222| return
14226| i32.const 1
14234| i64.const 2
14246| i64.atomic.rmw8.xor_u $0:%[-2]+$3, %[-1]
14258| drop
14262| return
14266| i32.const 1
14274| i64.const 2
14286| i64.atomic.rmw16.xor_u $0:%[-2]+$3, %[-1]
14298| drop
14302| return
14306| i32.const 1
14314| i64.const 2
14326| i64.atomic.rmw32.xor_u $0:%[-2]+$3, %[-1]
14338| drop
14342| return
14346| i32.const 1
14354| i32.const 2
14362| i32.atomic.rmw.xchg $0:%[-2]+$3, %[-1]
14374| drop
14378| return
14382| i32.const 1
14390| i64.const 2
14402| i64.atomic.rmw.xchg $0:%[-2]+$7, %[-1]
14414| drop
14418| return
14422| i32.const 1
14430| i32.const 2
14438| i32.atomic.rmw8.xchg_u $0:%[-2]+$3, %[-1]
14450| drop
14454| return
14458| i32.const 1
14466| i32.const 2
14474| i32.atomic.rmw16.xchg_u $0:%[-2]+$3, %[-1]
14486| drop
14490| return
14494| i32.const 1
14502| i64.const 2
14514| i64.atomic.rmw8.xchg_u $0:%[-2]+$3, %[-1]
14526| drop
14530| return
14534| i32.const 1
14542| i64.const 2
14554| i64.atomic.rmw16.xchg_u $0:%[-2]+$3, %[-1]
14566| drop
14570| return
14574| i32.const 1
14582| i64.const 2
14594| i64.atomic.rmw32.xchg_u $0:%[-2]+$3, %[-1]
14606| drop
14610| return
14614| i32.const 1
14622| i32.const 2
14630| i32.const 3
14638| i32.atomic.rmw.cmpxchg $0:%[-3]+$3, %[-2], %[-1]
14650| drop
14654| return
14658| i32.const 1
14666| i64.const 2
14678| i64.const 3
14690| i64.atomic.rmw.cmpxchg $0:%[-3]+$7, %[-2], %[-1]
14702| drop
14706| return
14710| i32.const 1
14718| i32.const 2
14726| i32.const 3
14734| i32.atomic.rmw8.cmpxchg_u $0:%[-3]+$3, %[-2], %[-1]
14746| drop
14750| return
14754| i32.const 1
14762| i32.const 2
14770| i32.const 3
14778| i32.atomic.rmw16.cmpxchg_u $0:%[-3]+$3, %[-2], %[-1]
14790| drop
14794| return
14798| i32.const 1
14806| i64.const 2
14818| i64.const 3
14830| i64.atomic.rmw8.cmpxchg_u $0:%[-3]+$3, %[-2], %[-1]
14842| drop
14846| return
14850| i32.const 1
14858| i64.const 2
14870| i64.const 3
14882| i64.atomic.rmw16.cmpxchg_u $0:%[-3]+$3, %[-2], %[-1]
14894| drop
14898| return
14902| i32.const 1
14910| i64.const 2
14922| i64.const 3
14934| i64.atomic.rmw32.cmpxchg_u $0:%[-3]+$3, %[-2], %[-1]
14946| drop
14950| return
unreachable() => error: unreachable executed
br() =>
br_table() =>
return() =>
call() =>
call_indirect() =>
return_call() =>
return_call_indirect() =>
drop() =>
select() =>
select_t() =>
get_local() =>
set_local() =>
tee_local() =>
get_global() =>
set_global() =>
i32.load() =>
i64.load() =>
f32.load() =>
f64.load() =>
i32.load8_s() =>
i32.load8_u() =>
i32.load16_s() =>
i32.load16_u() =>
i64.load8_s() =>
i64.load8_u() =>
i64.load16_s() =>
i64.load16_u() =>
i64.load32_s() =>
i64.load32_u() =>
i32.store() =>
i64.store() =>
f32.store() =>
f64.store() =>
i32.store8() =>
i32.store16() =>
i64.store8() =>
i64.store16() =>
i64.store32() =>
current_memory() =>
grow_memory() =>
i32.const() =>
i64.const() =>
f32.const() =>
f64.const() =>
i32.eqz() =>
i32.eq() =>
i32.ne() =>
i32.lt_s() =>
i32.lt_u() =>
i32.gt_s() =>
i32.gt_u() =>
i32.le_s() =>
i32.le_u() =>
i32.ge_s() =>
i32.ge_u() =>
i64.eqz() =>
i64.eq() =>
i64.ne() =>
i64.lt_s() =>
i64.lt_u() =>
i64.gt_s() =>
i64.gt_u() =>
i64.le_s() =>
i64.le_u() =>
i64.ge_s() =>
i64.ge_u() =>
f32.eq() =>
f32.ne() =>
f32.lt() =>
f32.gt() =>
f32.le() =>
f32.ge() =>
f64.eq() =>
f64.ne() =>
f64.lt() =>
f64.gt() =>
f64.le() =>
f64.ge() =>
i32.clz() =>
i32.ctz() =>
i32.popcnt() =>
i32.add() =>
i32.sub() =>
i32.mul() =>
i32.div_s() =>
i32.div_u() =>
i32.rem_s() =>
i32.rem_u() =>
i32.and() =>
i32.or() =>
i32.xor() =>
i32.shl() =>
i32.shr_s() =>
i32.shr_u() =>
i32.rotl() =>
i32.rotr() =>
i64.clz() =>
i64.ctz() =>
i64.popcnt() =>
i64.add() =>
i64.sub() =>
i64.mul() =>
i64.div_s() =>
i64.div_u() =>
i64.rem_s() =>
i64.rem_u() =>
i64.and() =>
i64.or() =>
i64.xor() =>
i64.shl() =>
i64.shr_s() =>
i64.shr_u() =>
i64.rotl() =>
i64.rotr() =>
f32.abs() =>
f32.neg() =>
f32.ceil() =>
f32.floor() =>
f32.trunc() =>
f32.nearest() =>
f32.sqrt() =>
f32.add() =>
f32.sub() =>
f32.mul() =>
f32.div() =>
f32.min() =>
f32.max() =>
f32.copysign() =>
f64.abs() =>
f64.neg() =>
f64.ceil() =>
f64.floor() =>
f64.trunc() =>
f64.nearest() =>
f64.sqrt() =>
f64.add() =>
f64.sub() =>
f64.mul() =>
f64.div() =>
f64.min() =>
f64.max() =>
f64.copysign() =>
i32.wrap/i64() =>
i32.trunc_s/f32() =>
i32.trunc_u/f32() =>
i32.trunc_s/f64() =>
i32.trunc_u/f64() =>
i64.extend_s/i32() =>
i64.extend_u/i32() =>
i64.trunc_s/f32() =>
i64.trunc_u/f32() =>
i64.trunc_s/f64() =>
i64.trunc_u/f64() =>
f32.convert_s/i32() =>
f32.convert_u/i32() =>
f32.convert_s/i64() =>
f32.convert_u/i64() =>
f32.demote/f64() =>
f64.convert_s/i32() =>
f64.convert_u/i32() =>
f64.convert_s/i64() =>
f64.convert_u/i64() =>
f64.promote/f32() =>
i32.reinterpret/f32() =>
f32.reinterpret/i32() =>
i64.reinterpret/f64() =>
f64.reinterpret/i64() =>
i32.extend8_s() =>
i32.extend16_s() =>
i64.extend8_s() =>
i64.extend16_s() =>
i64.extend32_s() =>
alloca() =>
br_unless() =>
called host host.print(i32:1) =>
call_host() =>
data() =>
drop_keep() =>
i32.trunc_s:sat/f32() =>
i32.trunc_u:sat/f32() =>
i32.trunc_s:sat/f64() =>
i32.trunc_u:sat/f64() =>
i64.trunc_s:sat/f32() =>
i64.trunc_u:sat/f32() =>
i64.trunc_s:sat/f64() =>
i64.trunc_u:sat/f64() =>
memory.init() => error: out of bounds memory access: memory.init out of bounds
data.drop() =>
memory.copy() =>
memory.fill() =>
table.init() => error: out of bounds table access: table.init out of bounds
elem.drop() =>
table.copy() => error: out of bounds table access: table.copy out of bounds
v128.load() =>
v128.store() =>
v128.const() =>
i8x16.splat() =>
i8x16.extract_lane_s() =>
i8x16.extract_lane_u() =>
i8x16.replace_lane() =>
i16x8.splat() =>
i16x8.extract_lane_s() =>
i16x8.extract_lane_u() =>
i16x8.replace_lane() =>
i32x4.splat() =>
i32x4.extract_lane() =>
i32x4.replace_lane() =>
i64x2.splat() =>
i64x2.extract_lane() =>
i64x2.replace_lane() =>
f32x4.splat() =>
f32x4.extract_lane() =>
f32x4.replace_lane() =>
f64x2.splat() =>
f64x2.extract_lane() =>
f64x2.replace_lane() =>
i8x16.eq() =>
i8x16.ne() =>
i8x16.lt_s() =>
i8x16.lt_u() =>
i8x16.gt_s() =>
i8x16.gt_u() =>
i8x16.le_s() =>
i8x16.le_u() =>
i8x16.ge_s() =>
i8x16.ge_u() =>
i16x8.eq() =>
i16x8.ne() =>
i16x8.lt_s() =>
i16x8.lt_u() =>
i16x8.gt_s() =>
i16x8.gt_u() =>
i16x8.le_s() =>
i16x8.le_u() =>
i16x8.ge_s() =>
i16x8.ge_u() =>
i32x4.eq() =>
i32x4.ne() =>
i32x4.lt_s() =>
i32x4.lt_u() =>
i32x4.gt_s() =>
i32x4.gt_u() =>
i32x4.le_s() =>
i32x4.le_u() =>
i32x4.ge_s() =>
i32x4.ge_u() =>
f32x4.eq() =>
f32x4.ne() =>
f32x4.lt() =>
f32x4.gt() =>
f32x4.le() =>
f32x4.ge() =>
f64x2.eq() =>
f64x2.ne() =>
f64x2.lt() =>
f64x2.gt() =>
f64x2.le() =>
f64x2.ge() =>
v128.not() =>
v128.and() =>
v128.or() =>
v128.xor() =>
v128.bitselect() =>
i8x16.neg() =>
i8x16.any_true() =>
i8x16.all_true() =>
i8x16.shl() =>
i8x16.shr_s() =>
i8x16.shr_u() =>
i8x16.add() =>
i8x16.add_saturate_s() =>
i8x16.add_saturate_u() =>
i8x16.sub() =>
i8x16.sub_saturate_s() =>
i8x16.sub_saturate_u() =>
i8x16.mul() =>
i16x8.neg() =>
i16x8.any_true() =>
i16x8.all_true() =>
i16x8.shl() =>
i16x8.shr_s() =>
i16x8.shr_u() =>
i16x8.add() =>
i16x8.add_saturate_s() =>
i16x8.add_saturate_u() =>
i16x8.sub() =>
i16x8.sub_saturate_s() =>
i16x8.sub_saturate_u() =>
i16x8.mul() =>
i32x4.neg() =>
i32x4.any_true() =>
i32x4.all_true() =>
i32x4.shl() =>
i32x4.shr_s() =>
i32x4.shr_u() =>
i32x4.add() =>
i32x4.sub() =>
i32x4.mul() =>
i64x2.neg() =>
i64x2.any_true() =>
i64x2.all_true() =>
i64x2.shl() =>
i64x2.shr_s() =>
i64x2.shr_u() =>
i64x2.add() =>
i64x2.sub() =>
f32x4.abs() =>
f32x4.neg() =>
f32x4.sqrt() =>
f32x4.add() =>
f32x4.sub() =>
f32x4.mul() =>
f32x4.div() =>
f32x4.min() =>
f32x4.max() =>
f64x2.abs() =>
f64x2.neg() =>
f64x2.sqrt() =>
f64x2.add() =>
f64x2.sub() =>
f64x2.mul() =>
f64x2.div() =>
f64x2.min() =>
f64x2.max() =>
i32x4.trunc_sat_f32x4_s() =>
i32x4.trunc_sat_f32x4_u() =>
i64x2.trunc_sat_f64x2_s() =>
i64x2.trunc_sat_f64x2_u() =>
f32x4.convert_i32x4_s() =>
f32x4.convert_i32x4_u() =>
f64x2.convert_i64x2_s() =>
f64x2.convert_i64x2_u() =>
v8x16.swizzle() =>
v8x16.shuffle() =>
i8x16.load_splat() =>
i16x8.load_splat() =>
i32x4.load_splat() =>
i64x2.load_splat() =>
i8x16.narrow_i16x8_s() => error: not implemented
i8x16.narrow_i16x8_u() => error: not implemented
i16x8.narrow_i32x4_s() => error: not implemented
i16x8.narrow_i32x4_u() => error: not implemented
i16x8.widen_low_i8x16_s() => error: not implemented
i16x8.widen_high_i8x16_s() => error: not implemented
i16x8.widen_low_i8x16_u() => error: not implemented
i16x8.widen_high_i8x16_u() => error: not implemented
i32x4.widen_low_i16x8_s() => error: not implemented
i32x4.widen_high_i16x8_s() => error: not implemented
i32x4.widen_low_i16x8_u() => error: not implemented
i32x4.widen_high_i16x8_u() => error: not implemented
i16x8.load8x8_s() => error: not implemented
i16x8.load8x8_u() => error: not implemented
i32x4.load16x4_s() => error: not implemented
i32x4.load16x4_u() => error: not implemented
i64x2.load32x2_s() => error: not implemented
i64x2.load32x2_u() => error: not implemented
v128.andnot() => error: not implemented
i8x16.avgr_u() => error: not implemented
i16x8.avgr_u() => error: not implemented
atomic.notify() => error: unreachable executed
i32.atomic.wait() => error: unreachable executed
i64.atomic.wait() => error: unreachable executed
i32.atomic.load() =>
i64.atomic.load() =>
i32.atomic.load8_u() =>
i32.atomic.load16_u() =>
i64.atomic.load8_u() =>
i64.atomic.load16_u() =>
i64.atomic.load32_u() =>
i32.atomic.store() =>
i64.atomic.store() =>
i32.atomic.store8() =>
i32.atomic.store16() =>
i64.atomic.store8() =>
i64.atomic.store16() =>
i64.atomic.store32() =>
i32.atomic.rmw.add() =>
i64.atomic.rmw.add() =>
i32.atomic.rmw8.add_u() =>
i32.atomic.rmw16.add_u() =>
i64.atomic.rmw8.add_u() =>
i64.atomic.rmw16.add_u() =>
i64.atomic.rmw32.add_u() =>
i32.atomic.rmw.sub() =>
i64.atomic.rmw.sub() =>
i32.atomic.rmw8.sub_u() =>
i32.atomic.rmw16.sub_u() =>
i64.atomic.rmw8.sub_u() =>
i64.atomic.rmw16.sub_u() =>
i64.atomic.rmw32.sub_u() =>
i32.atomic.rmw.and() =>
i64.atomic.rmw.and() =>
i32.atomic.rmw8.and_u() =>
i32.atomic.rmw16.and_u() =>
i64.atomic.rmw8.and_u() =>
i64.atomic.rmw16.and_u() =>
i64.atomic.rmw32.and_u() =>
i32.atomic.rmw.or() =>
i64.atomic.rmw.or() =>
i32.atomic.rmw8.or_u() =>
i32.atomic.rmw16.or_u() =>
i64.atomic.rmw8.or_u() =>
i64.atomic.rmw16.or_u() =>
i64.atomic.rmw32.or_u() =>
i32.atomic.rmw.xor() =>
i64.atomic.rmw.xor() =>
i32.atomic.rmw8.xor_u() =>
i32.atomic.rmw16.xor_u() =>
i64.atomic.rmw8.xor_u() =>
i64.atomic.rmw16.xor_u() =>
i64.atomic.rmw32.xor_u() =>
i32.atomic.rmw.xchg() =>
i64.atomic.rmw.xchg() =>
i32.atomic.rmw8.xchg_u() =>
i32.atomic.rmw16.xchg_u() =>
i64.atomic.rmw8.xchg_u() =>
i64.atomic.rmw16.xchg_u() =>
i64.atomic.rmw32.xchg_u() =>
i32.atomic.rmw.cmpxchg() =>
i64.atomic.rmw.cmpxchg() =>
i32.atomic.rmw8.cmpxchg_u() =>
i32.atomic.rmw16.cmpxchg_u() =>
i64.atomic.rmw8.cmpxchg_u() =>
i64.atomic.rmw16.cmpxchg_u() =>
i64.atomic.rmw32.cmpxchg_u() =>
;;; STDOUT ;;)
