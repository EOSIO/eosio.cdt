;;; RUN: %(wasm-opcodecnt)s
;;; ARGS: --help
(;; STDOUT ;;;
usage: wasm-opcodecnt [options] filename+

  Read a file in the wasm binary format, and count opcode usage for
  instructions.

examples:
  # parse binary file test.wasm and write pcode dist file test.dist
  $ wasm-opcodecnt test.wasm -o test.dist

options:
      --help                                  Print this help message
      --version                               Print version information
  -v, --verbose                               Use multiple times for more info
      --enable-exceptions                     Enable Experimental exception handling
      --disable-mutable-globals               Disable Import/export mutable globals
      --enable-saturating-float-to-int        Enable Saturating float-to-int operators
      --enable-sign-extension                 Enable Sign-extension operators
      --enable-simd                           Enable SIMD support
      --enable-threads                        Enable Threading support
      --enable-multi-value                    Enable Multi-value
      --enable-tail-call                      Enable Tail-call support
      --enable-bulk-memory                    Enable Bulk-memory operations
      --enable-reference-types                Enable Reference types (anyref)
      --enable-annotations                    Enable Custom annotation syntax
      --enable-all                            Enable all features
  -o, --output=FILENAME                       Output file for the opcode counts, by default use stdout
  -c, --cutoff=N                              Cutoff for reporting counts less than N
  -s, --separator=SEPARATOR                   Separator text between element and count when reporting counts
;;; STDOUT ;;)
